/*
 * generated by Xtext 2.12.0
 */
package de.fhdo.ddmm.technology.ide.contentassist.antlr;

import com.google.inject.Inject;
import de.fhdo.ddmm.technology.ide.contentassist.antlr.internal.InternalTechnologyDslParser;
import de.fhdo.ddmm.technology.services.TechnologyDslGrammarAccess;
import java.util.HashMap;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;

public class TechnologyDslParser extends AbstractContentAssistParser {

	@Inject
	private TechnologyDslGrammarAccess grammarAccess;

	private Map<AbstractElement, String> nameMappings;

	@Override
	protected InternalTechnologyDslParser createParser() {
		InternalTechnologyDslParser result = new InternalTechnologyDslParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getTechnologyAccess().getAlternatives_4_2(), "rule__Technology__Alternatives_4_2");
					put(grammarAccess.getTechnologySpecificPropertyAccess().getAlternatives_2(), "rule__TechnologySpecificProperty__Alternatives_2");
					put(grammarAccess.getPrimitiveValueAccess().getAlternatives(), "rule__PrimitiveValue__Alternatives");
					put(grammarAccess.getServiceAspectPointcutAccess().getAlternatives(), "rule__ServiceAspectPointcut__Alternatives");
					put(grammarAccess.getServiceAspectAccess().getAlternatives_5(), "rule__ServiceAspect__Alternatives_5");
					put(grammarAccess.getOperationAspectAccess().getAlternatives_5(), "rule__OperationAspect__Alternatives_5");
					put(grammarAccess.getDataModelAccess().getAlternatives_1(), "rule__DataModel__Alternatives_1");
					put(grammarAccess.getVersionAccess().getAlternatives_3(), "rule__Version__Alternatives_3");
					put(grammarAccess.getComplexTypeAccess().getAlternatives(), "rule__ComplexType__Alternatives");
					put(grammarAccess.getListTypeAccess().getAlternatives(), "rule__ListType__Alternatives");
					put(grammarAccess.getDataFieldAccess().getAlternatives_1(), "rule__DataField__Alternatives_1");
					put(grammarAccess.getPrimitiveTypeAccess().getAlternatives(), "rule__PrimitiveType__Alternatives");
					put(grammarAccess.getExchangePatternAccess().getAlternatives(), "rule__ExchangePattern__Alternatives");
					put(grammarAccess.getCommunicationTypeAccess().getAlternatives(), "rule__CommunicationType__Alternatives");
					put(grammarAccess.getCompatibilityDirectionAccess().getAlternatives(), "rule__CompatibilityDirection__Alternatives");
					put(grammarAccess.getServiceJoinPointTypeAccess().getAlternatives(), "rule__ServiceJoinPointType__Alternatives");
					put(grammarAccess.getOperationJoinPointTypeAccess().getAlternatives(), "rule__OperationJoinPointType__Alternatives");
					put(grammarAccess.getTechnologyAccess().getGroup(), "rule__Technology__Group__0");
					put(grammarAccess.getTechnologyAccess().getGroup_4(), "rule__Technology__Group_4__0");
					put(grammarAccess.getTechnologyAccess().getGroup_4_3(), "rule__Technology__Group_4_3__0");
					put(grammarAccess.getTechnologyAccess().getGroup_5(), "rule__Technology__Group_5__0");
					put(grammarAccess.getTechnologyAccess().getGroup_6(), "rule__Technology__Group_6__0");
					put(grammarAccess.getTechnologyAccess().getGroup_7(), "rule__Technology__Group_7__0");
					put(grammarAccess.getTechnologyAccess().getGroup_8(), "rule__Technology__Group_8__0");
					put(grammarAccess.getTechnologyAccess().getGroup_9(), "rule__Technology__Group_9__0");
					put(grammarAccess.getTechnologyImportAccess().getGroup(), "rule__TechnologyImport__Group__0");
					put(grammarAccess.getProtocolAccess().getGroup(), "rule__Protocol__Group__0");
					put(grammarAccess.getProtocolAccess().getGroup_5(), "rule__Protocol__Group_5__0");
					put(grammarAccess.getProtocolAccess().getGroup_6(), "rule__Protocol__Group_6__0");
					put(grammarAccess.getTechnologySpecificPrimitiveTypeAccess().getGroup(), "rule__TechnologySpecificPrimitiveType__Group__0");
					put(grammarAccess.getTechnologySpecificPrimitiveTypeAccess().getGroup_3(), "rule__TechnologySpecificPrimitiveType__Group_3__0");
					put(grammarAccess.getTechnologySpecificPrimitiveTypeAccess().getGroup_3_3(), "rule__TechnologySpecificPrimitiveType__Group_3_3__0");
					put(grammarAccess.getTechnologySpecificListTypeAccess().getGroup(), "rule__TechnologySpecificListType__Group__0");
					put(grammarAccess.getTechnologySpecificDataStructureAccess().getGroup(), "rule__TechnologySpecificDataStructure__Group__0");
					put(grammarAccess.getPossiblyImportedTechnologySpecificTypeAccess().getGroup(), "rule__PossiblyImportedTechnologySpecificType__Group__0");
					put(grammarAccess.getPossiblyImportedTechnologySpecificTypeAccess().getGroup_0(), "rule__PossiblyImportedTechnologySpecificType__Group_0__0");
					put(grammarAccess.getCompatibilityMatrixEntryAccess().getGroup(), "rule__CompatibilityMatrixEntry__Group__0");
					put(grammarAccess.getCompatibilityMatrixEntryAccess().getGroup_1(), "rule__CompatibilityMatrixEntry__Group_1__0");
					put(grammarAccess.getDeploymentTechnologyAccess().getGroup(), "rule__DeploymentTechnology__Group__0");
					put(grammarAccess.getDeploymentTechnologyAccess().getGroup_6(), "rule__DeploymentTechnology__Group_6__0");
					put(grammarAccess.getDeploymentTechnologyAccess().getGroup_8(), "rule__DeploymentTechnology__Group_8__0");
					put(grammarAccess.getInfrastructureTechnologyAccess().getGroup(), "rule__InfrastructureTechnology__Group__0");
					put(grammarAccess.getInfrastructureTechnologyAccess().getGroup_6(), "rule__InfrastructureTechnology__Group_6__0");
					put(grammarAccess.getInfrastructureTechnologyAccess().getGroup_8(), "rule__InfrastructureTechnology__Group_8__0");
					put(grammarAccess.getOperationEnvironmentAccess().getGroup(), "rule__OperationEnvironment__Group__0");
					put(grammarAccess.getTechnologySpecificPropertyAccess().getGroup(), "rule__TechnologySpecificProperty__Group__0");
					put(grammarAccess.getTechnologySpecificPropertyAccess().getGroup_2_0(), "rule__TechnologySpecificProperty__Group_2_0__0");
					put(grammarAccess.getServiceAspectPointcutAccess().getGroup_0(), "rule__ServiceAspectPointcut__Group_0__0");
					put(grammarAccess.getServiceAspectPointcutAccess().getGroup_1(), "rule__ServiceAspectPointcut__Group_1__0");
					put(grammarAccess.getServiceAspectPointcutAccess().getGroup_2(), "rule__ServiceAspectPointcut__Group_2__0");
					put(grammarAccess.getServiceAspectPointcutAccess().getGroup_3(), "rule__ServiceAspectPointcut__Group_3__0");
					put(grammarAccess.getServiceAspectPointcutSelectorAccess().getGroup(), "rule__ServiceAspectPointcutSelector__Group__0");
					put(grammarAccess.getServiceAspectPointcutSelectorAccess().getGroup_3(), "rule__ServiceAspectPointcutSelector__Group_3__0");
					put(grammarAccess.getServiceAspectAccess().getGroup(), "rule__ServiceAspect__Group__0");
					put(grammarAccess.getServiceAspectAccess().getGroup_4(), "rule__ServiceAspect__Group_4__0");
					put(grammarAccess.getServiceAspectAccess().getGroup_5_0(), "rule__ServiceAspect__Group_5_0__0");
					put(grammarAccess.getOperationAspectAccess().getGroup(), "rule__OperationAspect__Group__0");
					put(grammarAccess.getOperationAspectAccess().getGroup_4(), "rule__OperationAspect__Group_4__0");
					put(grammarAccess.getOperationAspectAccess().getGroup_5_0(), "rule__OperationAspect__Group_5_0__0");
					put(grammarAccess.getDataModelAccess().getGroup(), "rule__DataModel__Group__0");
					put(grammarAccess.getComplexTypeImportAccess().getGroup(), "rule__ComplexTypeImport__Group__0");
					put(grammarAccess.getVersionAccess().getGroup(), "rule__Version__Group__0");
					put(grammarAccess.getContextAccess().getGroup(), "rule__Context__Group__0");
					put(grammarAccess.getDataStructureAccess().getGroup(), "rule__DataStructure__Group__0");
					put(grammarAccess.getDataStructureAccess().getGroup_2(), "rule__DataStructure__Group_2__0");
					put(grammarAccess.getDataStructureAccess().getGroup_4(), "rule__DataStructure__Group_4__0");
					put(grammarAccess.getDataStructureAccess().getGroup_4_1(), "rule__DataStructure__Group_4_1__0");
					put(grammarAccess.getListTypeAccess().getGroup_0(), "rule__ListType__Group_0__0");
					put(grammarAccess.getListTypeAccess().getGroup_0_4(), "rule__ListType__Group_0_4__0");
					put(grammarAccess.getListTypeAccess().getGroup_1(), "rule__ListType__Group_1__0");
					put(grammarAccess.getDataFieldAccess().getGroup(), "rule__DataField__Group__0");
					put(grammarAccess.getPossiblyImportedComplexTypeAccess().getGroup(), "rule__PossiblyImportedComplexType__Group__0");
					put(grammarAccess.getPossiblyImportedComplexTypeAccess().getGroup_0(), "rule__PossiblyImportedComplexType__Group_0__0");
					put(grammarAccess.getPrimitiveTypeAccess().getGroup_0(), "rule__PrimitiveType__Group_0__0");
					put(grammarAccess.getPrimitiveTypeAccess().getGroup_1(), "rule__PrimitiveType__Group_1__0");
					put(grammarAccess.getPrimitiveTypeAccess().getGroup_2(), "rule__PrimitiveType__Group_2__0");
					put(grammarAccess.getPrimitiveTypeAccess().getGroup_3(), "rule__PrimitiveType__Group_3__0");
					put(grammarAccess.getPrimitiveTypeAccess().getGroup_4(), "rule__PrimitiveType__Group_4__0");
					put(grammarAccess.getPrimitiveTypeAccess().getGroup_5(), "rule__PrimitiveType__Group_5__0");
					put(grammarAccess.getPrimitiveTypeAccess().getGroup_6(), "rule__PrimitiveType__Group_6__0");
					put(grammarAccess.getPrimitiveTypeAccess().getGroup_7(), "rule__PrimitiveType__Group_7__0");
					put(grammarAccess.getPrimitiveTypeAccess().getGroup_8(), "rule__PrimitiveType__Group_8__0");
					put(grammarAccess.getPrimitiveTypeAccess().getGroup_9(), "rule__PrimitiveType__Group_9__0");
					put(grammarAccess.getQualifiedNameAccess().getGroup(), "rule__QualifiedName__Group__0");
					put(grammarAccess.getQualifiedNameAccess().getGroup_1(), "rule__QualifiedName__Group_1__0");
					put(grammarAccess.getTechnologyAccess().getImportsAssignment_0(), "rule__Technology__ImportsAssignment_0");
					put(grammarAccess.getTechnologyAccess().getNameAssignment_2(), "rule__Technology__NameAssignment_2");
					put(grammarAccess.getTechnologyAccess().getPrimitiveTypesAssignment_4_2_0(), "rule__Technology__PrimitiveTypesAssignment_4_2_0");
					put(grammarAccess.getTechnologyAccess().getListTypesAssignment_4_2_1(), "rule__Technology__ListTypesAssignment_4_2_1");
					put(grammarAccess.getTechnologyAccess().getDataStructuresAssignment_4_2_2(), "rule__Technology__DataStructuresAssignment_4_2_2");
					put(grammarAccess.getTechnologyAccess().getCompatibilityEntriesAssignment_4_3_3(), "rule__Technology__CompatibilityEntriesAssignment_4_3_3");
					put(grammarAccess.getTechnologyAccess().getProtocolsAssignment_5_2(), "rule__Technology__ProtocolsAssignment_5_2");
					put(grammarAccess.getTechnologyAccess().getServiceAspectsAssignment_6_3(), "rule__Technology__ServiceAspectsAssignment_6_3");
					put(grammarAccess.getTechnologyAccess().getDeploymentTechnologiesAssignment_7_3(), "rule__Technology__DeploymentTechnologiesAssignment_7_3");
					put(grammarAccess.getTechnologyAccess().getInfrastructureTechnologiesAssignment_8_3(), "rule__Technology__InfrastructureTechnologiesAssignment_8_3");
					put(grammarAccess.getTechnologyAccess().getOperationAspectsAssignment_9_3(), "rule__Technology__OperationAspectsAssignment_9_3");
					put(grammarAccess.getTechnologyImportAccess().getImportURIAssignment_3(), "rule__TechnologyImport__ImportURIAssignment_3");
					put(grammarAccess.getTechnologyImportAccess().getNameAssignment_5(), "rule__TechnologyImport__NameAssignment_5");
					put(grammarAccess.getProtocolAccess().getCommunicationTypeAssignment_0(), "rule__Protocol__CommunicationTypeAssignment_0");
					put(grammarAccess.getProtocolAccess().getNameAssignment_1(), "rule__Protocol__NameAssignment_1");
					put(grammarAccess.getProtocolAccess().getDataFormatsAssignment_4(), "rule__Protocol__DataFormatsAssignment_4");
					put(grammarAccess.getProtocolAccess().getDataFormatsAssignment_5_1(), "rule__Protocol__DataFormatsAssignment_5_1");
					put(grammarAccess.getProtocolAccess().getDefaultAssignment_6_0(), "rule__Protocol__DefaultAssignment_6_0");
					put(grammarAccess.getProtocolAccess().getDefaultFormatAssignment_6_3(), "rule__Protocol__DefaultFormatAssignment_6_3");
					put(grammarAccess.getDataFormatAccess().getFormatNameAssignment(), "rule__DataFormat__FormatNameAssignment");
					put(grammarAccess.getTechnologySpecificPrimitiveTypeAccess().getNameAssignment_2(), "rule__TechnologySpecificPrimitiveType__NameAssignment_2");
					put(grammarAccess.getTechnologySpecificPrimitiveTypeAccess().getBasicBuiltinPrimitiveTypesAssignment_3_2(), "rule__TechnologySpecificPrimitiveType__BasicBuiltinPrimitiveTypesAssignment_3_2");
					put(grammarAccess.getTechnologySpecificPrimitiveTypeAccess().getBasicBuiltinPrimitiveTypesAssignment_3_3_1(), "rule__TechnologySpecificPrimitiveType__BasicBuiltinPrimitiveTypesAssignment_3_3_1");
					put(grammarAccess.getTechnologySpecificPrimitiveTypeAccess().getDefaultAssignment_3_4(), "rule__TechnologySpecificPrimitiveType__DefaultAssignment_3_4");
					put(grammarAccess.getTechnologySpecificListTypeAccess().getNameAssignment_2(), "rule__TechnologySpecificListType__NameAssignment_2");
					put(grammarAccess.getTechnologySpecificDataStructureAccess().getNameAssignment_2(), "rule__TechnologySpecificDataStructure__NameAssignment_2");
					put(grammarAccess.getPossiblyImportedTechnologySpecificTypeAccess().getImportAssignment_0_0(), "rule__PossiblyImportedTechnologySpecificType__ImportAssignment_0_0");
					put(grammarAccess.getPossiblyImportedTechnologySpecificTypeAccess().getTypeAssignment_1(), "rule__PossiblyImportedTechnologySpecificType__TypeAssignment_1");
					put(grammarAccess.getCompatibilityMatrixEntryAccess().getCompatibleTypesAssignment_0(), "rule__CompatibilityMatrixEntry__CompatibleTypesAssignment_0");
					put(grammarAccess.getCompatibilityMatrixEntryAccess().getCompatibleTypesAssignment_1_1(), "rule__CompatibilityMatrixEntry__CompatibleTypesAssignment_1_1");
					put(grammarAccess.getCompatibilityMatrixEntryAccess().getDirectionAssignment_2(), "rule__CompatibilityMatrixEntry__DirectionAssignment_2");
					put(grammarAccess.getCompatibilityMatrixEntryAccess().getMappingTypeAssignment_3(), "rule__CompatibilityMatrixEntry__MappingTypeAssignment_3");
					put(grammarAccess.getDeploymentTechnologyAccess().getNameAssignment_0(), "rule__DeploymentTechnology__NameAssignment_0");
					put(grammarAccess.getDeploymentTechnologyAccess().getOperationEnvironmentsAssignment_5(), "rule__DeploymentTechnology__OperationEnvironmentsAssignment_5");
					put(grammarAccess.getDeploymentTechnologyAccess().getOperationEnvironmentsAssignment_6_1(), "rule__DeploymentTechnology__OperationEnvironmentsAssignment_6_1");
					put(grammarAccess.getDeploymentTechnologyAccess().getServicePropertiesAssignment_8_3(), "rule__DeploymentTechnology__ServicePropertiesAssignment_8_3");
					put(grammarAccess.getInfrastructureTechnologyAccess().getNameAssignment_0(), "rule__InfrastructureTechnology__NameAssignment_0");
					put(grammarAccess.getInfrastructureTechnologyAccess().getOperationEnvironmentsAssignment_5(), "rule__InfrastructureTechnology__OperationEnvironmentsAssignment_5");
					put(grammarAccess.getInfrastructureTechnologyAccess().getOperationEnvironmentsAssignment_6_1(), "rule__InfrastructureTechnology__OperationEnvironmentsAssignment_6_1");
					put(grammarAccess.getInfrastructureTechnologyAccess().getServicePropertiesAssignment_8_3(), "rule__InfrastructureTechnology__ServicePropertiesAssignment_8_3");
					put(grammarAccess.getOperationEnvironmentAccess().getEnvironmentNameAssignment_0(), "rule__OperationEnvironment__EnvironmentNameAssignment_0");
					put(grammarAccess.getOperationEnvironmentAccess().getDefaultAssignment_1(), "rule__OperationEnvironment__DefaultAssignment_1");
					put(grammarAccess.getTechnologySpecificPropertyAccess().getTypeAssignment_0(), "rule__TechnologySpecificProperty__TypeAssignment_0");
					put(grammarAccess.getTechnologySpecificPropertyAccess().getNameAssignment_1(), "rule__TechnologySpecificProperty__NameAssignment_1");
					put(grammarAccess.getTechnologySpecificPropertyAccess().getDefaultValueAssignment_2_0_1(), "rule__TechnologySpecificProperty__DefaultValueAssignment_2_0_1");
					put(grammarAccess.getTechnologySpecificPropertyAccess().getMandatoryAssignment_2_1(), "rule__TechnologySpecificProperty__MandatoryAssignment_2_1");
					put(grammarAccess.getPrimitiveValueAccess().getNumericValueAssignment_0(), "rule__PrimitiveValue__NumericValueAssignment_0");
					put(grammarAccess.getPrimitiveValueAccess().getBooleanValueAssignment_1(), "rule__PrimitiveValue__BooleanValueAssignment_1");
					put(grammarAccess.getPrimitiveValueAccess().getStringValueAssignment_2(), "rule__PrimitiveValue__StringValueAssignment_2");
					put(grammarAccess.getServiceAspectPointcutAccess().getForExchangePatternAssignment_0_0(), "rule__ServiceAspectPointcut__ForExchangePatternAssignment_0_0");
					put(grammarAccess.getServiceAspectPointcutAccess().getExchangePatternAssignment_0_2(), "rule__ServiceAspectPointcut__ExchangePatternAssignment_0_2");
					put(grammarAccess.getServiceAspectPointcutAccess().getForCommunicationTypeAssignment_1_0(), "rule__ServiceAspectPointcut__ForCommunicationTypeAssignment_1_0");
					put(grammarAccess.getServiceAspectPointcutAccess().getCommunicationTypeAssignment_1_2(), "rule__ServiceAspectPointcut__CommunicationTypeAssignment_1_2");
					put(grammarAccess.getServiceAspectPointcutAccess().getForProtocolAssignment_2_0(), "rule__ServiceAspectPointcut__ForProtocolAssignment_2_0");
					put(grammarAccess.getServiceAspectPointcutAccess().getProtocolAssignment_2_2(), "rule__ServiceAspectPointcut__ProtocolAssignment_2_2");
					put(grammarAccess.getServiceAspectPointcutAccess().getForDataFormatAssignment_3_0(), "rule__ServiceAspectPointcut__ForDataFormatAssignment_3_0");
					put(grammarAccess.getServiceAspectPointcutAccess().getDataFormatAssignment_3_2(), "rule__ServiceAspectPointcut__DataFormatAssignment_3_2");
					put(grammarAccess.getServiceAspectPointcutSelectorAccess().getPointcutsAssignment_2(), "rule__ServiceAspectPointcutSelector__PointcutsAssignment_2");
					put(grammarAccess.getServiceAspectPointcutSelectorAccess().getPointcutsAssignment_3_1(), "rule__ServiceAspectPointcutSelector__PointcutsAssignment_3_1");
					put(grammarAccess.getServiceAspectAccess().getNameAssignment_1(), "rule__ServiceAspect__NameAssignment_1");
					put(grammarAccess.getServiceAspectAccess().getJoinPointsAssignment_3(), "rule__ServiceAspect__JoinPointsAssignment_3");
					put(grammarAccess.getServiceAspectAccess().getJoinPointsAssignment_4_1(), "rule__ServiceAspect__JoinPointsAssignment_4_1");
					put(grammarAccess.getServiceAspectAccess().getPointcutSelectorsAssignment_5_0_1(), "rule__ServiceAspect__PointcutSelectorsAssignment_5_0_1");
					put(grammarAccess.getServiceAspectAccess().getPropertiesAssignment_5_0_2(), "rule__ServiceAspect__PropertiesAssignment_5_0_2");
					put(grammarAccess.getOperationAspectAccess().getNameAssignment_1(), "rule__OperationAspect__NameAssignment_1");
					put(grammarAccess.getOperationAspectAccess().getJoinPointsAssignment_3(), "rule__OperationAspect__JoinPointsAssignment_3");
					put(grammarAccess.getOperationAspectAccess().getJoinPointsAssignment_4_1(), "rule__OperationAspect__JoinPointsAssignment_4_1");
					put(grammarAccess.getOperationAspectAccess().getPropertiesAssignment_5_0_1(), "rule__OperationAspect__PropertiesAssignment_5_0_1");
					put(grammarAccess.getDataModelAccess().getComplexTypeImportsAssignment_0(), "rule__DataModel__ComplexTypeImportsAssignment_0");
					put(grammarAccess.getDataModelAccess().getVersionsAssignment_1_0(), "rule__DataModel__VersionsAssignment_1_0");
					put(grammarAccess.getDataModelAccess().getContextsAssignment_1_1(), "rule__DataModel__ContextsAssignment_1_1");
					put(grammarAccess.getDataModelAccess().getComplexTypesAssignment_1_2(), "rule__DataModel__ComplexTypesAssignment_1_2");
					put(grammarAccess.getComplexTypeImportAccess().getImportURIAssignment_3(), "rule__ComplexTypeImport__ImportURIAssignment_3");
					put(grammarAccess.getComplexTypeImportAccess().getNameAssignment_5(), "rule__ComplexTypeImport__NameAssignment_5");
					put(grammarAccess.getVersionAccess().getNameAssignment_1(), "rule__Version__NameAssignment_1");
					put(grammarAccess.getVersionAccess().getComplexTypesAssignment_3_0(), "rule__Version__ComplexTypesAssignment_3_0");
					put(grammarAccess.getVersionAccess().getContextsAssignment_3_1(), "rule__Version__ContextsAssignment_3_1");
					put(grammarAccess.getContextAccess().getNameAssignment_1(), "rule__Context__NameAssignment_1");
					put(grammarAccess.getContextAccess().getComplexTypesAssignment_3(), "rule__Context__ComplexTypesAssignment_3");
					put(grammarAccess.getDataStructureAccess().getNameAssignment_1(), "rule__DataStructure__NameAssignment_1");
					put(grammarAccess.getDataStructureAccess().getSuperAssignment_2_1(), "rule__DataStructure__SuperAssignment_2_1");
					put(grammarAccess.getDataStructureAccess().getDataFieldsAssignment_4_0(), "rule__DataStructure__DataFieldsAssignment_4_0");
					put(grammarAccess.getDataStructureAccess().getDataFieldsAssignment_4_1_1(), "rule__DataStructure__DataFieldsAssignment_4_1_1");
					put(grammarAccess.getListTypeAccess().getNameAssignment_0_1(), "rule__ListType__NameAssignment_0_1");
					put(grammarAccess.getListTypeAccess().getDataFieldsAssignment_0_3(), "rule__ListType__DataFieldsAssignment_0_3");
					put(grammarAccess.getListTypeAccess().getDataFieldsAssignment_0_4_1(), "rule__ListType__DataFieldsAssignment_0_4_1");
					put(grammarAccess.getListTypeAccess().getNameAssignment_1_1(), "rule__ListType__NameAssignment_1_1");
					put(grammarAccess.getListTypeAccess().getPrimitiveTypeAssignment_1_3(), "rule__ListType__PrimitiveTypeAssignment_1_3");
					put(grammarAccess.getDataFieldAccess().getHiddenAssignment_0(), "rule__DataField__HiddenAssignment_0");
					put(grammarAccess.getDataFieldAccess().getPrimitiveTypeAssignment_1_0(), "rule__DataField__PrimitiveTypeAssignment_1_0");
					put(grammarAccess.getDataFieldAccess().getComplexTypeAssignment_1_1(), "rule__DataField__ComplexTypeAssignment_1_1");
					put(grammarAccess.getDataFieldAccess().getNameAssignment_2(), "rule__DataField__NameAssignment_2");
					put(grammarAccess.getPossiblyImportedComplexTypeAccess().getImportAssignment_0_0(), "rule__PossiblyImportedComplexType__ImportAssignment_0_0");
					put(grammarAccess.getPossiblyImportedComplexTypeAccess().getComplexTypeAssignment_1(), "rule__PossiblyImportedComplexType__ComplexTypeAssignment_1");
				}
			};
		}
		return nameMappings.get(element);
	}
			
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public TechnologyDslGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(TechnologyDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
