/*
 * generated by Xtext 2.12.0
 */
package de.fhdo.ddmm.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import de.fhdo.ddmm.data.services.DataDslGrammarAccess;
import de.fhdo.ddmm.technology.services.TechnologyDslGrammarAccess;
import java.util.List;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.EnumLiteralDeclaration;
import org.eclipse.xtext.EnumRule;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractEnumRuleElementFinder;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractGrammarElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class ServiceDslGrammarAccess extends AbstractGrammarElementFinder {
	
	public class ServiceModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fhdo.ddmm.ServiceDsl.ServiceModel");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cImportsAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cImportsImportParserRuleCall_0_0 = (RuleCall)cImportsAssignment_0.eContents().get(0);
		private final Assignment cMicroservicesAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cMicroservicesMicroserviceParserRuleCall_1_0 = (RuleCall)cMicroservicesAssignment_1.eContents().get(0);
		
		//ServiceModel:
		//	imports+=Import*
		//	microservices+=Microservice+;
		@Override public ParserRule getRule() { return rule; }
		
		//imports+=Import* microservices+=Microservice+
		public Group getGroup() { return cGroup; }
		
		//imports+=Import*
		public Assignment getImportsAssignment_0() { return cImportsAssignment_0; }
		
		//Import
		public RuleCall getImportsImportParserRuleCall_0_0() { return cImportsImportParserRuleCall_0_0; }
		
		//microservices+=Microservice+
		public Assignment getMicroservicesAssignment_1() { return cMicroservicesAssignment_1; }
		
		//Microservice
		public RuleCall getMicroservicesMicroserviceParserRuleCall_1_0() { return cMicroservicesMicroserviceParserRuleCall_1_0; }
	}
	public class ImportElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fhdo.ddmm.ServiceDsl.Import");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cImportKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cImportTypeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cImportTypeImportTypeEnumRuleCall_1_0 = (RuleCall)cImportTypeAssignment_1.eContents().get(0);
		private final Keyword cFromKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cImportURIAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cImportURISTRINGTerminalRuleCall_3_0 = (RuleCall)cImportURIAssignment_3.eContents().get(0);
		private final Keyword cAsKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cNameAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cNameIDTerminalRuleCall_5_0 = (RuleCall)cNameAssignment_5.eContents().get(0);
		
		//Import:
		//	'import' importType=ImportType 'from' importURI=STRING 'as' name=ID;
		@Override public ParserRule getRule() { return rule; }
		
		//'import' importType=ImportType 'from' importURI=STRING 'as' name=ID
		public Group getGroup() { return cGroup; }
		
		//'import'
		public Keyword getImportKeyword_0() { return cImportKeyword_0; }
		
		//importType=ImportType
		public Assignment getImportTypeAssignment_1() { return cImportTypeAssignment_1; }
		
		//ImportType
		public RuleCall getImportTypeImportTypeEnumRuleCall_1_0() { return cImportTypeImportTypeEnumRuleCall_1_0; }
		
		//'from'
		public Keyword getFromKeyword_2() { return cFromKeyword_2; }
		
		//importURI=STRING
		public Assignment getImportURIAssignment_3() { return cImportURIAssignment_3; }
		
		//STRING
		public RuleCall getImportURISTRINGTerminalRuleCall_3_0() { return cImportURISTRINGTerminalRuleCall_3_0; }
		
		//'as'
		public Keyword getAsKeyword_4() { return cAsKeyword_4; }
		
		//name=ID
		public Assignment getNameAssignment_5() { return cNameAssignment_5; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_5_0() { return cNameIDTerminalRuleCall_5_0; }
	}
	public class MicroserviceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fhdo.ddmm.ServiceDsl.Microservice");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Keyword cCommercialAtKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Keyword cTechnologyKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_0_2 = (Keyword)cGroup_0.eContents().get(2);
		private final Assignment cTechnologiesAssignment_0_3 = (Assignment)cGroup_0.eContents().get(3);
		private final CrossReference cTechnologiesImportCrossReference_0_3_0 = (CrossReference)cTechnologiesAssignment_0_3.eContents().get(0);
		private final RuleCall cTechnologiesImportIDTerminalRuleCall_0_3_0_1 = (RuleCall)cTechnologiesImportCrossReference_0_3_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_0_4 = (Keyword)cGroup_0.eContents().get(4);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Assignment cProtocolsAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final RuleCall cProtocolsProtocolSpecificationParserRuleCall_1_0_0 = (RuleCall)cProtocolsAssignment_1_0.eContents().get(0);
		private final Assignment cProtocolsAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cProtocolsProtocolSpecificationParserRuleCall_1_1_0 = (RuleCall)cProtocolsAssignment_1_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cCommercialAtKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Keyword cEndpointsKeyword_2_1 = (Keyword)cGroup_2.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_2_2 = (Keyword)cGroup_2.eContents().get(2);
		private final Assignment cEndpointsAssignment_2_3 = (Assignment)cGroup_2.eContents().get(3);
		private final RuleCall cEndpointsEndpointParserRuleCall_2_3_0 = (RuleCall)cEndpointsAssignment_2_3.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_2_4 = (Keyword)cGroup_2.eContents().get(4);
		private final Assignment cAspectsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cAspectsImportedServiceAspectParserRuleCall_3_0 = (RuleCall)cAspectsAssignment_3.eContents().get(0);
		private final Assignment cVisibilityAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cVisibilityVisibilityEnumRuleCall_4_0 = (RuleCall)cVisibilityAssignment_4.eContents().get(0);
		private final Assignment cTypeAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cTypeMicroserviceTypeEnumRuleCall_5_0 = (RuleCall)cTypeAssignment_5.eContents().get(0);
		private final Keyword cMicroserviceKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cNameAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cNameQualifiedNameWithAtLeastOneLevelParserRuleCall_7_0 = (RuleCall)cNameAssignment_7.eContents().get(0);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cVersionKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Assignment cVersionAssignment_8_1 = (Assignment)cGroup_8.eContents().get(1);
		private final RuleCall cVersionIDTerminalRuleCall_8_1_0 = (RuleCall)cVersionAssignment_8_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Group cGroup_10 = (Group)cGroup.eContents().get(10);
		private final Keyword cRequiredKeyword_10_0 = (Keyword)cGroup_10.eContents().get(0);
		private final Keyword cMicroservicesKeyword_10_1 = (Keyword)cGroup_10.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_10_2 = (Keyword)cGroup_10.eContents().get(2);
		private final Assignment cRequiredMicroservicesAssignment_10_3 = (Assignment)cGroup_10.eContents().get(3);
		private final RuleCall cRequiredMicroservicesPossiblyImportedMicroserviceParserRuleCall_10_3_0 = (RuleCall)cRequiredMicroservicesAssignment_10_3.eContents().get(0);
		private final Group cGroup_10_4 = (Group)cGroup_10.eContents().get(4);
		private final Keyword cCommaKeyword_10_4_0 = (Keyword)cGroup_10_4.eContents().get(0);
		private final Assignment cRequiredMicroservicesAssignment_10_4_1 = (Assignment)cGroup_10_4.eContents().get(1);
		private final RuleCall cRequiredMicroservicesPossiblyImportedMicroserviceParserRuleCall_10_4_1_0 = (RuleCall)cRequiredMicroservicesAssignment_10_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_10_5 = (Keyword)cGroup_10.eContents().get(5);
		private final Group cGroup_11 = (Group)cGroup.eContents().get(11);
		private final Keyword cRequiredKeyword_11_0 = (Keyword)cGroup_11.eContents().get(0);
		private final Keyword cInterfacesKeyword_11_1 = (Keyword)cGroup_11.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_11_2 = (Keyword)cGroup_11.eContents().get(2);
		private final Assignment cRequiredInterfacesAssignment_11_3 = (Assignment)cGroup_11.eContents().get(3);
		private final RuleCall cRequiredInterfacesPossiblyImportedInterfaceParserRuleCall_11_3_0 = (RuleCall)cRequiredInterfacesAssignment_11_3.eContents().get(0);
		private final Group cGroup_11_4 = (Group)cGroup_11.eContents().get(4);
		private final Keyword cCommaKeyword_11_4_0 = (Keyword)cGroup_11_4.eContents().get(0);
		private final Assignment cRequiredInterfacesAssignment_11_4_1 = (Assignment)cGroup_11_4.eContents().get(1);
		private final RuleCall cRequiredInterfacesPossiblyImportedInterfaceParserRuleCall_11_4_1_0 = (RuleCall)cRequiredInterfacesAssignment_11_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_11_5 = (Keyword)cGroup_11.eContents().get(5);
		private final Group cGroup_12 = (Group)cGroup.eContents().get(12);
		private final Keyword cRequiredKeyword_12_0 = (Keyword)cGroup_12.eContents().get(0);
		private final Keyword cOperationsKeyword_12_1 = (Keyword)cGroup_12.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_12_2 = (Keyword)cGroup_12.eContents().get(2);
		private final Assignment cRequiredOperationsAssignment_12_3 = (Assignment)cGroup_12.eContents().get(3);
		private final RuleCall cRequiredOperationsPossiblyImportedOperationParserRuleCall_12_3_0 = (RuleCall)cRequiredOperationsAssignment_12_3.eContents().get(0);
		private final Group cGroup_12_4 = (Group)cGroup_12.eContents().get(4);
		private final Keyword cCommaKeyword_12_4_0 = (Keyword)cGroup_12_4.eContents().get(0);
		private final Assignment cRequiredOperationsAssignment_12_4_1 = (Assignment)cGroup_12_4.eContents().get(1);
		private final RuleCall cRequiredOperationsPossiblyImportedOperationParserRuleCall_12_4_1_0 = (RuleCall)cRequiredOperationsAssignment_12_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_12_5 = (Keyword)cGroup_12.eContents().get(5);
		private final Assignment cInterfacesAssignment_13 = (Assignment)cGroup.eContents().get(13);
		private final RuleCall cInterfacesInterfaceParserRuleCall_13_0 = (RuleCall)cInterfacesAssignment_13.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_14 = (Keyword)cGroup.eContents().get(14);
		
		//Microservice:
		//	('@' 'technology' '(' technologies+=[Import] ')')* (protocols+=ProtocolSpecification
		//	protocols+=ProtocolSpecification?)? ('@' 'endpoints' '(' endpoints+=Endpoint+ ')')?
		//	aspects+=ImportedServiceAspect*
		//	visibility=Visibility?
		//	type=MicroserviceType
		//	'microservice' name=QualifiedNameWithAtLeastOneLevel ('version' version=ID)?
		//	// TODO: Inheritance of microservices
		//	//('extends' super=[Microservice|QualifiedNameWithAtLeastOneLevel])?
		//	'{' ('required' 'microservices' '{'
		//	requiredMicroservices+=PossiblyImportedMicroservice (',' requiredMicroservices+=PossiblyImportedMicroservice)*
		//	'}')? ('required' 'interfaces' '{'
		//	requiredInterfaces+=PossiblyImportedInterface (',' requiredInterfaces+=PossiblyImportedInterface)*
		//	'}')? ('required' 'operations' '{'
		//	requiredOperations+=PossiblyImportedOperation (',' requiredOperations+=PossiblyImportedOperation)*
		//	'}')?
		//	interfaces+=Interface+
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//('@' 'technology' '(' technologies+=[Import] ')')* (protocols+=ProtocolSpecification protocols+=ProtocolSpecification?)?
		//('@' 'endpoints' '(' endpoints+=Endpoint+ ')')? aspects+=ImportedServiceAspect* visibility=Visibility?
		//type=MicroserviceType 'microservice' name=QualifiedNameWithAtLeastOneLevel ('version' version=ID)? // TODO: Inheritance of microservices
		////('extends' super=[Microservice|QualifiedNameWithAtLeastOneLevel])?
		//'{' ('required' 'microservices' '{' requiredMicroservices+=PossiblyImportedMicroservice (','
		//requiredMicroservices+=PossiblyImportedMicroservice)* '}')? ('required' 'interfaces' '{'
		//requiredInterfaces+=PossiblyImportedInterface (',' requiredInterfaces+=PossiblyImportedInterface)* '}')? ('required'
		//'operations' '{' requiredOperations+=PossiblyImportedOperation (',' requiredOperations+=PossiblyImportedOperation)*
		//'}')? interfaces+=Interface+ '}'
		public Group getGroup() { return cGroup; }
		
		//('@' 'technology' '(' technologies+=[Import] ')')*
		public Group getGroup_0() { return cGroup_0; }
		
		//'@'
		public Keyword getCommercialAtKeyword_0_0() { return cCommercialAtKeyword_0_0; }
		
		//'technology'
		public Keyword getTechnologyKeyword_0_1() { return cTechnologyKeyword_0_1; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_0_2() { return cLeftParenthesisKeyword_0_2; }
		
		//technologies+=[Import]
		public Assignment getTechnologiesAssignment_0_3() { return cTechnologiesAssignment_0_3; }
		
		//[Import]
		public CrossReference getTechnologiesImportCrossReference_0_3_0() { return cTechnologiesImportCrossReference_0_3_0; }
		
		//ID
		public RuleCall getTechnologiesImportIDTerminalRuleCall_0_3_0_1() { return cTechnologiesImportIDTerminalRuleCall_0_3_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_0_4() { return cRightParenthesisKeyword_0_4; }
		
		//(protocols+=ProtocolSpecification protocols+=ProtocolSpecification?)?
		public Group getGroup_1() { return cGroup_1; }
		
		//protocols+=ProtocolSpecification
		public Assignment getProtocolsAssignment_1_0() { return cProtocolsAssignment_1_0; }
		
		//ProtocolSpecification
		public RuleCall getProtocolsProtocolSpecificationParserRuleCall_1_0_0() { return cProtocolsProtocolSpecificationParserRuleCall_1_0_0; }
		
		//protocols+=ProtocolSpecification?
		public Assignment getProtocolsAssignment_1_1() { return cProtocolsAssignment_1_1; }
		
		//ProtocolSpecification
		public RuleCall getProtocolsProtocolSpecificationParserRuleCall_1_1_0() { return cProtocolsProtocolSpecificationParserRuleCall_1_1_0; }
		
		//('@' 'endpoints' '(' endpoints+=Endpoint+ ')')?
		public Group getGroup_2() { return cGroup_2; }
		
		//'@'
		public Keyword getCommercialAtKeyword_2_0() { return cCommercialAtKeyword_2_0; }
		
		//'endpoints'
		public Keyword getEndpointsKeyword_2_1() { return cEndpointsKeyword_2_1; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_2_2() { return cLeftParenthesisKeyword_2_2; }
		
		//endpoints+=Endpoint+
		public Assignment getEndpointsAssignment_2_3() { return cEndpointsAssignment_2_3; }
		
		//Endpoint
		public RuleCall getEndpointsEndpointParserRuleCall_2_3_0() { return cEndpointsEndpointParserRuleCall_2_3_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_2_4() { return cRightParenthesisKeyword_2_4; }
		
		//aspects+=ImportedServiceAspect*
		public Assignment getAspectsAssignment_3() { return cAspectsAssignment_3; }
		
		//ImportedServiceAspect
		public RuleCall getAspectsImportedServiceAspectParserRuleCall_3_0() { return cAspectsImportedServiceAspectParserRuleCall_3_0; }
		
		//visibility=Visibility?
		public Assignment getVisibilityAssignment_4() { return cVisibilityAssignment_4; }
		
		//Visibility
		public RuleCall getVisibilityVisibilityEnumRuleCall_4_0() { return cVisibilityVisibilityEnumRuleCall_4_0; }
		
		//type=MicroserviceType
		public Assignment getTypeAssignment_5() { return cTypeAssignment_5; }
		
		//MicroserviceType
		public RuleCall getTypeMicroserviceTypeEnumRuleCall_5_0() { return cTypeMicroserviceTypeEnumRuleCall_5_0; }
		
		//'microservice'
		public Keyword getMicroserviceKeyword_6() { return cMicroserviceKeyword_6; }
		
		//name=QualifiedNameWithAtLeastOneLevel
		public Assignment getNameAssignment_7() { return cNameAssignment_7; }
		
		//QualifiedNameWithAtLeastOneLevel
		public RuleCall getNameQualifiedNameWithAtLeastOneLevelParserRuleCall_7_0() { return cNameQualifiedNameWithAtLeastOneLevelParserRuleCall_7_0; }
		
		//('version' version=ID)?
		public Group getGroup_8() { return cGroup_8; }
		
		//'version'
		public Keyword getVersionKeyword_8_0() { return cVersionKeyword_8_0; }
		
		//version=ID
		public Assignment getVersionAssignment_8_1() { return cVersionAssignment_8_1; }
		
		//ID
		public RuleCall getVersionIDTerminalRuleCall_8_1_0() { return cVersionIDTerminalRuleCall_8_1_0; }
		
		//// TODO: Inheritance of microservices
		////('extends' super=[Microservice|QualifiedNameWithAtLeastOneLevel])?
		//'{'
		public Keyword getLeftCurlyBracketKeyword_9() { return cLeftCurlyBracketKeyword_9; }
		
		//('required' 'microservices' '{' requiredMicroservices+=PossiblyImportedMicroservice (','
		//requiredMicroservices+=PossiblyImportedMicroservice)* '}')?
		public Group getGroup_10() { return cGroup_10; }
		
		//'required'
		public Keyword getRequiredKeyword_10_0() { return cRequiredKeyword_10_0; }
		
		//'microservices'
		public Keyword getMicroservicesKeyword_10_1() { return cMicroservicesKeyword_10_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_10_2() { return cLeftCurlyBracketKeyword_10_2; }
		
		//requiredMicroservices+=PossiblyImportedMicroservice
		public Assignment getRequiredMicroservicesAssignment_10_3() { return cRequiredMicroservicesAssignment_10_3; }
		
		//PossiblyImportedMicroservice
		public RuleCall getRequiredMicroservicesPossiblyImportedMicroserviceParserRuleCall_10_3_0() { return cRequiredMicroservicesPossiblyImportedMicroserviceParserRuleCall_10_3_0; }
		
		//(',' requiredMicroservices+=PossiblyImportedMicroservice)*
		public Group getGroup_10_4() { return cGroup_10_4; }
		
		//','
		public Keyword getCommaKeyword_10_4_0() { return cCommaKeyword_10_4_0; }
		
		//requiredMicroservices+=PossiblyImportedMicroservice
		public Assignment getRequiredMicroservicesAssignment_10_4_1() { return cRequiredMicroservicesAssignment_10_4_1; }
		
		//PossiblyImportedMicroservice
		public RuleCall getRequiredMicroservicesPossiblyImportedMicroserviceParserRuleCall_10_4_1_0() { return cRequiredMicroservicesPossiblyImportedMicroserviceParserRuleCall_10_4_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_10_5() { return cRightCurlyBracketKeyword_10_5; }
		
		//('required' 'interfaces' '{' requiredInterfaces+=PossiblyImportedInterface (','
		//requiredInterfaces+=PossiblyImportedInterface)* '}')?
		public Group getGroup_11() { return cGroup_11; }
		
		//'required'
		public Keyword getRequiredKeyword_11_0() { return cRequiredKeyword_11_0; }
		
		//'interfaces'
		public Keyword getInterfacesKeyword_11_1() { return cInterfacesKeyword_11_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_11_2() { return cLeftCurlyBracketKeyword_11_2; }
		
		//requiredInterfaces+=PossiblyImportedInterface
		public Assignment getRequiredInterfacesAssignment_11_3() { return cRequiredInterfacesAssignment_11_3; }
		
		//PossiblyImportedInterface
		public RuleCall getRequiredInterfacesPossiblyImportedInterfaceParserRuleCall_11_3_0() { return cRequiredInterfacesPossiblyImportedInterfaceParserRuleCall_11_3_0; }
		
		//(',' requiredInterfaces+=PossiblyImportedInterface)*
		public Group getGroup_11_4() { return cGroup_11_4; }
		
		//','
		public Keyword getCommaKeyword_11_4_0() { return cCommaKeyword_11_4_0; }
		
		//requiredInterfaces+=PossiblyImportedInterface
		public Assignment getRequiredInterfacesAssignment_11_4_1() { return cRequiredInterfacesAssignment_11_4_1; }
		
		//PossiblyImportedInterface
		public RuleCall getRequiredInterfacesPossiblyImportedInterfaceParserRuleCall_11_4_1_0() { return cRequiredInterfacesPossiblyImportedInterfaceParserRuleCall_11_4_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_11_5() { return cRightCurlyBracketKeyword_11_5; }
		
		//('required' 'operations' '{' requiredOperations+=PossiblyImportedOperation (','
		//requiredOperations+=PossiblyImportedOperation)* '}')?
		public Group getGroup_12() { return cGroup_12; }
		
		//'required'
		public Keyword getRequiredKeyword_12_0() { return cRequiredKeyword_12_0; }
		
		//'operations'
		public Keyword getOperationsKeyword_12_1() { return cOperationsKeyword_12_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_12_2() { return cLeftCurlyBracketKeyword_12_2; }
		
		//requiredOperations+=PossiblyImportedOperation
		public Assignment getRequiredOperationsAssignment_12_3() { return cRequiredOperationsAssignment_12_3; }
		
		//PossiblyImportedOperation
		public RuleCall getRequiredOperationsPossiblyImportedOperationParserRuleCall_12_3_0() { return cRequiredOperationsPossiblyImportedOperationParserRuleCall_12_3_0; }
		
		//(',' requiredOperations+=PossiblyImportedOperation)*
		public Group getGroup_12_4() { return cGroup_12_4; }
		
		//','
		public Keyword getCommaKeyword_12_4_0() { return cCommaKeyword_12_4_0; }
		
		//requiredOperations+=PossiblyImportedOperation
		public Assignment getRequiredOperationsAssignment_12_4_1() { return cRequiredOperationsAssignment_12_4_1; }
		
		//PossiblyImportedOperation
		public RuleCall getRequiredOperationsPossiblyImportedOperationParserRuleCall_12_4_1_0() { return cRequiredOperationsPossiblyImportedOperationParserRuleCall_12_4_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_12_5() { return cRightCurlyBracketKeyword_12_5; }
		
		//interfaces+=Interface+
		public Assignment getInterfacesAssignment_13() { return cInterfacesAssignment_13; }
		
		//Interface
		public RuleCall getInterfacesInterfaceParserRuleCall_13_0() { return cInterfacesInterfaceParserRuleCall_13_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_14() { return cRightCurlyBracketKeyword_14; }
	}
	public class PossiblyImportedMicroserviceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fhdo.ddmm.ServiceDsl.PossiblyImportedMicroservice");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Assignment cImportAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final CrossReference cImportImportCrossReference_0_0_0 = (CrossReference)cImportAssignment_0_0.eContents().get(0);
		private final RuleCall cImportImportIDTerminalRuleCall_0_0_0_1 = (RuleCall)cImportImportCrossReference_0_0_0.eContents().get(1);
		private final Keyword cColonColonKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Assignment cMicroserviceAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cMicroserviceMicroserviceCrossReference_1_0 = (CrossReference)cMicroserviceAssignment_1.eContents().get(0);
		private final RuleCall cMicroserviceMicroserviceQualifiedNameParserRuleCall_1_0_1 = (RuleCall)cMicroserviceMicroserviceCrossReference_1_0.eContents().get(1);
		
		//PossiblyImportedMicroservice:
		//	(^import=[Import] '::')? microservice=[Microservice|QualifiedName];
		@Override public ParserRule getRule() { return rule; }
		
		//(^import=[Import] '::')? microservice=[Microservice|QualifiedName]
		public Group getGroup() { return cGroup; }
		
		//(^import=[Import] '::')?
		public Group getGroup_0() { return cGroup_0; }
		
		//^import=[Import]
		public Assignment getImportAssignment_0_0() { return cImportAssignment_0_0; }
		
		//[Import]
		public CrossReference getImportImportCrossReference_0_0_0() { return cImportImportCrossReference_0_0_0; }
		
		//ID
		public RuleCall getImportImportIDTerminalRuleCall_0_0_0_1() { return cImportImportIDTerminalRuleCall_0_0_0_1; }
		
		//'::'
		public Keyword getColonColonKeyword_0_1() { return cColonColonKeyword_0_1; }
		
		//microservice=[Microservice|QualifiedName]
		public Assignment getMicroserviceAssignment_1() { return cMicroserviceAssignment_1; }
		
		//[Microservice|QualifiedName]
		public CrossReference getMicroserviceMicroserviceCrossReference_1_0() { return cMicroserviceMicroserviceCrossReference_1_0; }
		
		//QualifiedName
		public RuleCall getMicroserviceMicroserviceQualifiedNameParserRuleCall_1_0_1() { return cMicroserviceMicroserviceQualifiedNameParserRuleCall_1_0_1; }
	}
	public class PossiblyImportedInterfaceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fhdo.ddmm.ServiceDsl.PossiblyImportedInterface");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Assignment cImportAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final CrossReference cImportImportCrossReference_0_0_0 = (CrossReference)cImportAssignment_0_0.eContents().get(0);
		private final RuleCall cImportImportIDTerminalRuleCall_0_0_0_1 = (RuleCall)cImportImportCrossReference_0_0_0.eContents().get(1);
		private final Keyword cColonColonKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Assignment cInterfaceAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cInterfaceInterfaceCrossReference_1_0 = (CrossReference)cInterfaceAssignment_1.eContents().get(0);
		private final RuleCall cInterfaceInterfaceQualifiedNameParserRuleCall_1_0_1 = (RuleCall)cInterfaceInterfaceCrossReference_1_0.eContents().get(1);
		
		//PossiblyImportedInterface:
		//	(^import=[Import] '::')? interface=[Interface|QualifiedName];
		@Override public ParserRule getRule() { return rule; }
		
		//(^import=[Import] '::')? interface=[Interface|QualifiedName]
		public Group getGroup() { return cGroup; }
		
		//(^import=[Import] '::')?
		public Group getGroup_0() { return cGroup_0; }
		
		//^import=[Import]
		public Assignment getImportAssignment_0_0() { return cImportAssignment_0_0; }
		
		//[Import]
		public CrossReference getImportImportCrossReference_0_0_0() { return cImportImportCrossReference_0_0_0; }
		
		//ID
		public RuleCall getImportImportIDTerminalRuleCall_0_0_0_1() { return cImportImportIDTerminalRuleCall_0_0_0_1; }
		
		//'::'
		public Keyword getColonColonKeyword_0_1() { return cColonColonKeyword_0_1; }
		
		//interface=[Interface|QualifiedName]
		public Assignment getInterfaceAssignment_1() { return cInterfaceAssignment_1; }
		
		//[Interface|QualifiedName]
		public CrossReference getInterfaceInterfaceCrossReference_1_0() { return cInterfaceInterfaceCrossReference_1_0; }
		
		//QualifiedName
		public RuleCall getInterfaceInterfaceQualifiedNameParserRuleCall_1_0_1() { return cInterfaceInterfaceQualifiedNameParserRuleCall_1_0_1; }
	}
	public class PossiblyImportedOperationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fhdo.ddmm.ServiceDsl.PossiblyImportedOperation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Assignment cImportAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final CrossReference cImportImportCrossReference_0_0_0 = (CrossReference)cImportAssignment_0_0.eContents().get(0);
		private final RuleCall cImportImportIDTerminalRuleCall_0_0_0_1 = (RuleCall)cImportImportCrossReference_0_0_0.eContents().get(1);
		private final Keyword cColonColonKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Assignment cOperationAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cOperationOperationCrossReference_1_0 = (CrossReference)cOperationAssignment_1.eContents().get(0);
		private final RuleCall cOperationOperationQualifiedNameParserRuleCall_1_0_1 = (RuleCall)cOperationOperationCrossReference_1_0.eContents().get(1);
		
		//PossiblyImportedOperation:
		//	(^import=[Import] '::')? operation=[Operation|QualifiedName];
		@Override public ParserRule getRule() { return rule; }
		
		//(^import=[Import] '::')? operation=[Operation|QualifiedName]
		public Group getGroup() { return cGroup; }
		
		//(^import=[Import] '::')?
		public Group getGroup_0() { return cGroup_0; }
		
		//^import=[Import]
		public Assignment getImportAssignment_0_0() { return cImportAssignment_0_0; }
		
		//[Import]
		public CrossReference getImportImportCrossReference_0_0_0() { return cImportImportCrossReference_0_0_0; }
		
		//ID
		public RuleCall getImportImportIDTerminalRuleCall_0_0_0_1() { return cImportImportIDTerminalRuleCall_0_0_0_1; }
		
		//'::'
		public Keyword getColonColonKeyword_0_1() { return cColonColonKeyword_0_1; }
		
		//operation=[Operation|QualifiedName]
		public Assignment getOperationAssignment_1() { return cOperationAssignment_1; }
		
		//[Operation|QualifiedName]
		public CrossReference getOperationOperationCrossReference_1_0() { return cOperationOperationCrossReference_1_0; }
		
		//QualifiedName
		public RuleCall getOperationOperationQualifiedNameParserRuleCall_1_0_1() { return cOperationOperationQualifiedNameParserRuleCall_1_0_1; }
	}
	public class InterfaceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fhdo.ddmm.ServiceDsl.Interface");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Assignment cProtocolsAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final RuleCall cProtocolsProtocolSpecificationParserRuleCall_0_0_0 = (RuleCall)cProtocolsAssignment_0_0.eContents().get(0);
		private final Assignment cProtocolsAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final RuleCall cProtocolsProtocolSpecificationParserRuleCall_0_1_0 = (RuleCall)cProtocolsAssignment_0_1.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cCommercialAtKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Keyword cEndpointsKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		private final Assignment cEndpointsAssignment_1_3 = (Assignment)cGroup_1.eContents().get(3);
		private final RuleCall cEndpointsEndpointParserRuleCall_1_3_0 = (RuleCall)cEndpointsAssignment_1_3.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_1_4 = (Keyword)cGroup_1.eContents().get(4);
		private final Assignment cAspectsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cAspectsImportedServiceAspectParserRuleCall_2_0 = (RuleCall)cAspectsAssignment_2.eContents().get(0);
		private final Assignment cNotImplementedAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNotImplementedNoimplKeyword_3_0 = (Keyword)cNotImplementedAssignment_3.eContents().get(0);
		private final Assignment cVisibilityAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cVisibilityVisibilityEnumRuleCall_4_0 = (RuleCall)cVisibilityAssignment_4.eContents().get(0);
		private final Keyword cInterfaceKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cNameAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cNameIDTerminalRuleCall_6_0 = (RuleCall)cNameAssignment_6.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cReferredOperationsAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cReferredOperationsReferredOperationParserRuleCall_8_0 = (RuleCall)cReferredOperationsAssignment_8.eContents().get(0);
		private final Assignment cOperationsAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cOperationsOperationParserRuleCall_9_0 = (RuleCall)cOperationsAssignment_9.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_10 = (Keyword)cGroup.eContents().get(10);
		
		//Interface:
		//	(protocols+=ProtocolSpecification protocols+=ProtocolSpecification?)? ('@' 'endpoints' '(' endpoints+=Endpoint+ ')')?
		//	aspects+=ImportedServiceAspect*
		//	notImplemented?='noimpl'? visibility=Visibility? 'interface' name=ID '{'
		//	referredOperations+=ReferredOperation*
		//	operations+=Operation*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//(protocols+=ProtocolSpecification protocols+=ProtocolSpecification?)? ('@' 'endpoints' '(' endpoints+=Endpoint+ ')')?
		//aspects+=ImportedServiceAspect* notImplemented?='noimpl'? visibility=Visibility? 'interface' name=ID '{'
		//referredOperations+=ReferredOperation* operations+=Operation* '}'
		public Group getGroup() { return cGroup; }
		
		//(protocols+=ProtocolSpecification protocols+=ProtocolSpecification?)?
		public Group getGroup_0() { return cGroup_0; }
		
		//protocols+=ProtocolSpecification
		public Assignment getProtocolsAssignment_0_0() { return cProtocolsAssignment_0_0; }
		
		//ProtocolSpecification
		public RuleCall getProtocolsProtocolSpecificationParserRuleCall_0_0_0() { return cProtocolsProtocolSpecificationParserRuleCall_0_0_0; }
		
		//protocols+=ProtocolSpecification?
		public Assignment getProtocolsAssignment_0_1() { return cProtocolsAssignment_0_1; }
		
		//ProtocolSpecification
		public RuleCall getProtocolsProtocolSpecificationParserRuleCall_0_1_0() { return cProtocolsProtocolSpecificationParserRuleCall_0_1_0; }
		
		//('@' 'endpoints' '(' endpoints+=Endpoint+ ')')?
		public Group getGroup_1() { return cGroup_1; }
		
		//'@'
		public Keyword getCommercialAtKeyword_1_0() { return cCommercialAtKeyword_1_0; }
		
		//'endpoints'
		public Keyword getEndpointsKeyword_1_1() { return cEndpointsKeyword_1_1; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1_2() { return cLeftParenthesisKeyword_1_2; }
		
		//endpoints+=Endpoint+
		public Assignment getEndpointsAssignment_1_3() { return cEndpointsAssignment_1_3; }
		
		//Endpoint
		public RuleCall getEndpointsEndpointParserRuleCall_1_3_0() { return cEndpointsEndpointParserRuleCall_1_3_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_1_4() { return cRightParenthesisKeyword_1_4; }
		
		//aspects+=ImportedServiceAspect*
		public Assignment getAspectsAssignment_2() { return cAspectsAssignment_2; }
		
		//ImportedServiceAspect
		public RuleCall getAspectsImportedServiceAspectParserRuleCall_2_0() { return cAspectsImportedServiceAspectParserRuleCall_2_0; }
		
		//notImplemented?='noimpl'?
		public Assignment getNotImplementedAssignment_3() { return cNotImplementedAssignment_3; }
		
		//'noimpl'
		public Keyword getNotImplementedNoimplKeyword_3_0() { return cNotImplementedNoimplKeyword_3_0; }
		
		//visibility=Visibility?
		public Assignment getVisibilityAssignment_4() { return cVisibilityAssignment_4; }
		
		//Visibility
		public RuleCall getVisibilityVisibilityEnumRuleCall_4_0() { return cVisibilityVisibilityEnumRuleCall_4_0; }
		
		//'interface'
		public Keyword getInterfaceKeyword_5() { return cInterfaceKeyword_5; }
		
		//name=ID
		public Assignment getNameAssignment_6() { return cNameAssignment_6; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_6_0() { return cNameIDTerminalRuleCall_6_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_7() { return cLeftCurlyBracketKeyword_7; }
		
		//referredOperations+=ReferredOperation*
		public Assignment getReferredOperationsAssignment_8() { return cReferredOperationsAssignment_8; }
		
		//ReferredOperation
		public RuleCall getReferredOperationsReferredOperationParserRuleCall_8_0() { return cReferredOperationsReferredOperationParserRuleCall_8_0; }
		
		//operations+=Operation*
		public Assignment getOperationsAssignment_9() { return cOperationsAssignment_9; }
		
		//Operation
		public RuleCall getOperationsOperationParserRuleCall_9_0() { return cOperationsOperationParserRuleCall_9_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_10() { return cRightCurlyBracketKeyword_10; }
	}
	public class OperationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fhdo.ddmm.ServiceDsl.Operation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Assignment cProtocolsAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final RuleCall cProtocolsProtocolSpecificationParserRuleCall_0_0_0 = (RuleCall)cProtocolsAssignment_0_0.eContents().get(0);
		private final Assignment cProtocolsAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final RuleCall cProtocolsProtocolSpecificationParserRuleCall_0_1_0 = (RuleCall)cProtocolsAssignment_0_1.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cCommercialAtKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Keyword cEndpointsKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		private final Assignment cEndpointsAssignment_1_3 = (Assignment)cGroup_1.eContents().get(3);
		private final RuleCall cEndpointsEndpointParserRuleCall_1_3_0 = (RuleCall)cEndpointsAssignment_1_3.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_1_4 = (Keyword)cGroup_1.eContents().get(4);
		private final Assignment cAspectsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cAspectsImportedServiceAspectParserRuleCall_2_0 = (RuleCall)cAspectsAssignment_2.eContents().get(0);
		private final Assignment cNotImplementedAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNotImplementedNoimplKeyword_3_0 = (Keyword)cNotImplementedAssignment_3.eContents().get(0);
		private final Assignment cVisibilityAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cVisibilityVisibilityEnumRuleCall_4_0 = (RuleCall)cVisibilityAssignment_4.eContents().get(0);
		private final Assignment cNameAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cNameIDTerminalRuleCall_5_0 = (RuleCall)cNameAssignment_5.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cParametersAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cParametersParameterParserRuleCall_7_0 = (RuleCall)cParametersAssignment_7.eContents().get(0);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cCommaKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Assignment cParametersAssignment_8_1 = (Assignment)cGroup_8.eContents().get(1);
		private final RuleCall cParametersParameterParserRuleCall_8_1_0 = (RuleCall)cParametersAssignment_8_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Keyword cSemicolonKeyword_10 = (Keyword)cGroup.eContents().get(10);
		
		//Operation:
		//	(protocols+=ProtocolSpecification protocols+=ProtocolSpecification?)? ('@' 'endpoints' '(' endpoints+=Endpoint+ ')')?
		//	aspects+=ImportedServiceAspect*
		//	notImplemented?='noimpl'? visibility=Visibility? name=ID '('
		//	parameters+=Parameter? (',' parameters+=Parameter)*
		//	')' ';';
		@Override public ParserRule getRule() { return rule; }
		
		//(protocols+=ProtocolSpecification protocols+=ProtocolSpecification?)? ('@' 'endpoints' '(' endpoints+=Endpoint+ ')')?
		//aspects+=ImportedServiceAspect* notImplemented?='noimpl'? visibility=Visibility? name=ID '(' parameters+=Parameter?
		//(',' parameters+=Parameter)* ')' ';'
		public Group getGroup() { return cGroup; }
		
		//(protocols+=ProtocolSpecification protocols+=ProtocolSpecification?)?
		public Group getGroup_0() { return cGroup_0; }
		
		//protocols+=ProtocolSpecification
		public Assignment getProtocolsAssignment_0_0() { return cProtocolsAssignment_0_0; }
		
		//ProtocolSpecification
		public RuleCall getProtocolsProtocolSpecificationParserRuleCall_0_0_0() { return cProtocolsProtocolSpecificationParserRuleCall_0_0_0; }
		
		//protocols+=ProtocolSpecification?
		public Assignment getProtocolsAssignment_0_1() { return cProtocolsAssignment_0_1; }
		
		//ProtocolSpecification
		public RuleCall getProtocolsProtocolSpecificationParserRuleCall_0_1_0() { return cProtocolsProtocolSpecificationParserRuleCall_0_1_0; }
		
		//('@' 'endpoints' '(' endpoints+=Endpoint+ ')')?
		public Group getGroup_1() { return cGroup_1; }
		
		//'@'
		public Keyword getCommercialAtKeyword_1_0() { return cCommercialAtKeyword_1_0; }
		
		//'endpoints'
		public Keyword getEndpointsKeyword_1_1() { return cEndpointsKeyword_1_1; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1_2() { return cLeftParenthesisKeyword_1_2; }
		
		//endpoints+=Endpoint+
		public Assignment getEndpointsAssignment_1_3() { return cEndpointsAssignment_1_3; }
		
		//Endpoint
		public RuleCall getEndpointsEndpointParserRuleCall_1_3_0() { return cEndpointsEndpointParserRuleCall_1_3_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_1_4() { return cRightParenthesisKeyword_1_4; }
		
		//aspects+=ImportedServiceAspect*
		public Assignment getAspectsAssignment_2() { return cAspectsAssignment_2; }
		
		//ImportedServiceAspect
		public RuleCall getAspectsImportedServiceAspectParserRuleCall_2_0() { return cAspectsImportedServiceAspectParserRuleCall_2_0; }
		
		//notImplemented?='noimpl'?
		public Assignment getNotImplementedAssignment_3() { return cNotImplementedAssignment_3; }
		
		//'noimpl'
		public Keyword getNotImplementedNoimplKeyword_3_0() { return cNotImplementedNoimplKeyword_3_0; }
		
		//visibility=Visibility?
		public Assignment getVisibilityAssignment_4() { return cVisibilityAssignment_4; }
		
		//Visibility
		public RuleCall getVisibilityVisibilityEnumRuleCall_4_0() { return cVisibilityVisibilityEnumRuleCall_4_0; }
		
		//name=ID
		public Assignment getNameAssignment_5() { return cNameAssignment_5; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_5_0() { return cNameIDTerminalRuleCall_5_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_6() { return cLeftParenthesisKeyword_6; }
		
		//parameters+=Parameter?
		public Assignment getParametersAssignment_7() { return cParametersAssignment_7; }
		
		//Parameter
		public RuleCall getParametersParameterParserRuleCall_7_0() { return cParametersParameterParserRuleCall_7_0; }
		
		//(',' parameters+=Parameter)*
		public Group getGroup_8() { return cGroup_8; }
		
		//','
		public Keyword getCommaKeyword_8_0() { return cCommaKeyword_8_0; }
		
		//parameters+=Parameter
		public Assignment getParametersAssignment_8_1() { return cParametersAssignment_8_1; }
		
		//Parameter
		public RuleCall getParametersParameterParserRuleCall_8_1_0() { return cParametersParameterParserRuleCall_8_1_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_9() { return cRightParenthesisKeyword_9; }
		
		//';'
		public Keyword getSemicolonKeyword_10() { return cSemicolonKeyword_10; }
	}
	public class ReferredOperationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fhdo.ddmm.ServiceDsl.ReferredOperation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Assignment cProtocolsAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final RuleCall cProtocolsProtocolSpecificationParserRuleCall_0_0_0 = (RuleCall)cProtocolsAssignment_0_0.eContents().get(0);
		private final Assignment cProtocolsAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final RuleCall cProtocolsProtocolSpecificationParserRuleCall_0_1_0 = (RuleCall)cProtocolsAssignment_0_1.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cCommercialAtKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Keyword cEndpointsKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		private final Assignment cEndpointsAssignment_1_3 = (Assignment)cGroup_1.eContents().get(3);
		private final RuleCall cEndpointsEndpointParserRuleCall_1_3_0 = (RuleCall)cEndpointsAssignment_1_3.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_1_4 = (Keyword)cGroup_1.eContents().get(4);
		private final Assignment cAspectsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cAspectsImportedServiceAspectParserRuleCall_2_0 = (RuleCall)cAspectsAssignment_2.eContents().get(0);
		private final Keyword cRefersKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cOperationAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cOperationOperationCrossReference_4_0 = (CrossReference)cOperationAssignment_4.eContents().get(0);
		private final RuleCall cOperationOperationQualifiedNameParserRuleCall_4_0_1 = (RuleCall)cOperationOperationCrossReference_4_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//ReferredOperation:
		//	(protocols+=ProtocolSpecification protocols+=ProtocolSpecification?)? ('@' 'endpoints' '(' endpoints+=Endpoint+ ')')?
		//	aspects+=ImportedServiceAspect*
		//	'refers' operation=[Operation|QualifiedName] ';';
		@Override public ParserRule getRule() { return rule; }
		
		//(protocols+=ProtocolSpecification protocols+=ProtocolSpecification?)? ('@' 'endpoints' '(' endpoints+=Endpoint+ ')')?
		//aspects+=ImportedServiceAspect* 'refers' operation=[Operation|QualifiedName] ';'
		public Group getGroup() { return cGroup; }
		
		//(protocols+=ProtocolSpecification protocols+=ProtocolSpecification?)?
		public Group getGroup_0() { return cGroup_0; }
		
		//protocols+=ProtocolSpecification
		public Assignment getProtocolsAssignment_0_0() { return cProtocolsAssignment_0_0; }
		
		//ProtocolSpecification
		public RuleCall getProtocolsProtocolSpecificationParserRuleCall_0_0_0() { return cProtocolsProtocolSpecificationParserRuleCall_0_0_0; }
		
		//protocols+=ProtocolSpecification?
		public Assignment getProtocolsAssignment_0_1() { return cProtocolsAssignment_0_1; }
		
		//ProtocolSpecification
		public RuleCall getProtocolsProtocolSpecificationParserRuleCall_0_1_0() { return cProtocolsProtocolSpecificationParserRuleCall_0_1_0; }
		
		//('@' 'endpoints' '(' endpoints+=Endpoint+ ')')?
		public Group getGroup_1() { return cGroup_1; }
		
		//'@'
		public Keyword getCommercialAtKeyword_1_0() { return cCommercialAtKeyword_1_0; }
		
		//'endpoints'
		public Keyword getEndpointsKeyword_1_1() { return cEndpointsKeyword_1_1; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1_2() { return cLeftParenthesisKeyword_1_2; }
		
		//endpoints+=Endpoint+
		public Assignment getEndpointsAssignment_1_3() { return cEndpointsAssignment_1_3; }
		
		//Endpoint
		public RuleCall getEndpointsEndpointParserRuleCall_1_3_0() { return cEndpointsEndpointParserRuleCall_1_3_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_1_4() { return cRightParenthesisKeyword_1_4; }
		
		//aspects+=ImportedServiceAspect*
		public Assignment getAspectsAssignment_2() { return cAspectsAssignment_2; }
		
		//ImportedServiceAspect
		public RuleCall getAspectsImportedServiceAspectParserRuleCall_2_0() { return cAspectsImportedServiceAspectParserRuleCall_2_0; }
		
		//'refers'
		public Keyword getRefersKeyword_3() { return cRefersKeyword_3; }
		
		//operation=[Operation|QualifiedName]
		public Assignment getOperationAssignment_4() { return cOperationAssignment_4; }
		
		//[Operation|QualifiedName]
		public CrossReference getOperationOperationCrossReference_4_0() { return cOperationOperationCrossReference_4_0; }
		
		//QualifiedName
		public RuleCall getOperationOperationQualifiedNameParserRuleCall_4_0_1() { return cOperationOperationQualifiedNameParserRuleCall_4_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_5() { return cSemicolonKeyword_5; }
	}
	public class ParameterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fhdo.ddmm.ServiceDsl.Parameter");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cAspectsAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cAspectsImportedServiceAspectParserRuleCall_0_0 = (RuleCall)cAspectsAssignment_0.eContents().get(0);
		private final Assignment cCommunicationTypeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cCommunicationTypeCommunicationTypeEnumRuleCall_1_0 = (RuleCall)cCommunicationTypeAssignment_1.eContents().get(0);
		private final Assignment cExchangePatternAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cExchangePatternExchangePatternEnumRuleCall_2_0 = (RuleCall)cExchangePatternAssignment_2.eContents().get(0);
		private final Assignment cCommunicatesFaultAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cCommunicatesFaultFaultKeyword_3_0 = (Keyword)cCommunicatesFaultAssignment_3.eContents().get(0);
		private final Assignment cNameAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cNameIDTerminalRuleCall_4_0 = (RuleCall)cNameAssignment_4.eContents().get(0);
		private final Assignment cOptionalAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final Keyword cOptionalQuestionMarkKeyword_5_0 = (Keyword)cOptionalAssignment_5.eContents().get(0);
		private final Keyword cColonKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Alternatives cAlternatives_7 = (Alternatives)cGroup.eContents().get(7);
		private final Assignment cPrimitiveTypeAssignment_7_0 = (Assignment)cAlternatives_7.eContents().get(0);
		private final RuleCall cPrimitiveTypePrimitiveTypeParserRuleCall_7_0_0 = (RuleCall)cPrimitiveTypeAssignment_7_0.eContents().get(0);
		private final Assignment cImportedTypeAssignment_7_1 = (Assignment)cAlternatives_7.eContents().get(1);
		private final RuleCall cImportedTypeImportedTypeParserRuleCall_7_1_0 = (RuleCall)cImportedTypeAssignment_7_1.eContents().get(0);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cEqualsSignKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Assignment cInitializedByOperationAssignment_8_1 = (Assignment)cGroup_8.eContents().get(1);
		private final RuleCall cInitializedByOperationPossiblyImportedOperationParserRuleCall_8_1_0 = (RuleCall)cInitializedByOperationAssignment_8_1.eContents().get(0);
		
		//Parameter:
		//	aspects+=ImportedServiceAspect*
		//	communicationType=CommunicationType
		//	exchangePattern=ExchangePattern?
		//	communicatesFault?='fault'?
		//	name=ID
		//	optional?='?'?
		//	':' (primitiveType=PrimitiveType | importedType=ImportedType) ('=' initializedByOperation=PossiblyImportedOperation)?;
		@Override public ParserRule getRule() { return rule; }
		
		//aspects+=ImportedServiceAspect* communicationType=CommunicationType exchangePattern=ExchangePattern?
		//communicatesFault?='fault'? name=ID optional?='?'? ':' (primitiveType=PrimitiveType | importedType=ImportedType) ('='
		//initializedByOperation=PossiblyImportedOperation)?
		public Group getGroup() { return cGroup; }
		
		//aspects+=ImportedServiceAspect*
		public Assignment getAspectsAssignment_0() { return cAspectsAssignment_0; }
		
		//ImportedServiceAspect
		public RuleCall getAspectsImportedServiceAspectParserRuleCall_0_0() { return cAspectsImportedServiceAspectParserRuleCall_0_0; }
		
		//communicationType=CommunicationType
		public Assignment getCommunicationTypeAssignment_1() { return cCommunicationTypeAssignment_1; }
		
		//CommunicationType
		public RuleCall getCommunicationTypeCommunicationTypeEnumRuleCall_1_0() { return cCommunicationTypeCommunicationTypeEnumRuleCall_1_0; }
		
		//exchangePattern=ExchangePattern?
		public Assignment getExchangePatternAssignment_2() { return cExchangePatternAssignment_2; }
		
		//ExchangePattern
		public RuleCall getExchangePatternExchangePatternEnumRuleCall_2_0() { return cExchangePatternExchangePatternEnumRuleCall_2_0; }
		
		//communicatesFault?='fault'?
		public Assignment getCommunicatesFaultAssignment_3() { return cCommunicatesFaultAssignment_3; }
		
		//'fault'
		public Keyword getCommunicatesFaultFaultKeyword_3_0() { return cCommunicatesFaultFaultKeyword_3_0; }
		
		//name=ID
		public Assignment getNameAssignment_4() { return cNameAssignment_4; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_4_0() { return cNameIDTerminalRuleCall_4_0; }
		
		//optional?='?'?
		public Assignment getOptionalAssignment_5() { return cOptionalAssignment_5; }
		
		//'?'
		public Keyword getOptionalQuestionMarkKeyword_5_0() { return cOptionalQuestionMarkKeyword_5_0; }
		
		//':'
		public Keyword getColonKeyword_6() { return cColonKeyword_6; }
		
		//primitiveType=PrimitiveType | importedType=ImportedType
		public Alternatives getAlternatives_7() { return cAlternatives_7; }
		
		//primitiveType=PrimitiveType
		public Assignment getPrimitiveTypeAssignment_7_0() { return cPrimitiveTypeAssignment_7_0; }
		
		//PrimitiveType
		public RuleCall getPrimitiveTypePrimitiveTypeParserRuleCall_7_0_0() { return cPrimitiveTypePrimitiveTypeParserRuleCall_7_0_0; }
		
		//importedType=ImportedType
		public Assignment getImportedTypeAssignment_7_1() { return cImportedTypeAssignment_7_1; }
		
		//ImportedType
		public RuleCall getImportedTypeImportedTypeParserRuleCall_7_1_0() { return cImportedTypeImportedTypeParserRuleCall_7_1_0; }
		
		//('=' initializedByOperation=PossiblyImportedOperation)?
		public Group getGroup_8() { return cGroup_8; }
		
		//'='
		public Keyword getEqualsSignKeyword_8_0() { return cEqualsSignKeyword_8_0; }
		
		//initializedByOperation=PossiblyImportedOperation
		public Assignment getInitializedByOperationAssignment_8_1() { return cInitializedByOperationAssignment_8_1; }
		
		//PossiblyImportedOperation
		public RuleCall getInitializedByOperationPossiblyImportedOperationParserRuleCall_8_1_0() { return cInitializedByOperationPossiblyImportedOperationParserRuleCall_8_1_0; }
	}
	public class ImportedTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fhdo.ddmm.ServiceDsl.ImportedType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cImportAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cImportImportCrossReference_0_0 = (CrossReference)cImportAssignment_0.eContents().get(0);
		private final RuleCall cImportImportIDTerminalRuleCall_0_0_1 = (RuleCall)cImportImportCrossReference_0_0.eContents().get(1);
		private final Keyword cColonColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cTypeAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cTypeTypeCrossReference_2_0 = (CrossReference)cTypeAssignment_2.eContents().get(0);
		private final RuleCall cTypeTypeQualifiedNameParserRuleCall_2_0_1 = (RuleCall)cTypeTypeCrossReference_2_0.eContents().get(1);
		
		//ImportedType:
		//	^import=[Import] '::' type=[data::Type|QualifiedName];
		@Override public ParserRule getRule() { return rule; }
		
		//^import=[Import] '::' type=[data::Type|QualifiedName]
		public Group getGroup() { return cGroup; }
		
		//^import=[Import]
		public Assignment getImportAssignment_0() { return cImportAssignment_0; }
		
		//[Import]
		public CrossReference getImportImportCrossReference_0_0() { return cImportImportCrossReference_0_0; }
		
		//ID
		public RuleCall getImportImportIDTerminalRuleCall_0_0_1() { return cImportImportIDTerminalRuleCall_0_0_1; }
		
		//'::'
		public Keyword getColonColonKeyword_1() { return cColonColonKeyword_1; }
		
		//type=[data::Type|QualifiedName]
		public Assignment getTypeAssignment_2() { return cTypeAssignment_2; }
		
		//[data::Type|QualifiedName]
		public CrossReference getTypeTypeCrossReference_2_0() { return cTypeTypeCrossReference_2_0; }
		
		//QualifiedName
		public RuleCall getTypeTypeQualifiedNameParserRuleCall_2_0_1() { return cTypeTypeQualifiedNameParserRuleCall_2_0_1; }
	}
	public class ProtocolSpecificationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fhdo.ddmm.ServiceDsl.ProtocolSpecification");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCommercialAtKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cCommunicationTypeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cCommunicationTypeCommunicationTypeEnumRuleCall_1_0 = (RuleCall)cCommunicationTypeAssignment_1.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cProtocolAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cProtocolImportedProtocolAndDataFormatParserRuleCall_3_0 = (RuleCall)cProtocolAssignment_3.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//ProtocolSpecification:
		//	'@' communicationType=CommunicationType '('
		//	protocol=ImportedProtocolAndDataFormat
		//	')';
		@Override public ParserRule getRule() { return rule; }
		
		//'@' communicationType=CommunicationType '(' protocol=ImportedProtocolAndDataFormat ')'
		public Group getGroup() { return cGroup; }
		
		//'@'
		public Keyword getCommercialAtKeyword_0() { return cCommercialAtKeyword_0; }
		
		//communicationType=CommunicationType
		public Assignment getCommunicationTypeAssignment_1() { return cCommunicationTypeAssignment_1; }
		
		//CommunicationType
		public RuleCall getCommunicationTypeCommunicationTypeEnumRuleCall_1_0() { return cCommunicationTypeCommunicationTypeEnumRuleCall_1_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_2() { return cLeftParenthesisKeyword_2; }
		
		//protocol=ImportedProtocolAndDataFormat
		public Assignment getProtocolAssignment_3() { return cProtocolAssignment_3; }
		
		//ImportedProtocolAndDataFormat
		public RuleCall getProtocolImportedProtocolAndDataFormatParserRuleCall_3_0() { return cProtocolImportedProtocolAndDataFormatParserRuleCall_3_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_4() { return cRightParenthesisKeyword_4; }
	}
	public class ImportedProtocolAndDataFormatElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fhdo.ddmm.ServiceDsl.ImportedProtocolAndDataFormat");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cImportAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cImportImportCrossReference_0_0 = (CrossReference)cImportAssignment_0.eContents().get(0);
		private final RuleCall cImportImportIDTerminalRuleCall_0_0_1 = (RuleCall)cImportImportCrossReference_0_0.eContents().get(1);
		private final Keyword cColonColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cImportedProtocolAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cImportedProtocolProtocolCrossReference_2_0 = (CrossReference)cImportedProtocolAssignment_2.eContents().get(0);
		private final RuleCall cImportedProtocolProtocolQualifiedNameParserRuleCall_2_0_1 = (RuleCall)cImportedProtocolProtocolCrossReference_2_0.eContents().get(1);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cSolidusKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cDataFormatAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final CrossReference cDataFormatDataFormatCrossReference_3_1_0 = (CrossReference)cDataFormatAssignment_3_1.eContents().get(0);
		private final RuleCall cDataFormatDataFormatIDTerminalRuleCall_3_1_0_1 = (RuleCall)cDataFormatDataFormatCrossReference_3_1_0.eContents().get(1);
		
		//ImportedProtocolAndDataFormat:
		//	^import=[Import] '::' importedProtocol=[technology::Protocol|QualifiedName] ('/'
		//	dataFormat=[technology::DataFormat])?;
		@Override public ParserRule getRule() { return rule; }
		
		//^import=[Import] '::' importedProtocol=[technology::Protocol|QualifiedName] ('/' dataFormat=[technology::DataFormat])?
		public Group getGroup() { return cGroup; }
		
		//^import=[Import]
		public Assignment getImportAssignment_0() { return cImportAssignment_0; }
		
		//[Import]
		public CrossReference getImportImportCrossReference_0_0() { return cImportImportCrossReference_0_0; }
		
		//ID
		public RuleCall getImportImportIDTerminalRuleCall_0_0_1() { return cImportImportIDTerminalRuleCall_0_0_1; }
		
		//'::'
		public Keyword getColonColonKeyword_1() { return cColonColonKeyword_1; }
		
		//importedProtocol=[technology::Protocol|QualifiedName]
		public Assignment getImportedProtocolAssignment_2() { return cImportedProtocolAssignment_2; }
		
		//[technology::Protocol|QualifiedName]
		public CrossReference getImportedProtocolProtocolCrossReference_2_0() { return cImportedProtocolProtocolCrossReference_2_0; }
		
		//QualifiedName
		public RuleCall getImportedProtocolProtocolQualifiedNameParserRuleCall_2_0_1() { return cImportedProtocolProtocolQualifiedNameParserRuleCall_2_0_1; }
		
		//('/' dataFormat=[technology::DataFormat])?
		public Group getGroup_3() { return cGroup_3; }
		
		//'/'
		public Keyword getSolidusKeyword_3_0() { return cSolidusKeyword_3_0; }
		
		//dataFormat=[technology::DataFormat]
		public Assignment getDataFormatAssignment_3_1() { return cDataFormatAssignment_3_1; }
		
		//[technology::DataFormat]
		public CrossReference getDataFormatDataFormatCrossReference_3_1_0() { return cDataFormatDataFormatCrossReference_3_1_0; }
		
		//ID
		public RuleCall getDataFormatDataFormatIDTerminalRuleCall_3_1_0_1() { return cDataFormatDataFormatIDTerminalRuleCall_3_1_0_1; }
	}
	public class EndpointElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fhdo.ddmm.ServiceDsl.Endpoint");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cProtocolsAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cProtocolsImportedProtocolAndDataFormatParserRuleCall_0_0 = (RuleCall)cProtocolsAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cCommaKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cProtocolsAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cProtocolsImportedProtocolAndDataFormatParserRuleCall_1_1_0 = (RuleCall)cProtocolsAssignment_1_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cAddressesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cAddressesSTRINGTerminalRuleCall_3_0 = (RuleCall)cAddressesAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cCommaKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cAddressesAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cAddressesSTRINGTerminalRuleCall_4_1_0 = (RuleCall)cAddressesAssignment_4_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Endpoint:
		//	protocols+=ImportedProtocolAndDataFormat (',' protocols+=ImportedProtocolAndDataFormat)* ':'
		//	addresses+=STRING (',' addresses+=STRING)* ';';
		@Override public ParserRule getRule() { return rule; }
		
		//protocols+=ImportedProtocolAndDataFormat (',' protocols+=ImportedProtocolAndDataFormat)* ':' addresses+=STRING (','
		//addresses+=STRING)* ';'
		public Group getGroup() { return cGroup; }
		
		//protocols+=ImportedProtocolAndDataFormat
		public Assignment getProtocolsAssignment_0() { return cProtocolsAssignment_0; }
		
		//ImportedProtocolAndDataFormat
		public RuleCall getProtocolsImportedProtocolAndDataFormatParserRuleCall_0_0() { return cProtocolsImportedProtocolAndDataFormatParserRuleCall_0_0; }
		
		//(',' protocols+=ImportedProtocolAndDataFormat)*
		public Group getGroup_1() { return cGroup_1; }
		
		//','
		public Keyword getCommaKeyword_1_0() { return cCommaKeyword_1_0; }
		
		//protocols+=ImportedProtocolAndDataFormat
		public Assignment getProtocolsAssignment_1_1() { return cProtocolsAssignment_1_1; }
		
		//ImportedProtocolAndDataFormat
		public RuleCall getProtocolsImportedProtocolAndDataFormatParserRuleCall_1_1_0() { return cProtocolsImportedProtocolAndDataFormatParserRuleCall_1_1_0; }
		
		//':'
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }
		
		//addresses+=STRING
		public Assignment getAddressesAssignment_3() { return cAddressesAssignment_3; }
		
		//STRING
		public RuleCall getAddressesSTRINGTerminalRuleCall_3_0() { return cAddressesSTRINGTerminalRuleCall_3_0; }
		
		//(',' addresses+=STRING)*
		public Group getGroup_4() { return cGroup_4; }
		
		//','
		public Keyword getCommaKeyword_4_0() { return cCommaKeyword_4_0; }
		
		//addresses+=STRING
		public Assignment getAddressesAssignment_4_1() { return cAddressesAssignment_4_1; }
		
		//STRING
		public RuleCall getAddressesSTRINGTerminalRuleCall_4_1_0() { return cAddressesSTRINGTerminalRuleCall_4_1_0; }
		
		//';'
		public Keyword getSemicolonKeyword_5() { return cSemicolonKeyword_5; }
	}
	public class ImportedServiceAspectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fhdo.ddmm.ServiceDsl.ImportedServiceAspect");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCommercialAtKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cImportAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cImportImportCrossReference_1_0 = (CrossReference)cImportAssignment_1.eContents().get(0);
		private final RuleCall cImportImportIDTerminalRuleCall_1_0_1 = (RuleCall)cImportImportCrossReference_1_0.eContents().get(1);
		private final Keyword cColonColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cImportedAspectAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cImportedAspectServiceAspectCrossReference_3_0 = (CrossReference)cImportedAspectAssignment_3.eContents().get(0);
		private final RuleCall cImportedAspectServiceAspectQualifiedNameParserRuleCall_3_0_1 = (RuleCall)cImportedAspectServiceAspectCrossReference_3_0.eContents().get(1);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cLeftParenthesisKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Alternatives cAlternatives_4_1 = (Alternatives)cGroup_4.eContents().get(1);
		private final Assignment cSinglePropertyValueAssignment_4_1_0 = (Assignment)cAlternatives_4_1.eContents().get(0);
		private final RuleCall cSinglePropertyValuePrimitiveValueParserRuleCall_4_1_0_0 = (RuleCall)cSinglePropertyValueAssignment_4_1_0.eContents().get(0);
		private final Group cGroup_4_1_1 = (Group)cAlternatives_4_1.eContents().get(1);
		private final Assignment cValuesAssignment_4_1_1_0 = (Assignment)cGroup_4_1_1.eContents().get(0);
		private final RuleCall cValuesPropertyValueAssignmentParserRuleCall_4_1_1_0_0 = (RuleCall)cValuesAssignment_4_1_1_0.eContents().get(0);
		private final Group cGroup_4_1_1_1 = (Group)cGroup_4_1_1.eContents().get(1);
		private final Keyword cCommaKeyword_4_1_1_1_0 = (Keyword)cGroup_4_1_1_1.eContents().get(0);
		private final Assignment cValuesAssignment_4_1_1_1_1 = (Assignment)cGroup_4_1_1_1.eContents().get(1);
		private final RuleCall cValuesPropertyValueAssignmentParserRuleCall_4_1_1_1_1_0 = (RuleCall)cValuesAssignment_4_1_1_1_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_4_2 = (Keyword)cGroup_4.eContents().get(2);
		
		//ImportedServiceAspect:
		//	'@' ^import=[Import] '::' importedAspect=[technology::ServiceAspect|QualifiedName] ('('
		//	(singlePropertyValue=PrimitiveValue
		//	| values+=PropertyValueAssignment (',' values+=PropertyValueAssignment)*)
		//	')')?;
		@Override public ParserRule getRule() { return rule; }
		
		//'@' ^import=[Import] '::' importedAspect=[technology::ServiceAspect|QualifiedName] ('('
		//(singlePropertyValue=PrimitiveValue | values+=PropertyValueAssignment (',' values+=PropertyValueAssignment)*) ')')?
		public Group getGroup() { return cGroup; }
		
		//'@'
		public Keyword getCommercialAtKeyword_0() { return cCommercialAtKeyword_0; }
		
		//^import=[Import]
		public Assignment getImportAssignment_1() { return cImportAssignment_1; }
		
		//[Import]
		public CrossReference getImportImportCrossReference_1_0() { return cImportImportCrossReference_1_0; }
		
		//ID
		public RuleCall getImportImportIDTerminalRuleCall_1_0_1() { return cImportImportIDTerminalRuleCall_1_0_1; }
		
		//'::'
		public Keyword getColonColonKeyword_2() { return cColonColonKeyword_2; }
		
		//importedAspect=[technology::ServiceAspect|QualifiedName]
		public Assignment getImportedAspectAssignment_3() { return cImportedAspectAssignment_3; }
		
		//[technology::ServiceAspect|QualifiedName]
		public CrossReference getImportedAspectServiceAspectCrossReference_3_0() { return cImportedAspectServiceAspectCrossReference_3_0; }
		
		//QualifiedName
		public RuleCall getImportedAspectServiceAspectQualifiedNameParserRuleCall_3_0_1() { return cImportedAspectServiceAspectQualifiedNameParserRuleCall_3_0_1; }
		
		//('(' (singlePropertyValue=PrimitiveValue | values+=PropertyValueAssignment (',' values+=PropertyValueAssignment)*) ')')?
		public Group getGroup_4() { return cGroup_4; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_4_0() { return cLeftParenthesisKeyword_4_0; }
		
		//singlePropertyValue=PrimitiveValue | values+=PropertyValueAssignment (',' values+=PropertyValueAssignment)*
		public Alternatives getAlternatives_4_1() { return cAlternatives_4_1; }
		
		//singlePropertyValue=PrimitiveValue
		public Assignment getSinglePropertyValueAssignment_4_1_0() { return cSinglePropertyValueAssignment_4_1_0; }
		
		//PrimitiveValue
		public RuleCall getSinglePropertyValuePrimitiveValueParserRuleCall_4_1_0_0() { return cSinglePropertyValuePrimitiveValueParserRuleCall_4_1_0_0; }
		
		//values+=PropertyValueAssignment (',' values+=PropertyValueAssignment)*
		public Group getGroup_4_1_1() { return cGroup_4_1_1; }
		
		//values+=PropertyValueAssignment
		public Assignment getValuesAssignment_4_1_1_0() { return cValuesAssignment_4_1_1_0; }
		
		//PropertyValueAssignment
		public RuleCall getValuesPropertyValueAssignmentParserRuleCall_4_1_1_0_0() { return cValuesPropertyValueAssignmentParserRuleCall_4_1_1_0_0; }
		
		//(',' values+=PropertyValueAssignment)*
		public Group getGroup_4_1_1_1() { return cGroup_4_1_1_1; }
		
		//','
		public Keyword getCommaKeyword_4_1_1_1_0() { return cCommaKeyword_4_1_1_1_0; }
		
		//values+=PropertyValueAssignment
		public Assignment getValuesAssignment_4_1_1_1_1() { return cValuesAssignment_4_1_1_1_1; }
		
		//PropertyValueAssignment
		public RuleCall getValuesPropertyValueAssignmentParserRuleCall_4_1_1_1_1_0() { return cValuesPropertyValueAssignmentParserRuleCall_4_1_1_1_1_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_4_2() { return cRightParenthesisKeyword_4_2; }
	}
	public class PrimitiveValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fhdo.ddmm.ServiceDsl.PrimitiveValue");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cNumericValueAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final RuleCall cNumericValueBIG_DECIMALTerminalRuleCall_0_0 = (RuleCall)cNumericValueAssignment_0.eContents().get(0);
		private final Assignment cBooleanValueAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final RuleCall cBooleanValueBOOLEANTerminalRuleCall_1_0 = (RuleCall)cBooleanValueAssignment_1.eContents().get(0);
		private final Assignment cStringValueAssignment_2 = (Assignment)cAlternatives.eContents().get(2);
		private final RuleCall cStringValueSTRINGTerminalRuleCall_2_0 = (RuleCall)cStringValueAssignment_2.eContents().get(0);
		
		//@ Override PrimitiveValue data::PrimitiveValue:
		//	numericValue=BIG_DECIMAL | booleanValue=BOOLEAN | stringValue=STRING;
		@Override public ParserRule getRule() { return rule; }
		
		//numericValue=BIG_DECIMAL | booleanValue=BOOLEAN | stringValue=STRING
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//numericValue=BIG_DECIMAL
		public Assignment getNumericValueAssignment_0() { return cNumericValueAssignment_0; }
		
		//BIG_DECIMAL
		public RuleCall getNumericValueBIG_DECIMALTerminalRuleCall_0_0() { return cNumericValueBIG_DECIMALTerminalRuleCall_0_0; }
		
		//booleanValue=BOOLEAN
		public Assignment getBooleanValueAssignment_1() { return cBooleanValueAssignment_1; }
		
		//BOOLEAN
		public RuleCall getBooleanValueBOOLEANTerminalRuleCall_1_0() { return cBooleanValueBOOLEANTerminalRuleCall_1_0; }
		
		//stringValue=STRING
		public Assignment getStringValueAssignment_2() { return cStringValueAssignment_2; }
		
		//STRING
		public RuleCall getStringValueSTRINGTerminalRuleCall_2_0() { return cStringValueSTRINGTerminalRuleCall_2_0; }
	}
	public class PropertyValueAssignmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fhdo.ddmm.ServiceDsl.PropertyValueAssignment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cPropertyAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cPropertyTechnologySpecificPropertyCrossReference_0_0 = (CrossReference)cPropertyAssignment_0.eContents().get(0);
		private final RuleCall cPropertyTechnologySpecificPropertyIDTerminalRuleCall_0_0_1 = (RuleCall)cPropertyTechnologySpecificPropertyCrossReference_0_0.eContents().get(1);
		private final Keyword cEqualsSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValuePrimitiveValueParserRuleCall_2_0 = (RuleCall)cValueAssignment_2.eContents().get(0);
		
		//PropertyValueAssignment technology::TechnologySpecificPropertyValueAssignment:
		//	property=[technology::TechnologySpecificProperty] '=' value=PrimitiveValue;
		@Override public ParserRule getRule() { return rule; }
		
		//property=[technology::TechnologySpecificProperty] '=' value=PrimitiveValue
		public Group getGroup() { return cGroup; }
		
		//property=[technology::TechnologySpecificProperty]
		public Assignment getPropertyAssignment_0() { return cPropertyAssignment_0; }
		
		//[technology::TechnologySpecificProperty]
		public CrossReference getPropertyTechnologySpecificPropertyCrossReference_0_0() { return cPropertyTechnologySpecificPropertyCrossReference_0_0; }
		
		//ID
		public RuleCall getPropertyTechnologySpecificPropertyIDTerminalRuleCall_0_0_1() { return cPropertyTechnologySpecificPropertyIDTerminalRuleCall_0_0_1; }
		
		//'='
		public Keyword getEqualsSignKeyword_1() { return cEqualsSignKeyword_1; }
		
		//value=PrimitiveValue
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }
		
		//PrimitiveValue
		public RuleCall getValuePrimitiveValueParserRuleCall_2_0() { return cValuePrimitiveValueParserRuleCall_2_0; }
	}
	public class QualifiedNameWithAtLeastOneLevelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fhdo.ddmm.ServiceDsl.QualifiedNameWithAtLeastOneLevel");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cFullStopKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cQualifiedNameParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//QualifiedNameWithAtLeastOneLevel:
		//	ID '.' QualifiedName;
		@Override public ParserRule getRule() { return rule; }
		
		//ID '.' QualifiedName
		public Group getGroup() { return cGroup; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_0() { return cIDTerminalRuleCall_0; }
		
		//'.'
		public Keyword getFullStopKeyword_1() { return cFullStopKeyword_1; }
		
		//QualifiedName
		public RuleCall getQualifiedNameParserRuleCall_2() { return cQualifiedNameParserRuleCall_2; }
	}
	
	public class ImportTypeElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "de.fhdo.ddmm.ServiceDsl.ImportType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cDATATYPESEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cDATATYPESDatatypesKeyword_0_0 = (Keyword)cDATATYPESEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cTECHNOLOGYEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cTECHNOLOGYTechnologyKeyword_1_0 = (Keyword)cTECHNOLOGYEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cMICROSERVICESEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cMICROSERVICESMicroservicesKeyword_2_0 = (Keyword)cMICROSERVICESEnumLiteralDeclaration_2.eContents().get(0);
		
		//enum ImportType:
		//	DATATYPES='datatypes' | TECHNOLOGY='technology' | MICROSERVICES='microservices';
		public EnumRule getRule() { return rule; }
		
		//DATATYPES='datatypes' | TECHNOLOGY='technology' | MICROSERVICES='microservices'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//DATATYPES='datatypes'
		public EnumLiteralDeclaration getDATATYPESEnumLiteralDeclaration_0() { return cDATATYPESEnumLiteralDeclaration_0; }
		
		//'datatypes'
		public Keyword getDATATYPESDatatypesKeyword_0_0() { return cDATATYPESDatatypesKeyword_0_0; }
		
		//TECHNOLOGY='technology'
		public EnumLiteralDeclaration getTECHNOLOGYEnumLiteralDeclaration_1() { return cTECHNOLOGYEnumLiteralDeclaration_1; }
		
		//'technology'
		public Keyword getTECHNOLOGYTechnologyKeyword_1_0() { return cTECHNOLOGYTechnologyKeyword_1_0; }
		
		//MICROSERVICES='microservices'
		public EnumLiteralDeclaration getMICROSERVICESEnumLiteralDeclaration_2() { return cMICROSERVICESEnumLiteralDeclaration_2; }
		
		//'microservices'
		public Keyword getMICROSERVICESMicroservicesKeyword_2_0() { return cMICROSERVICESMicroservicesKeyword_2_0; }
	}
	public class VisibilityElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "de.fhdo.ddmm.ServiceDsl.Visibility");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cINTERNALEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cINTERNALInternalKeyword_0_0 = (Keyword)cINTERNALEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cARCHITECTUREEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cARCHITECTUREArchitectureKeyword_1_0 = (Keyword)cARCHITECTUREEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cPUBLICEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cPUBLICPublicKeyword_2_0 = (Keyword)cPUBLICEnumLiteralDeclaration_2.eContents().get(0);
		
		//enum Visibility:
		//	INTERNAL='internal' | ARCHITECTURE='architecture' | PUBLIC='public';
		public EnumRule getRule() { return rule; }
		
		//INTERNAL='internal' | ARCHITECTURE='architecture' | PUBLIC='public'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//INTERNAL='internal'
		public EnumLiteralDeclaration getINTERNALEnumLiteralDeclaration_0() { return cINTERNALEnumLiteralDeclaration_0; }
		
		//'internal'
		public Keyword getINTERNALInternalKeyword_0_0() { return cINTERNALInternalKeyword_0_0; }
		
		//ARCHITECTURE='architecture'
		public EnumLiteralDeclaration getARCHITECTUREEnumLiteralDeclaration_1() { return cARCHITECTUREEnumLiteralDeclaration_1; }
		
		//'architecture'
		public Keyword getARCHITECTUREArchitectureKeyword_1_0() { return cARCHITECTUREArchitectureKeyword_1_0; }
		
		//PUBLIC='public'
		public EnumLiteralDeclaration getPUBLICEnumLiteralDeclaration_2() { return cPUBLICEnumLiteralDeclaration_2; }
		
		//'public'
		public Keyword getPUBLICPublicKeyword_2_0() { return cPUBLICPublicKeyword_2_0; }
	}
	public class MicroserviceTypeElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "de.fhdo.ddmm.ServiceDsl.MicroserviceType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cFUNCTIONALEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cFUNCTIONALFunctionalKeyword_0_0 = (Keyword)cFUNCTIONALEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cUTILITYEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cUTILITYUtilityKeyword_1_0 = (Keyword)cUTILITYEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cINFRASTRUCTUREEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cINFRASTRUCTUREInfrastructureKeyword_2_0 = (Keyword)cINFRASTRUCTUREEnumLiteralDeclaration_2.eContents().get(0);
		
		//enum MicroserviceType:
		//	FUNCTIONAL='functional' | UTILITY='utility' | INFRASTRUCTURE='infrastructure';
		public EnumRule getRule() { return rule; }
		
		//FUNCTIONAL='functional' | UTILITY='utility' | INFRASTRUCTURE='infrastructure'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//FUNCTIONAL='functional'
		public EnumLiteralDeclaration getFUNCTIONALEnumLiteralDeclaration_0() { return cFUNCTIONALEnumLiteralDeclaration_0; }
		
		//'functional'
		public Keyword getFUNCTIONALFunctionalKeyword_0_0() { return cFUNCTIONALFunctionalKeyword_0_0; }
		
		//UTILITY='utility'
		public EnumLiteralDeclaration getUTILITYEnumLiteralDeclaration_1() { return cUTILITYEnumLiteralDeclaration_1; }
		
		//'utility'
		public Keyword getUTILITYUtilityKeyword_1_0() { return cUTILITYUtilityKeyword_1_0; }
		
		//INFRASTRUCTURE='infrastructure'
		public EnumLiteralDeclaration getINFRASTRUCTUREEnumLiteralDeclaration_2() { return cINFRASTRUCTUREEnumLiteralDeclaration_2; }
		
		//'infrastructure'
		public Keyword getINFRASTRUCTUREInfrastructureKeyword_2_0() { return cINFRASTRUCTUREInfrastructureKeyword_2_0; }
	}
	
	private final ServiceModelElements pServiceModel;
	private final ImportElements pImport;
	private final ImportTypeElements eImportType;
	private final VisibilityElements eVisibility;
	private final MicroserviceElements pMicroservice;
	private final PossiblyImportedMicroserviceElements pPossiblyImportedMicroservice;
	private final PossiblyImportedInterfaceElements pPossiblyImportedInterface;
	private final PossiblyImportedOperationElements pPossiblyImportedOperation;
	private final InterfaceElements pInterface;
	private final OperationElements pOperation;
	private final ReferredOperationElements pReferredOperation;
	private final ParameterElements pParameter;
	private final ImportedTypeElements pImportedType;
	private final ProtocolSpecificationElements pProtocolSpecification;
	private final ImportedProtocolAndDataFormatElements pImportedProtocolAndDataFormat;
	private final EndpointElements pEndpoint;
	private final ImportedServiceAspectElements pImportedServiceAspect;
	private final PrimitiveValueElements pPrimitiveValue;
	private final PropertyValueAssignmentElements pPropertyValueAssignment;
	private final MicroserviceTypeElements eMicroserviceType;
	private final QualifiedNameWithAtLeastOneLevelElements pQualifiedNameWithAtLeastOneLevel;
	
	private final Grammar grammar;
	
	private final TechnologyDslGrammarAccess gaTechnologyDsl;
	
	private final DataDslGrammarAccess gaDataDsl;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public ServiceDslGrammarAccess(GrammarProvider grammarProvider,
			TechnologyDslGrammarAccess gaTechnologyDsl,
			DataDslGrammarAccess gaDataDsl,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTechnologyDsl = gaTechnologyDsl;
		this.gaDataDsl = gaDataDsl;
		this.gaTerminals = gaTerminals;
		this.pServiceModel = new ServiceModelElements();
		this.pImport = new ImportElements();
		this.eImportType = new ImportTypeElements();
		this.eVisibility = new VisibilityElements();
		this.pMicroservice = new MicroserviceElements();
		this.pPossiblyImportedMicroservice = new PossiblyImportedMicroserviceElements();
		this.pPossiblyImportedInterface = new PossiblyImportedInterfaceElements();
		this.pPossiblyImportedOperation = new PossiblyImportedOperationElements();
		this.pInterface = new InterfaceElements();
		this.pOperation = new OperationElements();
		this.pReferredOperation = new ReferredOperationElements();
		this.pParameter = new ParameterElements();
		this.pImportedType = new ImportedTypeElements();
		this.pProtocolSpecification = new ProtocolSpecificationElements();
		this.pImportedProtocolAndDataFormat = new ImportedProtocolAndDataFormatElements();
		this.pEndpoint = new EndpointElements();
		this.pImportedServiceAspect = new ImportedServiceAspectElements();
		this.pPrimitiveValue = new PrimitiveValueElements();
		this.pPropertyValueAssignment = new PropertyValueAssignmentElements();
		this.eMicroserviceType = new MicroserviceTypeElements();
		this.pQualifiedNameWithAtLeastOneLevel = new QualifiedNameWithAtLeastOneLevelElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("de.fhdo.ddmm.ServiceDsl".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TechnologyDslGrammarAccess getTechnologyDslGrammarAccess() {
		return gaTechnologyDsl;
	}
	
	public DataDslGrammarAccess getDataDslGrammarAccess() {
		return gaDataDsl;
	}
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//ServiceModel:
	//	imports+=Import*
	//	microservices+=Microservice+;
	public ServiceModelElements getServiceModelAccess() {
		return pServiceModel;
	}
	
	public ParserRule getServiceModelRule() {
		return getServiceModelAccess().getRule();
	}
	
	//Import:
	//	'import' importType=ImportType 'from' importURI=STRING 'as' name=ID;
	public ImportElements getImportAccess() {
		return pImport;
	}
	
	public ParserRule getImportRule() {
		return getImportAccess().getRule();
	}
	
	//enum ImportType:
	//	DATATYPES='datatypes' | TECHNOLOGY='technology' | MICROSERVICES='microservices';
	public ImportTypeElements getImportTypeAccess() {
		return eImportType;
	}
	
	public EnumRule getImportTypeRule() {
		return getImportTypeAccess().getRule();
	}
	
	//enum Visibility:
	//	INTERNAL='internal' | ARCHITECTURE='architecture' | PUBLIC='public';
	public VisibilityElements getVisibilityAccess() {
		return eVisibility;
	}
	
	public EnumRule getVisibilityRule() {
		return getVisibilityAccess().getRule();
	}
	
	//Microservice:
	//	('@' 'technology' '(' technologies+=[Import] ')')* (protocols+=ProtocolSpecification
	//	protocols+=ProtocolSpecification?)? ('@' 'endpoints' '(' endpoints+=Endpoint+ ')')?
	//	aspects+=ImportedServiceAspect*
	//	visibility=Visibility?
	//	type=MicroserviceType
	//	'microservice' name=QualifiedNameWithAtLeastOneLevel ('version' version=ID)?
	//	// TODO: Inheritance of microservices
	//	//('extends' super=[Microservice|QualifiedNameWithAtLeastOneLevel])?
	//	'{' ('required' 'microservices' '{'
	//	requiredMicroservices+=PossiblyImportedMicroservice (',' requiredMicroservices+=PossiblyImportedMicroservice)*
	//	'}')? ('required' 'interfaces' '{'
	//	requiredInterfaces+=PossiblyImportedInterface (',' requiredInterfaces+=PossiblyImportedInterface)*
	//	'}')? ('required' 'operations' '{'
	//	requiredOperations+=PossiblyImportedOperation (',' requiredOperations+=PossiblyImportedOperation)*
	//	'}')?
	//	interfaces+=Interface+
	//	'}';
	public MicroserviceElements getMicroserviceAccess() {
		return pMicroservice;
	}
	
	public ParserRule getMicroserviceRule() {
		return getMicroserviceAccess().getRule();
	}
	
	//PossiblyImportedMicroservice:
	//	(^import=[Import] '::')? microservice=[Microservice|QualifiedName];
	public PossiblyImportedMicroserviceElements getPossiblyImportedMicroserviceAccess() {
		return pPossiblyImportedMicroservice;
	}
	
	public ParserRule getPossiblyImportedMicroserviceRule() {
		return getPossiblyImportedMicroserviceAccess().getRule();
	}
	
	//PossiblyImportedInterface:
	//	(^import=[Import] '::')? interface=[Interface|QualifiedName];
	public PossiblyImportedInterfaceElements getPossiblyImportedInterfaceAccess() {
		return pPossiblyImportedInterface;
	}
	
	public ParserRule getPossiblyImportedInterfaceRule() {
		return getPossiblyImportedInterfaceAccess().getRule();
	}
	
	//PossiblyImportedOperation:
	//	(^import=[Import] '::')? operation=[Operation|QualifiedName];
	public PossiblyImportedOperationElements getPossiblyImportedOperationAccess() {
		return pPossiblyImportedOperation;
	}
	
	public ParserRule getPossiblyImportedOperationRule() {
		return getPossiblyImportedOperationAccess().getRule();
	}
	
	//Interface:
	//	(protocols+=ProtocolSpecification protocols+=ProtocolSpecification?)? ('@' 'endpoints' '(' endpoints+=Endpoint+ ')')?
	//	aspects+=ImportedServiceAspect*
	//	notImplemented?='noimpl'? visibility=Visibility? 'interface' name=ID '{'
	//	referredOperations+=ReferredOperation*
	//	operations+=Operation*
	//	'}';
	public InterfaceElements getInterfaceAccess() {
		return pInterface;
	}
	
	public ParserRule getInterfaceRule() {
		return getInterfaceAccess().getRule();
	}
	
	//Operation:
	//	(protocols+=ProtocolSpecification protocols+=ProtocolSpecification?)? ('@' 'endpoints' '(' endpoints+=Endpoint+ ')')?
	//	aspects+=ImportedServiceAspect*
	//	notImplemented?='noimpl'? visibility=Visibility? name=ID '('
	//	parameters+=Parameter? (',' parameters+=Parameter)*
	//	')' ';';
	public OperationElements getOperationAccess() {
		return pOperation;
	}
	
	public ParserRule getOperationRule() {
		return getOperationAccess().getRule();
	}
	
	//ReferredOperation:
	//	(protocols+=ProtocolSpecification protocols+=ProtocolSpecification?)? ('@' 'endpoints' '(' endpoints+=Endpoint+ ')')?
	//	aspects+=ImportedServiceAspect*
	//	'refers' operation=[Operation|QualifiedName] ';';
	public ReferredOperationElements getReferredOperationAccess() {
		return pReferredOperation;
	}
	
	public ParserRule getReferredOperationRule() {
		return getReferredOperationAccess().getRule();
	}
	
	//Parameter:
	//	aspects+=ImportedServiceAspect*
	//	communicationType=CommunicationType
	//	exchangePattern=ExchangePattern?
	//	communicatesFault?='fault'?
	//	name=ID
	//	optional?='?'?
	//	':' (primitiveType=PrimitiveType | importedType=ImportedType) ('=' initializedByOperation=PossiblyImportedOperation)?;
	public ParameterElements getParameterAccess() {
		return pParameter;
	}
	
	public ParserRule getParameterRule() {
		return getParameterAccess().getRule();
	}
	
	//ImportedType:
	//	^import=[Import] '::' type=[data::Type|QualifiedName];
	public ImportedTypeElements getImportedTypeAccess() {
		return pImportedType;
	}
	
	public ParserRule getImportedTypeRule() {
		return getImportedTypeAccess().getRule();
	}
	
	//ProtocolSpecification:
	//	'@' communicationType=CommunicationType '('
	//	protocol=ImportedProtocolAndDataFormat
	//	')';
	public ProtocolSpecificationElements getProtocolSpecificationAccess() {
		return pProtocolSpecification;
	}
	
	public ParserRule getProtocolSpecificationRule() {
		return getProtocolSpecificationAccess().getRule();
	}
	
	//ImportedProtocolAndDataFormat:
	//	^import=[Import] '::' importedProtocol=[technology::Protocol|QualifiedName] ('/'
	//	dataFormat=[technology::DataFormat])?;
	public ImportedProtocolAndDataFormatElements getImportedProtocolAndDataFormatAccess() {
		return pImportedProtocolAndDataFormat;
	}
	
	public ParserRule getImportedProtocolAndDataFormatRule() {
		return getImportedProtocolAndDataFormatAccess().getRule();
	}
	
	//Endpoint:
	//	protocols+=ImportedProtocolAndDataFormat (',' protocols+=ImportedProtocolAndDataFormat)* ':'
	//	addresses+=STRING (',' addresses+=STRING)* ';';
	public EndpointElements getEndpointAccess() {
		return pEndpoint;
	}
	
	public ParserRule getEndpointRule() {
		return getEndpointAccess().getRule();
	}
	
	//ImportedServiceAspect:
	//	'@' ^import=[Import] '::' importedAspect=[technology::ServiceAspect|QualifiedName] ('('
	//	(singlePropertyValue=PrimitiveValue
	//	| values+=PropertyValueAssignment (',' values+=PropertyValueAssignment)*)
	//	')')?;
	public ImportedServiceAspectElements getImportedServiceAspectAccess() {
		return pImportedServiceAspect;
	}
	
	public ParserRule getImportedServiceAspectRule() {
		return getImportedServiceAspectAccess().getRule();
	}
	
	//@ Override PrimitiveValue data::PrimitiveValue:
	//	numericValue=BIG_DECIMAL | booleanValue=BOOLEAN | stringValue=STRING;
	public PrimitiveValueElements getPrimitiveValueAccess() {
		return pPrimitiveValue;
	}
	
	public ParserRule getPrimitiveValueRule() {
		return getPrimitiveValueAccess().getRule();
	}
	
	//PropertyValueAssignment technology::TechnologySpecificPropertyValueAssignment:
	//	property=[technology::TechnologySpecificProperty] '=' value=PrimitiveValue;
	public PropertyValueAssignmentElements getPropertyValueAssignmentAccess() {
		return pPropertyValueAssignment;
	}
	
	public ParserRule getPropertyValueAssignmentRule() {
		return getPropertyValueAssignmentAccess().getRule();
	}
	
	//enum MicroserviceType:
	//	FUNCTIONAL='functional' | UTILITY='utility' | INFRASTRUCTURE='infrastructure';
	public MicroserviceTypeElements getMicroserviceTypeAccess() {
		return eMicroserviceType;
	}
	
	public EnumRule getMicroserviceTypeRule() {
		return getMicroserviceTypeAccess().getRule();
	}
	
	//QualifiedNameWithAtLeastOneLevel:
	//	ID '.' QualifiedName;
	public QualifiedNameWithAtLeastOneLevelElements getQualifiedNameWithAtLeastOneLevelAccess() {
		return pQualifiedNameWithAtLeastOneLevel;
	}
	
	public ParserRule getQualifiedNameWithAtLeastOneLevelRule() {
		return getQualifiedNameWithAtLeastOneLevelAccess().getRule();
	}
	
	//Technology:
	//	imports+=TechnologyImport*
	//	'technology' name=ID '{' ('types' '{' (primitiveTypes+=TechnologySpecificPrimitiveType |
	//	listTypes+=TechnologySpecificListType | dataStructures+=TechnologySpecificDataStructure)+ ('compatibility' 'matrix'
	//	'{'
	//	compatibilityEntries+=CompatibilityMatrixEntry+
	//	'}')?
	//	'}')? ('protocols' '{'
	//	protocols+=Protocol+
	//	'}')? ('service' 'aspects' '{'
	//	serviceAspects+=ServiceAspect+
	//	'}')? ('deployment' 'technologies' '{'
	//	deploymentTechnologies+=DeploymentTechnology+
	//	'}')? ('infrastructure' 'technologies' '{'
	//	infrastructureTechnologies+=InfrastructureTechnology+
	//	'}')? ('operation' 'aspects' '{'
	//	operationAspects+=OperationAspect+
	//	'}')?
	//	'}';
	public TechnologyDslGrammarAccess.TechnologyElements getTechnologyAccess() {
		return gaTechnologyDsl.getTechnologyAccess();
	}
	
	public ParserRule getTechnologyRule() {
		return getTechnologyAccess().getRule();
	}
	
	//TechnologyImport:
	//	'import' 'technology' 'from' importURI=STRING 'as' name=ID;
	public TechnologyDslGrammarAccess.TechnologyImportElements getTechnologyImportAccess() {
		return gaTechnologyDsl.getTechnologyImportAccess();
	}
	
	public ParserRule getTechnologyImportRule() {
		return getTechnologyImportAccess().getRule();
	}
	
	//Protocol:
	//	communicationType=CommunicationType
	//	name=ID
	//	'data' 'formats' dataFormats+=DataFormat (',' dataFormats+=DataFormat)* (default?='default' 'with' 'format'
	//	defaultFormat=[DataFormat])?
	//	';';
	public TechnologyDslGrammarAccess.ProtocolElements getProtocolAccess() {
		return gaTechnologyDsl.getProtocolAccess();
	}
	
	public ParserRule getProtocolRule() {
		return getProtocolAccess().getRule();
	}
	
	//enum ExchangePattern:
	//	IN='in' | OUT='out' | INOUT='inout';
	public TechnologyDslGrammarAccess.ExchangePatternElements getExchangePatternAccess() {
		return gaTechnologyDsl.getExchangePatternAccess();
	}
	
	public EnumRule getExchangePatternRule() {
		return getExchangePatternAccess().getRule();
	}
	
	//enum CommunicationType:
	//	SYNCHRONOUS='sync' | ASYNCHRONOUS='async';
	public TechnologyDslGrammarAccess.CommunicationTypeElements getCommunicationTypeAccess() {
		return gaTechnologyDsl.getCommunicationTypeAccess();
	}
	
	public EnumRule getCommunicationTypeRule() {
		return getCommunicationTypeAccess().getRule();
	}
	
	//DataFormat:
	//	formatName=ID;
	public TechnologyDslGrammarAccess.DataFormatElements getDataFormatAccess() {
		return gaTechnologyDsl.getDataFormatAccess();
	}
	
	public ParserRule getDataFormatRule() {
		return getDataFormatAccess().getRule();
	}
	
	//TechnologySpecificPrimitiveType:
	//	'primitive' 'type' name=ID ('based' 'on' basicBuiltinPrimitiveTypes+=PrimitiveType (','
	//	basicBuiltinPrimitiveTypes+=PrimitiveType)*
	//	default?='default'?)? ';';
	public TechnologyDslGrammarAccess.TechnologySpecificPrimitiveTypeElements getTechnologySpecificPrimitiveTypeAccess() {
		return gaTechnologyDsl.getTechnologySpecificPrimitiveTypeAccess();
	}
	
	public ParserRule getTechnologySpecificPrimitiveTypeRule() {
		return getTechnologySpecificPrimitiveTypeAccess().getRule();
	}
	
	//TechnologySpecificListType:
	//	'list' 'type' name=ID ';';
	public TechnologyDslGrammarAccess.TechnologySpecificListTypeElements getTechnologySpecificListTypeAccess() {
		return gaTechnologyDsl.getTechnologySpecificListTypeAccess();
	}
	
	public ParserRule getTechnologySpecificListTypeRule() {
		return getTechnologySpecificListTypeAccess().getRule();
	}
	
	//TechnologySpecificDataStructure:
	//	'structure' 'type' name=ID ';';
	public TechnologyDslGrammarAccess.TechnologySpecificDataStructureElements getTechnologySpecificDataStructureAccess() {
		return gaTechnologyDsl.getTechnologySpecificDataStructureAccess();
	}
	
	public ParserRule getTechnologySpecificDataStructureRule() {
		return getTechnologySpecificDataStructureAccess().getRule();
	}
	
	//PossiblyImportedTechnologySpecificType:
	//	(^import=[TechnologyImport] '::')? type=[data::Type|QualifiedName];
	public TechnologyDslGrammarAccess.PossiblyImportedTechnologySpecificTypeElements getPossiblyImportedTechnologySpecificTypeAccess() {
		return gaTechnologyDsl.getPossiblyImportedTechnologySpecificTypeAccess();
	}
	
	public ParserRule getPossiblyImportedTechnologySpecificTypeRule() {
		return getPossiblyImportedTechnologySpecificTypeAccess().getRule();
	}
	
	//enum CompatibilityDirection:
	//	MAPPING_TO_COMPATIBLE_TYPES='<-' |
	//	COMPATIBLE_TYPES_TO_MAPPING='->' |
	//	BIDIRECTIONAL='<->';
	public TechnologyDslGrammarAccess.CompatibilityDirectionElements getCompatibilityDirectionAccess() {
		return gaTechnologyDsl.getCompatibilityDirectionAccess();
	}
	
	public EnumRule getCompatibilityDirectionRule() {
		return getCompatibilityDirectionAccess().getRule();
	}
	
	//CompatibilityMatrixEntry:
	//	compatibleTypes+=PossiblyImportedTechnologySpecificType (',' compatibleTypes+=PossiblyImportedTechnologySpecificType)*
	//	direction=CompatibilityDirection
	//	mappingType=PossiblyImportedTechnologySpecificType
	//	';';
	public TechnologyDslGrammarAccess.CompatibilityMatrixEntryElements getCompatibilityMatrixEntryAccess() {
		return gaTechnologyDsl.getCompatibilityMatrixEntryAccess();
	}
	
	public ParserRule getCompatibilityMatrixEntryRule() {
		return getCompatibilityMatrixEntryAccess().getRule();
	}
	
	//DeploymentTechnology:
	//	name=ID '{'
	//	'operation' 'environments' '=' operationEnvironments+=OperationEnvironment (','
	//	operationEnvironments+=OperationEnvironment)*
	//	';' ('service' 'properties' '{'
	//	serviceProperties+=TechnologySpecificProperty+
	//	'}')?
	//	'}';
	public TechnologyDslGrammarAccess.DeploymentTechnologyElements getDeploymentTechnologyAccess() {
		return gaTechnologyDsl.getDeploymentTechnologyAccess();
	}
	
	public ParserRule getDeploymentTechnologyRule() {
		return getDeploymentTechnologyAccess().getRule();
	}
	
	//InfrastructureTechnology:
	//	name=ID '{'
	//	'operation' 'environments' '=' operationEnvironments+=OperationEnvironment (','
	//	operationEnvironments+=OperationEnvironment)*
	//	';' ('service' 'properties' '{'
	//	serviceProperties+=TechnologySpecificProperty+
	//	'}')?
	//	'}';
	public TechnologyDslGrammarAccess.InfrastructureTechnologyElements getInfrastructureTechnologyAccess() {
		return gaTechnologyDsl.getInfrastructureTechnologyAccess();
	}
	
	public ParserRule getInfrastructureTechnologyRule() {
		return getInfrastructureTechnologyAccess().getRule();
	}
	
	//OperationEnvironment:
	//	environmentName=STRING default?='default'?;
	public TechnologyDslGrammarAccess.OperationEnvironmentElements getOperationEnvironmentAccess() {
		return gaTechnologyDsl.getOperationEnvironmentAccess();
	}
	
	public ParserRule getOperationEnvironmentRule() {
		return getOperationEnvironmentAccess().getRule();
	}
	
	//TechnologySpecificProperty:
	//	type=PrimitiveType name=ID ('=' defaultValue=super::PrimitiveValue | mandatory?='mandatory')?
	//	';';
	public TechnologyDslGrammarAccess.TechnologySpecificPropertyElements getTechnologySpecificPropertyAccess() {
		return gaTechnologyDsl.getTechnologySpecificPropertyAccess();
	}
	
	public ParserRule getTechnologySpecificPropertyRule() {
		return getTechnologySpecificPropertyAccess().getRule();
	}
	
	//enum ServiceJoinPointType returns JoinPointType:
	//	MICROSERVICES='microservices' |
	//	INTERFACES='interfaces' |
	//	OPERATIONS='operations' |
	//	PARAMETERS='parameters' |
	//	DATA_FIELDS='fields';
	public TechnologyDslGrammarAccess.ServiceJoinPointTypeElements getServiceJoinPointTypeAccess() {
		return gaTechnologyDsl.getServiceJoinPointTypeAccess();
	}
	
	public EnumRule getServiceJoinPointTypeRule() {
		return getServiceJoinPointTypeAccess().getRule();
	}
	
	//enum OperationJoinPointType returns JoinPointType:
	//	CONTAINERS='containers' | INFRASTRUCTURE_NODES='infrastructure';
	public TechnologyDslGrammarAccess.OperationJoinPointTypeElements getOperationJoinPointTypeAccess() {
		return gaTechnologyDsl.getOperationJoinPointTypeAccess();
	}
	
	public EnumRule getOperationJoinPointTypeRule() {
		return getOperationJoinPointTypeAccess().getRule();
	}
	
	//ServiceAspectPointcut:
	//	forExchangePattern?='exchange_pattern' '=' exchangePattern=ExchangePattern |
	//	forCommunicationType?='communication_type' '=' communicationType=CommunicationType | forProtocol?='protocol' '='
	//	protocol=[Protocol] | forDataFormat?='data_format' '=' dataFormat=[DataFormat];
	public TechnologyDslGrammarAccess.ServiceAspectPointcutElements getServiceAspectPointcutAccess() {
		return gaTechnologyDsl.getServiceAspectPointcutAccess();
	}
	
	public ParserRule getServiceAspectPointcutRule() {
		return getServiceAspectPointcutAccess().getRule();
	}
	
	//ServiceAspectPointcutSelector:
	//	'selector' '('
	//	pointcuts+=ServiceAspectPointcut (',' pointcuts+=ServiceAspectPointcut)*
	//	')' ';';
	public TechnologyDslGrammarAccess.ServiceAspectPointcutSelectorElements getServiceAspectPointcutSelectorAccess() {
		return gaTechnologyDsl.getServiceAspectPointcutSelectorAccess();
	}
	
	public ParserRule getServiceAspectPointcutSelectorRule() {
		return getServiceAspectPointcutSelectorAccess().getRule();
	}
	
	//ServiceAspect:
	//	'aspect' name=ID
	//	'for' joinPoints+=ServiceJoinPointType (',' joinPoints+=ServiceJoinPointType)* ('{'
	//	pointcutSelectors+=ServiceAspectPointcutSelector*
	//	properties+=TechnologySpecificProperty*
	//	'}' |
	//	';');
	public TechnologyDslGrammarAccess.ServiceAspectElements getServiceAspectAccess() {
		return gaTechnologyDsl.getServiceAspectAccess();
	}
	
	public ParserRule getServiceAspectRule() {
		return getServiceAspectAccess().getRule();
	}
	
	//OperationAspect:
	//	'aspect' name=ID
	//	'for' joinPoints+=OperationJoinPointType (',' joinPoints+=OperationJoinPointType)* ('{'
	//	properties+=TechnologySpecificProperty*
	//	'}' |
	//	';');
	public TechnologyDslGrammarAccess.OperationAspectElements getOperationAspectAccess() {
		return gaTechnologyDsl.getOperationAspectAccess();
	}
	
	public ParserRule getOperationAspectRule() {
		return getOperationAspectAccess().getRule();
	}
	
	//DataModel:
	//	complexTypeImports+=ComplexTypeImport* (versions+=Version+ | contexts+=Context+ | complexTypes+=ComplexType+);
	public DataDslGrammarAccess.DataModelElements getDataModelAccess() {
		return gaDataDsl.getDataModelAccess();
	}
	
	public ParserRule getDataModelRule() {
		return getDataModelAccess().getRule();
	}
	
	///* For debugging purposes to test the type checker. May be safely removed in the future. */ /*AssignTest:
	//    (target=PossiblyImportedComplexType)
	//    '='
	//    (source=PossiblyImportedComplexType)
	//;*/ ComplexTypeImport:
	//	'import' 'datatypes' 'from' importURI=STRING 'as' name=ID;
	public DataDslGrammarAccess.ComplexTypeImportElements getComplexTypeImportAccess() {
		return gaDataDsl.getComplexTypeImportAccess();
	}
	
	public ParserRule getComplexTypeImportRule() {
		return getComplexTypeImportAccess().getRule();
	}
	
	//Version:
	//	'version' name=ID '{' (complexTypes+=ComplexType+ | contexts+=Context+)?
	//	'}';
	public DataDslGrammarAccess.VersionElements getVersionAccess() {
		return gaDataDsl.getVersionAccess();
	}
	
	public ParserRule getVersionRule() {
		return getVersionAccess().getRule();
	}
	
	//Context:
	//	'context' name=ID '{'
	//	complexTypes+=ComplexType+
	//	'}';
	public DataDslGrammarAccess.ContextElements getContextAccess() {
		return gaDataDsl.getContextAccess();
	}
	
	public ParserRule getContextRule() {
		return getContextAccess().getRule();
	}
	
	//ComplexType:
	//	DataStructure | ListType;
	public DataDslGrammarAccess.ComplexTypeElements getComplexTypeAccess() {
		return gaDataDsl.getComplexTypeAccess();
	}
	
	public ParserRule getComplexTypeRule() {
		return getComplexTypeAccess().getRule();
	}
	
	//DataStructure:
	//	'structure' name=ID ('extends' super=[DataStructure|QualifiedName])? '{' (dataFields+=DataField (','
	//	dataFields+=DataField)*)?
	//	'}';
	public DataDslGrammarAccess.DataStructureElements getDataStructureAccess() {
		return gaDataDsl.getDataStructureAccess();
	}
	
	public ParserRule getDataStructureRule() {
		return getDataStructureAccess().getRule();
	}
	
	//ListType:
	//	'list' name=ID '{'
	//	dataFields+=DataField (',' dataFields+=DataField)*
	//	'}'
	//	|
	//	'list' name=ID '{'
	//	primitiveType=PrimitiveType
	//	'}';
	public DataDslGrammarAccess.ListTypeElements getListTypeAccess() {
		return gaDataDsl.getListTypeAccess();
	}
	
	public ParserRule getListTypeRule() {
		return getListTypeAccess().getRule();
	}
	
	//DataField:
	//	^hidden?='hide'? (primitiveType=PrimitiveType | complexType=PossiblyImportedComplexType)?
	//	name=ID;
	public DataDslGrammarAccess.DataFieldElements getDataFieldAccess() {
		return gaDataDsl.getDataFieldAccess();
	}
	
	public ParserRule getDataFieldRule() {
		return getDataFieldAccess().getRule();
	}
	
	//PossiblyImportedComplexType:
	//	(^import=[ComplexTypeImport] '::')? complexType=[ComplexType|QualifiedName];
	public DataDslGrammarAccess.PossiblyImportedComplexTypeElements getPossiblyImportedComplexTypeAccess() {
		return gaDataDsl.getPossiblyImportedComplexTypeAccess();
	}
	
	public ParserRule getPossiblyImportedComplexTypeRule() {
		return getPossiblyImportedComplexTypeAccess().getRule();
	}
	
	//PrimitiveType:
	//	{PrimitiveBoolean} 'boolean' | {PrimitiveByte} 'byte' | {PrimitiveCharacter} 'char' | {PrimitiveDate} 'date' |
	//	{PrimitiveDouble} 'double' | {PrimitiveFloat} 'float' | {PrimitiveInteger} 'int' | {PrimitiveLong} 'long' |
	//	{PrimitiveShort} 'short' | {PrimitiveString} 'string';
	public DataDslGrammarAccess.PrimitiveTypeElements getPrimitiveTypeAccess() {
		return gaDataDsl.getPrimitiveTypeAccess();
	}
	
	public ParserRule getPrimitiveTypeRule() {
		return getPrimitiveTypeAccess().getRule();
	}
	
	//QualifiedName:
	//	ID ('.' ID)*;
	public DataDslGrammarAccess.QualifiedNameElements getQualifiedNameAccess() {
		return gaDataDsl.getQualifiedNameAccess();
	}
	
	public ParserRule getQualifiedNameRule() {
		return getQualifiedNameAccess().getRule();
	}
	
	//terminal BIG_DECIMAL returns ecore::EBigDecimal:
	//	'-'? INT ('.' INT)?;
	public TerminalRule getBIG_DECIMALRule() {
		return gaDataDsl.getBIG_DECIMALRule();
	}
	
	//terminal BOOLEAN returns ecore::EBoolean:
	//	'true' | 'false';
	public TerminalRule getBOOLEANRule() {
		return gaDataDsl.getBOOLEANRule();
	}
	
	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"' |
	//	"'" ('\\' . | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT:
	//	'/*'->'*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
