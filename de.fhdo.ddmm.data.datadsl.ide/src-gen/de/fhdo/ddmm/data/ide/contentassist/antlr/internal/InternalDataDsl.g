/*
 * generated by Xtext 2.12.0
 */
grammar InternalDataDsl;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package de.fhdo.ddmm.data.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package de.fhdo.ddmm.data.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import de.fhdo.ddmm.data.services.DataDslGrammarAccess;

}
@parser::members {
	private DataDslGrammarAccess grammarAccess;

	public void setGrammarAccess(DataDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleDataModel
entryRuleDataModel
:
{ before(grammarAccess.getDataModelRule()); }
	 ruleDataModel
{ after(grammarAccess.getDataModelRule()); } 
	 EOF 
;

// Rule DataModel
ruleDataModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDataModelAccess().getGroup()); }
		(rule__DataModel__Group__0)
		{ after(grammarAccess.getDataModelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleComplexTypeImport
entryRuleComplexTypeImport
:
{ before(grammarAccess.getComplexTypeImportRule()); }
	 ruleComplexTypeImport
{ after(grammarAccess.getComplexTypeImportRule()); } 
	 EOF 
;

// Rule ComplexTypeImport
ruleComplexTypeImport 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getComplexTypeImportAccess().getGroup()); }
		(rule__ComplexTypeImport__Group__0)
		{ after(grammarAccess.getComplexTypeImportAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVersion
entryRuleVersion
:
{ before(grammarAccess.getVersionRule()); }
	 ruleVersion
{ after(grammarAccess.getVersionRule()); } 
	 EOF 
;

// Rule Version
ruleVersion 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVersionAccess().getGroup()); }
		(rule__Version__Group__0)
		{ after(grammarAccess.getVersionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleContext
entryRuleContext
:
{ before(grammarAccess.getContextRule()); }
	 ruleContext
{ after(grammarAccess.getContextRule()); } 
	 EOF 
;

// Rule Context
ruleContext 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getContextAccess().getGroup()); }
		(rule__Context__Group__0)
		{ after(grammarAccess.getContextAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleComplexType
entryRuleComplexType
:
{ before(grammarAccess.getComplexTypeRule()); }
	 ruleComplexType
{ after(grammarAccess.getComplexTypeRule()); } 
	 EOF 
;

// Rule ComplexType
ruleComplexType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getComplexTypeAccess().getAlternatives()); }
		(rule__ComplexType__Alternatives)
		{ after(grammarAccess.getComplexTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDataStructure
entryRuleDataStructure
:
{ before(grammarAccess.getDataStructureRule()); }
	 ruleDataStructure
{ after(grammarAccess.getDataStructureRule()); } 
	 EOF 
;

// Rule DataStructure
ruleDataStructure 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDataStructureAccess().getGroup()); }
		(rule__DataStructure__Group__0)
		{ after(grammarAccess.getDataStructureAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleListType
entryRuleListType
:
{ before(grammarAccess.getListTypeRule()); }
	 ruleListType
{ after(grammarAccess.getListTypeRule()); } 
	 EOF 
;

// Rule ListType
ruleListType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getListTypeAccess().getAlternatives()); }
		(rule__ListType__Alternatives)
		{ after(grammarAccess.getListTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDataField
entryRuleDataField
:
{ before(grammarAccess.getDataFieldRule()); }
	 ruleDataField
{ after(grammarAccess.getDataFieldRule()); } 
	 EOF 
;

// Rule DataField
ruleDataField 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDataFieldAccess().getGroup()); }
		(rule__DataField__Group__0)
		{ after(grammarAccess.getDataFieldAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePossiblyImportedComplexType
entryRulePossiblyImportedComplexType
:
{ before(grammarAccess.getPossiblyImportedComplexTypeRule()); }
	 rulePossiblyImportedComplexType
{ after(grammarAccess.getPossiblyImportedComplexTypeRule()); } 
	 EOF 
;

// Rule PossiblyImportedComplexType
rulePossiblyImportedComplexType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPossiblyImportedComplexTypeAccess().getGroup()); }
		(rule__PossiblyImportedComplexType__Group__0)
		{ after(grammarAccess.getPossiblyImportedComplexTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePrimitiveType
entryRulePrimitiveType
:
{ before(grammarAccess.getPrimitiveTypeRule()); }
	 rulePrimitiveType
{ after(grammarAccess.getPrimitiveTypeRule()); } 
	 EOF 
;

// Rule PrimitiveType
rulePrimitiveType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrimitiveTypeAccess().getAlternatives()); }
		(rule__PrimitiveType__Alternatives)
		{ after(grammarAccess.getPrimitiveTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleQualifiedName
entryRuleQualifiedName
:
{ before(grammarAccess.getQualifiedNameRule()); }
	 ruleQualifiedName
{ after(grammarAccess.getQualifiedNameRule()); } 
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQualifiedNameAccess().getGroup()); }
		(rule__QualifiedName__Group__0)
		{ after(grammarAccess.getQualifiedNameAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataModel__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		(
			{ before(grammarAccess.getDataModelAccess().getVersionsAssignment_1_0()); }
			(rule__DataModel__VersionsAssignment_1_0)
			{ after(grammarAccess.getDataModelAccess().getVersionsAssignment_1_0()); }
		)
		(
			{ before(grammarAccess.getDataModelAccess().getVersionsAssignment_1_0()); }
			(rule__DataModel__VersionsAssignment_1_0)*
			{ after(grammarAccess.getDataModelAccess().getVersionsAssignment_1_0()); }
		)
	)
	|
	(
		(
			{ before(grammarAccess.getDataModelAccess().getContextsAssignment_1_1()); }
			(rule__DataModel__ContextsAssignment_1_1)
			{ after(grammarAccess.getDataModelAccess().getContextsAssignment_1_1()); }
		)
		(
			{ before(grammarAccess.getDataModelAccess().getContextsAssignment_1_1()); }
			(rule__DataModel__ContextsAssignment_1_1)*
			{ after(grammarAccess.getDataModelAccess().getContextsAssignment_1_1()); }
		)
	)
	|
	(
		(
			{ before(grammarAccess.getDataModelAccess().getComplexTypesAssignment_1_2()); }
			(rule__DataModel__ComplexTypesAssignment_1_2)
			{ after(grammarAccess.getDataModelAccess().getComplexTypesAssignment_1_2()); }
		)
		(
			{ before(grammarAccess.getDataModelAccess().getComplexTypesAssignment_1_2()); }
			(rule__DataModel__ComplexTypesAssignment_1_2)*
			{ after(grammarAccess.getDataModelAccess().getComplexTypesAssignment_1_2()); }
		)
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Version__Alternatives_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		(
			{ before(grammarAccess.getVersionAccess().getComplexTypesAssignment_3_0()); }
			(rule__Version__ComplexTypesAssignment_3_0)
			{ after(grammarAccess.getVersionAccess().getComplexTypesAssignment_3_0()); }
		)
		(
			{ before(grammarAccess.getVersionAccess().getComplexTypesAssignment_3_0()); }
			(rule__Version__ComplexTypesAssignment_3_0)*
			{ after(grammarAccess.getVersionAccess().getComplexTypesAssignment_3_0()); }
		)
	)
	|
	(
		(
			{ before(grammarAccess.getVersionAccess().getContextsAssignment_3_1()); }
			(rule__Version__ContextsAssignment_3_1)
			{ after(grammarAccess.getVersionAccess().getContextsAssignment_3_1()); }
		)
		(
			{ before(grammarAccess.getVersionAccess().getContextsAssignment_3_1()); }
			(rule__Version__ContextsAssignment_3_1)*
			{ after(grammarAccess.getVersionAccess().getContextsAssignment_3_1()); }
		)
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComplexTypeAccess().getDataStructureParserRuleCall_0()); }
		ruleDataStructure
		{ after(grammarAccess.getComplexTypeAccess().getDataStructureParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getComplexTypeAccess().getListTypeParserRuleCall_1()); }
		ruleListType
		{ after(grammarAccess.getComplexTypeAccess().getListTypeParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getListTypeAccess().getGroup_0()); }
		(rule__ListType__Group_0__0)
		{ after(grammarAccess.getListTypeAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getListTypeAccess().getGroup_1()); }
		(rule__ListType__Group_1__0)
		{ after(grammarAccess.getListTypeAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataField__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataFieldAccess().getPrimitiveTypeAssignment_1_0()); }
		(rule__DataField__PrimitiveTypeAssignment_1_0)
		{ after(grammarAccess.getDataFieldAccess().getPrimitiveTypeAssignment_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getDataFieldAccess().getComplexTypeAssignment_1_1()); }
		(rule__DataField__ComplexTypeAssignment_1_1)
		{ after(grammarAccess.getDataFieldAccess().getComplexTypeAssignment_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimitiveTypeAccess().getGroup_0()); }
		(rule__PrimitiveType__Group_0__0)
		{ after(grammarAccess.getPrimitiveTypeAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getPrimitiveTypeAccess().getGroup_1()); }
		(rule__PrimitiveType__Group_1__0)
		{ after(grammarAccess.getPrimitiveTypeAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getPrimitiveTypeAccess().getGroup_2()); }
		(rule__PrimitiveType__Group_2__0)
		{ after(grammarAccess.getPrimitiveTypeAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getPrimitiveTypeAccess().getGroup_3()); }
		(rule__PrimitiveType__Group_3__0)
		{ after(grammarAccess.getPrimitiveTypeAccess().getGroup_3()); }
	)
	|
	(
		{ before(grammarAccess.getPrimitiveTypeAccess().getGroup_4()); }
		(rule__PrimitiveType__Group_4__0)
		{ after(grammarAccess.getPrimitiveTypeAccess().getGroup_4()); }
	)
	|
	(
		{ before(grammarAccess.getPrimitiveTypeAccess().getGroup_5()); }
		(rule__PrimitiveType__Group_5__0)
		{ after(grammarAccess.getPrimitiveTypeAccess().getGroup_5()); }
	)
	|
	(
		{ before(grammarAccess.getPrimitiveTypeAccess().getGroup_6()); }
		(rule__PrimitiveType__Group_6__0)
		{ after(grammarAccess.getPrimitiveTypeAccess().getGroup_6()); }
	)
	|
	(
		{ before(grammarAccess.getPrimitiveTypeAccess().getGroup_7()); }
		(rule__PrimitiveType__Group_7__0)
		{ after(grammarAccess.getPrimitiveTypeAccess().getGroup_7()); }
	)
	|
	(
		{ before(grammarAccess.getPrimitiveTypeAccess().getGroup_8()); }
		(rule__PrimitiveType__Group_8__0)
		{ after(grammarAccess.getPrimitiveTypeAccess().getGroup_8()); }
	)
	|
	(
		{ before(grammarAccess.getPrimitiveTypeAccess().getGroup_9()); }
		(rule__PrimitiveType__Group_9__0)
		{ after(grammarAccess.getPrimitiveTypeAccess().getGroup_9()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataModel__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataModel__Group__0__Impl
	rule__DataModel__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataModel__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataModelAccess().getComplexTypeImportsAssignment_0()); }
	(rule__DataModel__ComplexTypeImportsAssignment_0)*
	{ after(grammarAccess.getDataModelAccess().getComplexTypeImportsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataModel__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataModel__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataModel__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataModelAccess().getAlternatives_1()); }
	(rule__DataModel__Alternatives_1)
	{ after(grammarAccess.getDataModelAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ComplexTypeImport__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComplexTypeImport__Group__0__Impl
	rule__ComplexTypeImport__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexTypeImport__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComplexTypeImportAccess().getImportKeyword_0()); }
	'import'
	{ after(grammarAccess.getComplexTypeImportAccess().getImportKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexTypeImport__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComplexTypeImport__Group__1__Impl
	rule__ComplexTypeImport__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexTypeImport__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComplexTypeImportAccess().getDatatypesKeyword_1()); }
	'datatypes'
	{ after(grammarAccess.getComplexTypeImportAccess().getDatatypesKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexTypeImport__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComplexTypeImport__Group__2__Impl
	rule__ComplexTypeImport__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexTypeImport__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComplexTypeImportAccess().getFromKeyword_2()); }
	'from'
	{ after(grammarAccess.getComplexTypeImportAccess().getFromKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexTypeImport__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComplexTypeImport__Group__3__Impl
	rule__ComplexTypeImport__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexTypeImport__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComplexTypeImportAccess().getImportURIAssignment_3()); }
	(rule__ComplexTypeImport__ImportURIAssignment_3)
	{ after(grammarAccess.getComplexTypeImportAccess().getImportURIAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexTypeImport__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComplexTypeImport__Group__4__Impl
	rule__ComplexTypeImport__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexTypeImport__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComplexTypeImportAccess().getAsKeyword_4()); }
	'as'
	{ after(grammarAccess.getComplexTypeImportAccess().getAsKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexTypeImport__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComplexTypeImport__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexTypeImport__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComplexTypeImportAccess().getNameAssignment_5()); }
	(rule__ComplexTypeImport__NameAssignment_5)
	{ after(grammarAccess.getComplexTypeImportAccess().getNameAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Version__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Version__Group__0__Impl
	rule__Version__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Version__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVersionAccess().getVersionKeyword_0()); }
	'version'
	{ after(grammarAccess.getVersionAccess().getVersionKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Version__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Version__Group__1__Impl
	rule__Version__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Version__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVersionAccess().getNameAssignment_1()); }
	(rule__Version__NameAssignment_1)
	{ after(grammarAccess.getVersionAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Version__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Version__Group__2__Impl
	rule__Version__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Version__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVersionAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getVersionAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Version__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Version__Group__3__Impl
	rule__Version__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Version__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVersionAccess().getAlternatives_3()); }
	(rule__Version__Alternatives_3)?
	{ after(grammarAccess.getVersionAccess().getAlternatives_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Version__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Version__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Version__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVersionAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getVersionAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Context__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Context__Group__0__Impl
	rule__Context__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Context__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContextAccess().getContextKeyword_0()); }
	'context'
	{ after(grammarAccess.getContextAccess().getContextKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Context__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Context__Group__1__Impl
	rule__Context__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Context__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContextAccess().getNameAssignment_1()); }
	(rule__Context__NameAssignment_1)
	{ after(grammarAccess.getContextAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Context__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Context__Group__2__Impl
	rule__Context__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Context__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContextAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getContextAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Context__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Context__Group__3__Impl
	rule__Context__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Context__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getContextAccess().getComplexTypesAssignment_3()); }
		(rule__Context__ComplexTypesAssignment_3)
		{ after(grammarAccess.getContextAccess().getComplexTypesAssignment_3()); }
	)
	(
		{ before(grammarAccess.getContextAccess().getComplexTypesAssignment_3()); }
		(rule__Context__ComplexTypesAssignment_3)*
		{ after(grammarAccess.getContextAccess().getComplexTypesAssignment_3()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Context__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Context__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Context__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContextAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getContextAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DataStructure__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataStructure__Group__0__Impl
	rule__DataStructure__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataStructure__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataStructureAccess().getStructureKeyword_0()); }
	'structure'
	{ after(grammarAccess.getDataStructureAccess().getStructureKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataStructure__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataStructure__Group__1__Impl
	rule__DataStructure__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DataStructure__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataStructureAccess().getNameAssignment_1()); }
	(rule__DataStructure__NameAssignment_1)
	{ after(grammarAccess.getDataStructureAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataStructure__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataStructure__Group__2__Impl
	rule__DataStructure__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DataStructure__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataStructureAccess().getGroup_2()); }
	(rule__DataStructure__Group_2__0)?
	{ after(grammarAccess.getDataStructureAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataStructure__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataStructure__Group__3__Impl
	rule__DataStructure__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DataStructure__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataStructureAccess().getLeftCurlyBracketKeyword_3()); }
	'{'
	{ after(grammarAccess.getDataStructureAccess().getLeftCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataStructure__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataStructure__Group__4__Impl
	rule__DataStructure__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__DataStructure__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataStructureAccess().getGroup_4()); }
	(rule__DataStructure__Group_4__0)?
	{ after(grammarAccess.getDataStructureAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataStructure__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataStructure__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataStructure__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataStructureAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getDataStructureAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DataStructure__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataStructure__Group_2__0__Impl
	rule__DataStructure__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataStructure__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataStructureAccess().getExtendsKeyword_2_0()); }
	'extends'
	{ after(grammarAccess.getDataStructureAccess().getExtendsKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataStructure__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataStructure__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataStructure__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataStructureAccess().getSuperAssignment_2_1()); }
	(rule__DataStructure__SuperAssignment_2_1)
	{ after(grammarAccess.getDataStructureAccess().getSuperAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DataStructure__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataStructure__Group_4__0__Impl
	rule__DataStructure__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataStructure__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataStructureAccess().getDataFieldsAssignment_4_0()); }
	(rule__DataStructure__DataFieldsAssignment_4_0)
	{ after(grammarAccess.getDataStructureAccess().getDataFieldsAssignment_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataStructure__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataStructure__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataStructure__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataStructureAccess().getGroup_4_1()); }
	(rule__DataStructure__Group_4_1__0)*
	{ after(grammarAccess.getDataStructureAccess().getGroup_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DataStructure__Group_4_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataStructure__Group_4_1__0__Impl
	rule__DataStructure__Group_4_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataStructure__Group_4_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataStructureAccess().getCommaKeyword_4_1_0()); }
	','
	{ after(grammarAccess.getDataStructureAccess().getCommaKeyword_4_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataStructure__Group_4_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataStructure__Group_4_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataStructure__Group_4_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataStructureAccess().getDataFieldsAssignment_4_1_1()); }
	(rule__DataStructure__DataFieldsAssignment_4_1_1)
	{ after(grammarAccess.getDataStructureAccess().getDataFieldsAssignment_4_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ListType__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListType__Group_0__0__Impl
	rule__ListType__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ListType__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListTypeAccess().getListKeyword_0_0()); }
	'list'
	{ after(grammarAccess.getListTypeAccess().getListKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListType__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListType__Group_0__1__Impl
	rule__ListType__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ListType__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListTypeAccess().getNameAssignment_0_1()); }
	(rule__ListType__NameAssignment_0_1)
	{ after(grammarAccess.getListTypeAccess().getNameAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListType__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListType__Group_0__2__Impl
	rule__ListType__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ListType__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListTypeAccess().getLeftCurlyBracketKeyword_0_2()); }
	'{'
	{ after(grammarAccess.getListTypeAccess().getLeftCurlyBracketKeyword_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListType__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListType__Group_0__3__Impl
	rule__ListType__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ListType__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListTypeAccess().getDataFieldsAssignment_0_3()); }
	(rule__ListType__DataFieldsAssignment_0_3)
	{ after(grammarAccess.getListTypeAccess().getDataFieldsAssignment_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListType__Group_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListType__Group_0__4__Impl
	rule__ListType__Group_0__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ListType__Group_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListTypeAccess().getGroup_0_4()); }
	(rule__ListType__Group_0_4__0)*
	{ after(grammarAccess.getListTypeAccess().getGroup_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListType__Group_0__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListType__Group_0__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ListType__Group_0__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListTypeAccess().getRightCurlyBracketKeyword_0_5()); }
	'}'
	{ after(grammarAccess.getListTypeAccess().getRightCurlyBracketKeyword_0_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ListType__Group_0_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListType__Group_0_4__0__Impl
	rule__ListType__Group_0_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ListType__Group_0_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListTypeAccess().getCommaKeyword_0_4_0()); }
	','
	{ after(grammarAccess.getListTypeAccess().getCommaKeyword_0_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListType__Group_0_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListType__Group_0_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ListType__Group_0_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListTypeAccess().getDataFieldsAssignment_0_4_1()); }
	(rule__ListType__DataFieldsAssignment_0_4_1)
	{ after(grammarAccess.getListTypeAccess().getDataFieldsAssignment_0_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ListType__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListType__Group_1__0__Impl
	rule__ListType__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ListType__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListTypeAccess().getListKeyword_1_0()); }
	'list'
	{ after(grammarAccess.getListTypeAccess().getListKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListType__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListType__Group_1__1__Impl
	rule__ListType__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ListType__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListTypeAccess().getNameAssignment_1_1()); }
	(rule__ListType__NameAssignment_1_1)
	{ after(grammarAccess.getListTypeAccess().getNameAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListType__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListType__Group_1__2__Impl
	rule__ListType__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ListType__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListTypeAccess().getLeftCurlyBracketKeyword_1_2()); }
	'{'
	{ after(grammarAccess.getListTypeAccess().getLeftCurlyBracketKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListType__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListType__Group_1__3__Impl
	rule__ListType__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ListType__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListTypeAccess().getPrimitiveTypeAssignment_1_3()); }
	(rule__ListType__PrimitiveTypeAssignment_1_3)
	{ after(grammarAccess.getListTypeAccess().getPrimitiveTypeAssignment_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListType__Group_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListType__Group_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ListType__Group_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListTypeAccess().getRightCurlyBracketKeyword_1_4()); }
	'}'
	{ after(grammarAccess.getListTypeAccess().getRightCurlyBracketKeyword_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DataField__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataField__Group__0__Impl
	rule__DataField__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataField__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataFieldAccess().getHiddenAssignment_0()); }
	(rule__DataField__HiddenAssignment_0)?
	{ after(grammarAccess.getDataFieldAccess().getHiddenAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataField__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataField__Group__1__Impl
	rule__DataField__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DataField__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataFieldAccess().getAlternatives_1()); }
	(rule__DataField__Alternatives_1)?
	{ after(grammarAccess.getDataFieldAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataField__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataField__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataField__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataFieldAccess().getNameAssignment_2()); }
	(rule__DataField__NameAssignment_2)
	{ after(grammarAccess.getDataFieldAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PossiblyImportedComplexType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PossiblyImportedComplexType__Group__0__Impl
	rule__PossiblyImportedComplexType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PossiblyImportedComplexType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPossiblyImportedComplexTypeAccess().getGroup_0()); }
	(rule__PossiblyImportedComplexType__Group_0__0)?
	{ after(grammarAccess.getPossiblyImportedComplexTypeAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PossiblyImportedComplexType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PossiblyImportedComplexType__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PossiblyImportedComplexType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPossiblyImportedComplexTypeAccess().getComplexTypeAssignment_1()); }
	(rule__PossiblyImportedComplexType__ComplexTypeAssignment_1)
	{ after(grammarAccess.getPossiblyImportedComplexTypeAccess().getComplexTypeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PossiblyImportedComplexType__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PossiblyImportedComplexType__Group_0__0__Impl
	rule__PossiblyImportedComplexType__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PossiblyImportedComplexType__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPossiblyImportedComplexTypeAccess().getImportAssignment_0_0()); }
	(rule__PossiblyImportedComplexType__ImportAssignment_0_0)
	{ after(grammarAccess.getPossiblyImportedComplexTypeAccess().getImportAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PossiblyImportedComplexType__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PossiblyImportedComplexType__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PossiblyImportedComplexType__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPossiblyImportedComplexTypeAccess().getColonColonKeyword_0_1()); }
	'::'
	{ after(grammarAccess.getPossiblyImportedComplexTypeAccess().getColonColonKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimitiveType__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimitiveType__Group_0__0__Impl
	rule__PrimitiveType__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveType__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveTypeAccess().getPrimitiveBooleanAction_0_0()); }
	()
	{ after(grammarAccess.getPrimitiveTypeAccess().getPrimitiveBooleanAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveType__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimitiveType__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveType__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveTypeAccess().getBooleanKeyword_0_1()); }
	'boolean'
	{ after(grammarAccess.getPrimitiveTypeAccess().getBooleanKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimitiveType__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimitiveType__Group_1__0__Impl
	rule__PrimitiveType__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveType__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveTypeAccess().getPrimitiveByteAction_1_0()); }
	()
	{ after(grammarAccess.getPrimitiveTypeAccess().getPrimitiveByteAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveType__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimitiveType__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveType__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveTypeAccess().getByteKeyword_1_1()); }
	'byte'
	{ after(grammarAccess.getPrimitiveTypeAccess().getByteKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimitiveType__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimitiveType__Group_2__0__Impl
	rule__PrimitiveType__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveType__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveTypeAccess().getPrimitiveCharacterAction_2_0()); }
	()
	{ after(grammarAccess.getPrimitiveTypeAccess().getPrimitiveCharacterAction_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveType__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimitiveType__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveType__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveTypeAccess().getCharKeyword_2_1()); }
	'char'
	{ after(grammarAccess.getPrimitiveTypeAccess().getCharKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimitiveType__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimitiveType__Group_3__0__Impl
	rule__PrimitiveType__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveType__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveTypeAccess().getPrimitiveDateAction_3_0()); }
	()
	{ after(grammarAccess.getPrimitiveTypeAccess().getPrimitiveDateAction_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveType__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimitiveType__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveType__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveTypeAccess().getDateKeyword_3_1()); }
	'date'
	{ after(grammarAccess.getPrimitiveTypeAccess().getDateKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimitiveType__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimitiveType__Group_4__0__Impl
	rule__PrimitiveType__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveType__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveTypeAccess().getPrimitiveDoubleAction_4_0()); }
	()
	{ after(grammarAccess.getPrimitiveTypeAccess().getPrimitiveDoubleAction_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveType__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimitiveType__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveType__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveTypeAccess().getDoubleKeyword_4_1()); }
	'double'
	{ after(grammarAccess.getPrimitiveTypeAccess().getDoubleKeyword_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimitiveType__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimitiveType__Group_5__0__Impl
	rule__PrimitiveType__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveType__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveTypeAccess().getPrimitiveFloatAction_5_0()); }
	()
	{ after(grammarAccess.getPrimitiveTypeAccess().getPrimitiveFloatAction_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveType__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimitiveType__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveType__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveTypeAccess().getFloatKeyword_5_1()); }
	'float'
	{ after(grammarAccess.getPrimitiveTypeAccess().getFloatKeyword_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimitiveType__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimitiveType__Group_6__0__Impl
	rule__PrimitiveType__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveType__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveTypeAccess().getPrimitiveIntegerAction_6_0()); }
	()
	{ after(grammarAccess.getPrimitiveTypeAccess().getPrimitiveIntegerAction_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveType__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimitiveType__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveType__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveTypeAccess().getIntKeyword_6_1()); }
	'int'
	{ after(grammarAccess.getPrimitiveTypeAccess().getIntKeyword_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimitiveType__Group_7__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimitiveType__Group_7__0__Impl
	rule__PrimitiveType__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveType__Group_7__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveTypeAccess().getPrimitiveLongAction_7_0()); }
	()
	{ after(grammarAccess.getPrimitiveTypeAccess().getPrimitiveLongAction_7_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveType__Group_7__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimitiveType__Group_7__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveType__Group_7__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveTypeAccess().getLongKeyword_7_1()); }
	'long'
	{ after(grammarAccess.getPrimitiveTypeAccess().getLongKeyword_7_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimitiveType__Group_8__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimitiveType__Group_8__0__Impl
	rule__PrimitiveType__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveType__Group_8__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveTypeAccess().getPrimitiveShortAction_8_0()); }
	()
	{ after(grammarAccess.getPrimitiveTypeAccess().getPrimitiveShortAction_8_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveType__Group_8__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimitiveType__Group_8__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveType__Group_8__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveTypeAccess().getShortKeyword_8_1()); }
	'short'
	{ after(grammarAccess.getPrimitiveTypeAccess().getShortKeyword_8_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimitiveType__Group_9__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimitiveType__Group_9__0__Impl
	rule__PrimitiveType__Group_9__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveType__Group_9__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveTypeAccess().getPrimitiveStringAction_9_0()); }
	()
	{ after(grammarAccess.getPrimitiveTypeAccess().getPrimitiveStringAction_9_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveType__Group_9__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimitiveType__Group_9__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveType__Group_9__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveTypeAccess().getStringKeyword_9_1()); }
	'string'
	{ after(grammarAccess.getPrimitiveTypeAccess().getStringKeyword_9_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group__0__Impl
	rule__QualifiedName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
	{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
	(rule__QualifiedName__Group_1__0)*
	{ after(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group_1__0__Impl
	rule__QualifiedName__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
	'.'
	{ after(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
	{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DataModel__ComplexTypeImportsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataModelAccess().getComplexTypeImportsComplexTypeImportParserRuleCall_0_0()); }
		ruleComplexTypeImport
		{ after(grammarAccess.getDataModelAccess().getComplexTypeImportsComplexTypeImportParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataModel__VersionsAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataModelAccess().getVersionsVersionParserRuleCall_1_0_0()); }
		ruleVersion
		{ after(grammarAccess.getDataModelAccess().getVersionsVersionParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataModel__ContextsAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataModelAccess().getContextsContextParserRuleCall_1_1_0()); }
		ruleContext
		{ after(grammarAccess.getDataModelAccess().getContextsContextParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataModel__ComplexTypesAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataModelAccess().getComplexTypesComplexTypeParserRuleCall_1_2_0()); }
		ruleComplexType
		{ after(grammarAccess.getDataModelAccess().getComplexTypesComplexTypeParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexTypeImport__ImportURIAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComplexTypeImportAccess().getImportURISTRINGTerminalRuleCall_3_0()); }
		RULE_STRING
		{ after(grammarAccess.getComplexTypeImportAccess().getImportURISTRINGTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexTypeImport__NameAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComplexTypeImportAccess().getNameIDTerminalRuleCall_5_0()); }
		RULE_ID
		{ after(grammarAccess.getComplexTypeImportAccess().getNameIDTerminalRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Version__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVersionAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getVersionAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Version__ComplexTypesAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVersionAccess().getComplexTypesComplexTypeParserRuleCall_3_0_0()); }
		ruleComplexType
		{ after(grammarAccess.getVersionAccess().getComplexTypesComplexTypeParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Version__ContextsAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVersionAccess().getContextsContextParserRuleCall_3_1_0()); }
		ruleContext
		{ after(grammarAccess.getVersionAccess().getContextsContextParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Context__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getContextAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getContextAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Context__ComplexTypesAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getContextAccess().getComplexTypesComplexTypeParserRuleCall_3_0()); }
		ruleComplexType
		{ after(grammarAccess.getContextAccess().getComplexTypesComplexTypeParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataStructure__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataStructureAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getDataStructureAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataStructure__SuperAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataStructureAccess().getSuperDataStructureCrossReference_2_1_0()); }
		(
			{ before(grammarAccess.getDataStructureAccess().getSuperDataStructureQualifiedNameParserRuleCall_2_1_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getDataStructureAccess().getSuperDataStructureQualifiedNameParserRuleCall_2_1_0_1()); }
		)
		{ after(grammarAccess.getDataStructureAccess().getSuperDataStructureCrossReference_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataStructure__DataFieldsAssignment_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataStructureAccess().getDataFieldsDataFieldParserRuleCall_4_0_0()); }
		ruleDataField
		{ after(grammarAccess.getDataStructureAccess().getDataFieldsDataFieldParserRuleCall_4_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataStructure__DataFieldsAssignment_4_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataStructureAccess().getDataFieldsDataFieldParserRuleCall_4_1_1_0()); }
		ruleDataField
		{ after(grammarAccess.getDataStructureAccess().getDataFieldsDataFieldParserRuleCall_4_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListType__NameAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getListTypeAccess().getNameIDTerminalRuleCall_0_1_0()); }
		RULE_ID
		{ after(grammarAccess.getListTypeAccess().getNameIDTerminalRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListType__DataFieldsAssignment_0_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getListTypeAccess().getDataFieldsDataFieldParserRuleCall_0_3_0()); }
		ruleDataField
		{ after(grammarAccess.getListTypeAccess().getDataFieldsDataFieldParserRuleCall_0_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListType__DataFieldsAssignment_0_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getListTypeAccess().getDataFieldsDataFieldParserRuleCall_0_4_1_0()); }
		ruleDataField
		{ after(grammarAccess.getListTypeAccess().getDataFieldsDataFieldParserRuleCall_0_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListType__NameAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getListTypeAccess().getNameIDTerminalRuleCall_1_1_0()); }
		RULE_ID
		{ after(grammarAccess.getListTypeAccess().getNameIDTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListType__PrimitiveTypeAssignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getListTypeAccess().getPrimitiveTypePrimitiveTypeParserRuleCall_1_3_0()); }
		rulePrimitiveType
		{ after(grammarAccess.getListTypeAccess().getPrimitiveTypePrimitiveTypeParserRuleCall_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataField__HiddenAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataFieldAccess().getHiddenHideKeyword_0_0()); }
		(
			{ before(grammarAccess.getDataFieldAccess().getHiddenHideKeyword_0_0()); }
			'hide'
			{ after(grammarAccess.getDataFieldAccess().getHiddenHideKeyword_0_0()); }
		)
		{ after(grammarAccess.getDataFieldAccess().getHiddenHideKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataField__PrimitiveTypeAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataFieldAccess().getPrimitiveTypePrimitiveTypeParserRuleCall_1_0_0()); }
		rulePrimitiveType
		{ after(grammarAccess.getDataFieldAccess().getPrimitiveTypePrimitiveTypeParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataField__ComplexTypeAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataFieldAccess().getComplexTypePossiblyImportedComplexTypeParserRuleCall_1_1_0()); }
		rulePossiblyImportedComplexType
		{ after(grammarAccess.getDataFieldAccess().getComplexTypePossiblyImportedComplexTypeParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataField__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataFieldAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getDataFieldAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PossiblyImportedComplexType__ImportAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPossiblyImportedComplexTypeAccess().getImportComplexTypeImportCrossReference_0_0_0()); }
		(
			{ before(grammarAccess.getPossiblyImportedComplexTypeAccess().getImportComplexTypeImportIDTerminalRuleCall_0_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getPossiblyImportedComplexTypeAccess().getImportComplexTypeImportIDTerminalRuleCall_0_0_0_1()); }
		)
		{ after(grammarAccess.getPossiblyImportedComplexTypeAccess().getImportComplexTypeImportCrossReference_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PossiblyImportedComplexType__ComplexTypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPossiblyImportedComplexTypeAccess().getComplexTypeComplexTypeCrossReference_1_0()); }
		(
			{ before(grammarAccess.getPossiblyImportedComplexTypeAccess().getComplexTypeComplexTypeQualifiedNameParserRuleCall_1_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getPossiblyImportedComplexTypeAccess().getComplexTypeComplexTypeQualifiedNameParserRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getPossiblyImportedComplexTypeAccess().getComplexTypeComplexTypeCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_BIG_DECIMAL : '-'? RULE_INT ('.' RULE_INT)?;

RULE_BOOLEAN : ('true'|'false');

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

fragment RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
