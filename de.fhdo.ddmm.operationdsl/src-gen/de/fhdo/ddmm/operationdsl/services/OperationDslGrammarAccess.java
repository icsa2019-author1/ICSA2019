/*
 * generated by Xtext 2.12.0
 */
package de.fhdo.ddmm.operationdsl.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import de.fhdo.ddmm.data.services.DataDslGrammarAccess;
import de.fhdo.ddmm.services.ServiceDslGrammarAccess;
import de.fhdo.ddmm.technology.services.TechnologyDslGrammarAccess;
import java.util.List;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.EnumLiteralDeclaration;
import org.eclipse.xtext.EnumRule;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractEnumRuleElementFinder;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractGrammarElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class OperationDslGrammarAccess extends AbstractGrammarElementFinder {
	
	public class OperationModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fhdo.ddmm.operationdsl.OperationDsl.OperationModel");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cImportsAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cImportsImportParserRuleCall_0_0 = (RuleCall)cImportsAssignment_0.eContents().get(0);
		private final Assignment cContainersAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cContainersContainerParserRuleCall_1_0 = (RuleCall)cContainersAssignment_1.eContents().get(0);
		private final Assignment cInfrastructureNodesAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cInfrastructureNodesInfrastructureNodeParserRuleCall_2_0 = (RuleCall)cInfrastructureNodesAssignment_2.eContents().get(0);
		
		//OperationModel:
		//	imports+=Import+
		//	containers+=Container*
		//	infrastructureNodes+=InfrastructureNode*;
		@Override public ParserRule getRule() { return rule; }
		
		//imports+=Import+ containers+=Container* infrastructureNodes+=InfrastructureNode*
		public Group getGroup() { return cGroup; }
		
		//imports+=Import+
		public Assignment getImportsAssignment_0() { return cImportsAssignment_0; }
		
		//Import
		public RuleCall getImportsImportParserRuleCall_0_0() { return cImportsImportParserRuleCall_0_0; }
		
		//containers+=Container*
		public Assignment getContainersAssignment_1() { return cContainersAssignment_1; }
		
		//Container
		public RuleCall getContainersContainerParserRuleCall_1_0() { return cContainersContainerParserRuleCall_1_0; }
		
		//infrastructureNodes+=InfrastructureNode*
		public Assignment getInfrastructureNodesAssignment_2() { return cInfrastructureNodesAssignment_2; }
		
		//InfrastructureNode
		public RuleCall getInfrastructureNodesInfrastructureNodeParserRuleCall_2_0() { return cInfrastructureNodesInfrastructureNodeParserRuleCall_2_0; }
	}
	public class ContainerElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fhdo.ddmm.operationdsl.OperationDsl.Container");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Keyword cCommercialAtKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Keyword cTechnologyKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_0_2 = (Keyword)cGroup_0.eContents().get(2);
		private final Assignment cTechnologiesAssignment_0_3 = (Assignment)cGroup_0.eContents().get(3);
		private final CrossReference cTechnologiesImportCrossReference_0_3_0 = (CrossReference)cTechnologiesAssignment_0_3.eContents().get(0);
		private final RuleCall cTechnologiesImportIDTerminalRuleCall_0_3_0_1 = (RuleCall)cTechnologiesImportCrossReference_0_3_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_0_4 = (Keyword)cGroup_0.eContents().get(4);
		private final Keyword cContainerKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cDeploymentKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cTechnologyKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cDeploymentTechnologyAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cDeploymentTechnologyDeploymentTechnologyReferenceParserRuleCall_5_0 = (RuleCall)cDeploymentTechnologyAssignment_5.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cWithKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Keyword cOperationKeyword_6_1 = (Keyword)cGroup_6.eContents().get(1);
		private final Keyword cEnvironmentKeyword_6_2 = (Keyword)cGroup_6.eContents().get(2);
		private final Assignment cOperationEnvironmentAssignment_6_3 = (Assignment)cGroup_6.eContents().get(3);
		private final CrossReference cOperationEnvironmentOperationEnvironmentCrossReference_6_3_0 = (CrossReference)cOperationEnvironmentAssignment_6_3.eContents().get(0);
		private final RuleCall cOperationEnvironmentOperationEnvironmentSTRINGTerminalRuleCall_6_3_0_1 = (RuleCall)cOperationEnvironmentOperationEnvironmentCrossReference_6_3_0.eContents().get(1);
		private final Keyword cDeploysKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cDeployedServicesAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cDeployedServicesImportedMicroserviceParserRuleCall_8_0 = (RuleCall)cDeployedServicesAssignment_8.eContents().get(0);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Keyword cCommaKeyword_9_0 = (Keyword)cGroup_9.eContents().get(0);
		private final Assignment cDeployedServicesAssignment_9_1 = (Assignment)cGroup_9.eContents().get(1);
		private final RuleCall cDeployedServicesImportedMicroserviceParserRuleCall_9_1_0 = (RuleCall)cDeployedServicesAssignment_9_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Group cGroup_11 = (Group)cGroup.eContents().get(11);
		private final Keyword cAspectsKeyword_11_0 = (Keyword)cGroup_11.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_11_1 = (Keyword)cGroup_11.eContents().get(1);
		private final Assignment cAspectsAssignment_11_2 = (Assignment)cGroup_11.eContents().get(2);
		private final RuleCall cAspectsImportedOperationAspectParserRuleCall_11_2_0 = (RuleCall)cAspectsAssignment_11_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_11_3 = (Keyword)cGroup_11.eContents().get(3);
		private final Group cGroup_12 = (Group)cGroup.eContents().get(12);
		private final Keyword cDefaultKeyword_12_0 = (Keyword)cGroup_12.eContents().get(0);
		private final Keyword cValuesKeyword_12_1 = (Keyword)cGroup_12.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_12_2 = (Keyword)cGroup_12.eContents().get(2);
		private final Alternatives cAlternatives_12_3 = (Alternatives)cGroup_12.eContents().get(3);
		private final Assignment cDefaultServicePropertyValuesAssignment_12_3_0 = (Assignment)cAlternatives_12_3.eContents().get(0);
		private final RuleCall cDefaultServicePropertyValuesPropertyValueAssignmentParserRuleCall_12_3_0_0 = (RuleCall)cDefaultServicePropertyValuesAssignment_12_3_0.eContents().get(0);
		private final Group cGroup_12_3_1 = (Group)cAlternatives_12_3.eContents().get(1);
		private final Keyword cBasicKeyword_12_3_1_0 = (Keyword)cGroup_12_3_1.eContents().get(0);
		private final Keyword cEndpointsKeyword_12_3_1_1 = (Keyword)cGroup_12_3_1.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_12_3_1_2 = (Keyword)cGroup_12_3_1.eContents().get(2);
		private final Assignment cDefaultBasicEndpointsAssignment_12_3_1_3 = (Assignment)cGroup_12_3_1.eContents().get(3);
		private final RuleCall cDefaultBasicEndpointsBasicEndpointParserRuleCall_12_3_1_3_0 = (RuleCall)cDefaultBasicEndpointsAssignment_12_3_1_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_12_3_1_4 = (Keyword)cGroup_12_3_1.eContents().get(4);
		private final Group cGroup_12_3_2 = (Group)cAlternatives_12_3.eContents().get(2);
		private final Assignment cDefaultServicePropertyValuesAssignment_12_3_2_0 = (Assignment)cGroup_12_3_2.eContents().get(0);
		private final RuleCall cDefaultServicePropertyValuesPropertyValueAssignmentParserRuleCall_12_3_2_0_0 = (RuleCall)cDefaultServicePropertyValuesAssignment_12_3_2_0.eContents().get(0);
		private final Keyword cBasicKeyword_12_3_2_1 = (Keyword)cGroup_12_3_2.eContents().get(1);
		private final Keyword cEndpointsKeyword_12_3_2_2 = (Keyword)cGroup_12_3_2.eContents().get(2);
		private final Keyword cLeftCurlyBracketKeyword_12_3_2_3 = (Keyword)cGroup_12_3_2.eContents().get(3);
		private final Assignment cDefaultBasicEndpointsAssignment_12_3_2_4 = (Assignment)cGroup_12_3_2.eContents().get(4);
		private final RuleCall cDefaultBasicEndpointsBasicEndpointParserRuleCall_12_3_2_4_0 = (RuleCall)cDefaultBasicEndpointsAssignment_12_3_2_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_12_3_2_5 = (Keyword)cGroup_12_3_2.eContents().get(5);
		private final Keyword cRightCurlyBracketKeyword_12_4 = (Keyword)cGroup_12.eContents().get(4);
		private final Assignment cDeploymentSpecificationsAssignment_13 = (Assignment)cGroup.eContents().get(13);
		private final RuleCall cDeploymentSpecificationsServiceDeploymentSpecificationParserRuleCall_13_0 = (RuleCall)cDeploymentSpecificationsAssignment_13.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_14 = (Keyword)cGroup.eContents().get(14);
		
		//Container:
		//	('@' 'technology' '(' technologies+=[service::Import] ')')+
		//	'container' name=ID
		//	'deployment' 'technology' deploymentTechnology=DeploymentTechnologyReference ('with' 'operation' 'environment'
		//	operationEnvironment=[technology::OperationEnvironment|STRING])?
		//	'deploys' deployedServices+=ImportedMicroservice (',' deployedServices+=ImportedMicroservice)*
		//	'{' ('aspects' '{'
		//	aspects+=ImportedOperationAspect+
		//	'}')? ('default' 'values' '{' (defaultServicePropertyValues+=PropertyValueAssignment+
		//	| 'basic' 'endpoints' '{'
		//	defaultBasicEndpoints+=BasicEndpoint+
		//	'}' | defaultServicePropertyValues+=PropertyValueAssignment+
		//	'basic' 'endpoints' '{'
		//	defaultBasicEndpoints+=BasicEndpoint+
		//	'}')
		//	'}')?
		//	deploymentSpecifications+=ServiceDeploymentSpecification*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//('@' 'technology' '(' technologies+=[service::Import] ')')+ 'container' name=ID 'deployment' 'technology'
		//deploymentTechnology=DeploymentTechnologyReference ('with' 'operation' 'environment'
		//operationEnvironment=[technology::OperationEnvironment|STRING])? 'deploys' deployedServices+=ImportedMicroservice (','
		//deployedServices+=ImportedMicroservice)* '{' ('aspects' '{' aspects+=ImportedOperationAspect+ '}')? ('default' 'values'
		//'{' (defaultServicePropertyValues+=PropertyValueAssignment+ | 'basic' 'endpoints' '{'
		//defaultBasicEndpoints+=BasicEndpoint+ '}' | defaultServicePropertyValues+=PropertyValueAssignment+ 'basic' 'endpoints'
		//'{' defaultBasicEndpoints+=BasicEndpoint+ '}') '}')? deploymentSpecifications+=ServiceDeploymentSpecification* '}'
		public Group getGroup() { return cGroup; }
		
		//('@' 'technology' '(' technologies+=[service::Import] ')')+
		public Group getGroup_0() { return cGroup_0; }
		
		//'@'
		public Keyword getCommercialAtKeyword_0_0() { return cCommercialAtKeyword_0_0; }
		
		//'technology'
		public Keyword getTechnologyKeyword_0_1() { return cTechnologyKeyword_0_1; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_0_2() { return cLeftParenthesisKeyword_0_2; }
		
		//technologies+=[service::Import]
		public Assignment getTechnologiesAssignment_0_3() { return cTechnologiesAssignment_0_3; }
		
		//[service::Import]
		public CrossReference getTechnologiesImportCrossReference_0_3_0() { return cTechnologiesImportCrossReference_0_3_0; }
		
		//ID
		public RuleCall getTechnologiesImportIDTerminalRuleCall_0_3_0_1() { return cTechnologiesImportIDTerminalRuleCall_0_3_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_0_4() { return cRightParenthesisKeyword_0_4; }
		
		//'container'
		public Keyword getContainerKeyword_1() { return cContainerKeyword_1; }
		
		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }
		
		//'deployment'
		public Keyword getDeploymentKeyword_3() { return cDeploymentKeyword_3; }
		
		//'technology'
		public Keyword getTechnologyKeyword_4() { return cTechnologyKeyword_4; }
		
		//deploymentTechnology=DeploymentTechnologyReference
		public Assignment getDeploymentTechnologyAssignment_5() { return cDeploymentTechnologyAssignment_5; }
		
		//DeploymentTechnologyReference
		public RuleCall getDeploymentTechnologyDeploymentTechnologyReferenceParserRuleCall_5_0() { return cDeploymentTechnologyDeploymentTechnologyReferenceParserRuleCall_5_0; }
		
		//('with' 'operation' 'environment' operationEnvironment=[technology::OperationEnvironment|STRING])?
		public Group getGroup_6() { return cGroup_6; }
		
		//'with'
		public Keyword getWithKeyword_6_0() { return cWithKeyword_6_0; }
		
		//'operation'
		public Keyword getOperationKeyword_6_1() { return cOperationKeyword_6_1; }
		
		//'environment'
		public Keyword getEnvironmentKeyword_6_2() { return cEnvironmentKeyword_6_2; }
		
		//operationEnvironment=[technology::OperationEnvironment|STRING]
		public Assignment getOperationEnvironmentAssignment_6_3() { return cOperationEnvironmentAssignment_6_3; }
		
		//[technology::OperationEnvironment|STRING]
		public CrossReference getOperationEnvironmentOperationEnvironmentCrossReference_6_3_0() { return cOperationEnvironmentOperationEnvironmentCrossReference_6_3_0; }
		
		//STRING
		public RuleCall getOperationEnvironmentOperationEnvironmentSTRINGTerminalRuleCall_6_3_0_1() { return cOperationEnvironmentOperationEnvironmentSTRINGTerminalRuleCall_6_3_0_1; }
		
		//'deploys'
		public Keyword getDeploysKeyword_7() { return cDeploysKeyword_7; }
		
		//deployedServices+=ImportedMicroservice
		public Assignment getDeployedServicesAssignment_8() { return cDeployedServicesAssignment_8; }
		
		//ImportedMicroservice
		public RuleCall getDeployedServicesImportedMicroserviceParserRuleCall_8_0() { return cDeployedServicesImportedMicroserviceParserRuleCall_8_0; }
		
		//(',' deployedServices+=ImportedMicroservice)*
		public Group getGroup_9() { return cGroup_9; }
		
		//','
		public Keyword getCommaKeyword_9_0() { return cCommaKeyword_9_0; }
		
		//deployedServices+=ImportedMicroservice
		public Assignment getDeployedServicesAssignment_9_1() { return cDeployedServicesAssignment_9_1; }
		
		//ImportedMicroservice
		public RuleCall getDeployedServicesImportedMicroserviceParserRuleCall_9_1_0() { return cDeployedServicesImportedMicroserviceParserRuleCall_9_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_10() { return cLeftCurlyBracketKeyword_10; }
		
		//('aspects' '{' aspects+=ImportedOperationAspect+ '}')?
		public Group getGroup_11() { return cGroup_11; }
		
		//'aspects'
		public Keyword getAspectsKeyword_11_0() { return cAspectsKeyword_11_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_11_1() { return cLeftCurlyBracketKeyword_11_1; }
		
		//aspects+=ImportedOperationAspect+
		public Assignment getAspectsAssignment_11_2() { return cAspectsAssignment_11_2; }
		
		//ImportedOperationAspect
		public RuleCall getAspectsImportedOperationAspectParserRuleCall_11_2_0() { return cAspectsImportedOperationAspectParserRuleCall_11_2_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_11_3() { return cRightCurlyBracketKeyword_11_3; }
		
		//('default' 'values' '{' (defaultServicePropertyValues+=PropertyValueAssignment+ | 'basic' 'endpoints' '{'
		//defaultBasicEndpoints+=BasicEndpoint+ '}' | defaultServicePropertyValues+=PropertyValueAssignment+ 'basic' 'endpoints'
		//'{' defaultBasicEndpoints+=BasicEndpoint+ '}') '}')?
		public Group getGroup_12() { return cGroup_12; }
		
		//'default'
		public Keyword getDefaultKeyword_12_0() { return cDefaultKeyword_12_0; }
		
		//'values'
		public Keyword getValuesKeyword_12_1() { return cValuesKeyword_12_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_12_2() { return cLeftCurlyBracketKeyword_12_2; }
		
		//// Must not be empty
		//defaultServicePropertyValues+=PropertyValueAssignment+ | 'basic' 'endpoints' '{' defaultBasicEndpoints+=BasicEndpoint+
		//'}' | defaultServicePropertyValues+=PropertyValueAssignment+ 'basic' 'endpoints' '{'
		//defaultBasicEndpoints+=BasicEndpoint+ '}'
		public Alternatives getAlternatives_12_3() { return cAlternatives_12_3; }
		
		//defaultServicePropertyValues+=PropertyValueAssignment+
		public Assignment getDefaultServicePropertyValuesAssignment_12_3_0() { return cDefaultServicePropertyValuesAssignment_12_3_0; }
		
		//PropertyValueAssignment
		public RuleCall getDefaultServicePropertyValuesPropertyValueAssignmentParserRuleCall_12_3_0_0() { return cDefaultServicePropertyValuesPropertyValueAssignmentParserRuleCall_12_3_0_0; }
		
		//'basic' 'endpoints' '{' defaultBasicEndpoints+=BasicEndpoint+ '}'
		public Group getGroup_12_3_1() { return cGroup_12_3_1; }
		
		//'basic'
		public Keyword getBasicKeyword_12_3_1_0() { return cBasicKeyword_12_3_1_0; }
		
		//'endpoints'
		public Keyword getEndpointsKeyword_12_3_1_1() { return cEndpointsKeyword_12_3_1_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_12_3_1_2() { return cLeftCurlyBracketKeyword_12_3_1_2; }
		
		//defaultBasicEndpoints+=BasicEndpoint+
		public Assignment getDefaultBasicEndpointsAssignment_12_3_1_3() { return cDefaultBasicEndpointsAssignment_12_3_1_3; }
		
		//BasicEndpoint
		public RuleCall getDefaultBasicEndpointsBasicEndpointParserRuleCall_12_3_1_3_0() { return cDefaultBasicEndpointsBasicEndpointParserRuleCall_12_3_1_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_12_3_1_4() { return cRightCurlyBracketKeyword_12_3_1_4; }
		
		//defaultServicePropertyValues+=PropertyValueAssignment+ 'basic' 'endpoints' '{' defaultBasicEndpoints+=BasicEndpoint+ '}'
		public Group getGroup_12_3_2() { return cGroup_12_3_2; }
		
		//defaultServicePropertyValues+=PropertyValueAssignment+
		public Assignment getDefaultServicePropertyValuesAssignment_12_3_2_0() { return cDefaultServicePropertyValuesAssignment_12_3_2_0; }
		
		//PropertyValueAssignment
		public RuleCall getDefaultServicePropertyValuesPropertyValueAssignmentParserRuleCall_12_3_2_0_0() { return cDefaultServicePropertyValuesPropertyValueAssignmentParserRuleCall_12_3_2_0_0; }
		
		//'basic'
		public Keyword getBasicKeyword_12_3_2_1() { return cBasicKeyword_12_3_2_1; }
		
		//'endpoints'
		public Keyword getEndpointsKeyword_12_3_2_2() { return cEndpointsKeyword_12_3_2_2; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_12_3_2_3() { return cLeftCurlyBracketKeyword_12_3_2_3; }
		
		//defaultBasicEndpoints+=BasicEndpoint+
		public Assignment getDefaultBasicEndpointsAssignment_12_3_2_4() { return cDefaultBasicEndpointsAssignment_12_3_2_4; }
		
		//BasicEndpoint
		public RuleCall getDefaultBasicEndpointsBasicEndpointParserRuleCall_12_3_2_4_0() { return cDefaultBasicEndpointsBasicEndpointParserRuleCall_12_3_2_4_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_12_3_2_5() { return cRightCurlyBracketKeyword_12_3_2_5; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_12_4() { return cRightCurlyBracketKeyword_12_4; }
		
		//deploymentSpecifications+=ServiceDeploymentSpecification*
		public Assignment getDeploymentSpecificationsAssignment_13() { return cDeploymentSpecificationsAssignment_13; }
		
		//ServiceDeploymentSpecification
		public RuleCall getDeploymentSpecificationsServiceDeploymentSpecificationParserRuleCall_13_0() { return cDeploymentSpecificationsServiceDeploymentSpecificationParserRuleCall_13_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_14() { return cRightCurlyBracketKeyword_14; }
	}
	public class DeploymentTechnologyReferenceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fhdo.ddmm.operationdsl.OperationDsl.DeploymentTechnologyReference");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cImportAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cImportImportCrossReference_0_0 = (CrossReference)cImportAssignment_0.eContents().get(0);
		private final RuleCall cImportImportIDTerminalRuleCall_0_0_1 = (RuleCall)cImportImportCrossReference_0_0.eContents().get(1);
		private final Keyword cColonColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cDeploymentTechnologyAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cDeploymentTechnologyDeploymentTechnologyCrossReference_2_0 = (CrossReference)cDeploymentTechnologyAssignment_2.eContents().get(0);
		private final RuleCall cDeploymentTechnologyDeploymentTechnologyQualifiedNameParserRuleCall_2_0_1 = (RuleCall)cDeploymentTechnologyDeploymentTechnologyCrossReference_2_0.eContents().get(1);
		
		//DeploymentTechnologyReference:
		//	^import=[service::Import] '::'
		//	deploymentTechnology=[technology::DeploymentTechnology|QualifiedName];
		@Override public ParserRule getRule() { return rule; }
		
		//^import=[service::Import] '::' deploymentTechnology=[technology::DeploymentTechnology|QualifiedName]
		public Group getGroup() { return cGroup; }
		
		//^import=[service::Import]
		public Assignment getImportAssignment_0() { return cImportAssignment_0; }
		
		//[service::Import]
		public CrossReference getImportImportCrossReference_0_0() { return cImportImportCrossReference_0_0; }
		
		//ID
		public RuleCall getImportImportIDTerminalRuleCall_0_0_1() { return cImportImportIDTerminalRuleCall_0_0_1; }
		
		//'::'
		public Keyword getColonColonKeyword_1() { return cColonColonKeyword_1; }
		
		//deploymentTechnology=[technology::DeploymentTechnology|QualifiedName]
		public Assignment getDeploymentTechnologyAssignment_2() { return cDeploymentTechnologyAssignment_2; }
		
		//[technology::DeploymentTechnology|QualifiedName]
		public CrossReference getDeploymentTechnologyDeploymentTechnologyCrossReference_2_0() { return cDeploymentTechnologyDeploymentTechnologyCrossReference_2_0; }
		
		//QualifiedName
		public RuleCall getDeploymentTechnologyDeploymentTechnologyQualifiedNameParserRuleCall_2_0_1() { return cDeploymentTechnologyDeploymentTechnologyQualifiedNameParserRuleCall_2_0_1; }
	}
	public class InfrastructureNodeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fhdo.ddmm.operationdsl.OperationDsl.InfrastructureNode");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Keyword cCommercialAtKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Keyword cTechnologyKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_0_2 = (Keyword)cGroup_0.eContents().get(2);
		private final Assignment cTechnologiesAssignment_0_3 = (Assignment)cGroup_0.eContents().get(3);
		private final CrossReference cTechnologiesImportCrossReference_0_3_0 = (CrossReference)cTechnologiesAssignment_0_3.eContents().get(0);
		private final RuleCall cTechnologiesImportIDTerminalRuleCall_0_3_0_1 = (RuleCall)cTechnologiesImportCrossReference_0_3_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_0_4 = (Keyword)cGroup_0.eContents().get(4);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cIsKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cInfrastructureTechnologyAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cInfrastructureTechnologyInfrastructureTechnologyReferenceParserRuleCall_3_0 = (RuleCall)cInfrastructureTechnologyAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cWithKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cOperationKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Keyword cEnvironmentKeyword_4_2 = (Keyword)cGroup_4.eContents().get(2);
		private final Assignment cOperationEnvironmentAssignment_4_3 = (Assignment)cGroup_4.eContents().get(3);
		private final CrossReference cOperationEnvironmentOperationEnvironmentCrossReference_4_3_0 = (CrossReference)cOperationEnvironmentAssignment_4_3.eContents().get(0);
		private final RuleCall cOperationEnvironmentOperationEnvironmentSTRINGTerminalRuleCall_4_3_0_1 = (RuleCall)cOperationEnvironmentOperationEnvironmentCrossReference_4_3_0.eContents().get(1);
		private final Keyword cUsedKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cByKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cDeployedServicesAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cDeployedServicesImportedMicroserviceParserRuleCall_7_0 = (RuleCall)cDeployedServicesAssignment_7.eContents().get(0);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cCommaKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Assignment cDeployedServicesAssignment_8_1 = (Assignment)cGroup_8.eContents().get(1);
		private final RuleCall cDeployedServicesImportedMicroserviceParserRuleCall_8_1_0 = (RuleCall)cDeployedServicesAssignment_8_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Group cGroup_10 = (Group)cGroup.eContents().get(10);
		private final Keyword cAspectsKeyword_10_0 = (Keyword)cGroup_10.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_10_1 = (Keyword)cGroup_10.eContents().get(1);
		private final Assignment cAspectsAssignment_10_2 = (Assignment)cGroup_10.eContents().get(2);
		private final RuleCall cAspectsImportedOperationAspectParserRuleCall_10_2_0 = (RuleCall)cAspectsAssignment_10_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_10_3 = (Keyword)cGroup_10.eContents().get(3);
		private final Group cGroup_11 = (Group)cGroup.eContents().get(11);
		private final Keyword cDefaultKeyword_11_0 = (Keyword)cGroup_11.eContents().get(0);
		private final Keyword cValuesKeyword_11_1 = (Keyword)cGroup_11.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_11_2 = (Keyword)cGroup_11.eContents().get(2);
		private final Assignment cDefaultServicePropertyValuesAssignment_11_3 = (Assignment)cGroup_11.eContents().get(3);
		private final RuleCall cDefaultServicePropertyValuesPropertyValueAssignmentParserRuleCall_11_3_0 = (RuleCall)cDefaultServicePropertyValuesAssignment_11_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_11_4 = (Keyword)cGroup_11.eContents().get(4);
		private final Group cGroup_12 = (Group)cGroup.eContents().get(12);
		private final Keyword cEndpointsKeyword_12_0 = (Keyword)cGroup_12.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_12_1 = (Keyword)cGroup_12.eContents().get(1);
		private final Assignment cEndpointsAssignment_12_2 = (Assignment)cGroup_12.eContents().get(2);
		private final RuleCall cEndpointsBasicEndpointParserRuleCall_12_2_0 = (RuleCall)cEndpointsAssignment_12_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_12_3 = (Keyword)cGroup_12.eContents().get(3);
		private final Assignment cDeploymentSpecificationsAssignment_13 = (Assignment)cGroup.eContents().get(13);
		private final RuleCall cDeploymentSpecificationsServiceDeploymentSpecificationParserRuleCall_13_0 = (RuleCall)cDeploymentSpecificationsAssignment_13.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_14 = (Keyword)cGroup.eContents().get(14);
		
		//InfrastructureNode:
		//	('@' 'technology' '(' technologies+=[service::Import] ')')+
		//	name=ID 'is' infrastructureTechnology=InfrastructureTechnologyReference ('with' 'operation' 'environment'
		//	operationEnvironment=[technology::OperationEnvironment|STRING])?
		//	'used' 'by' deployedServices+=ImportedMicroservice (',' deployedServices+=ImportedMicroservice)*
		//	'{' ('aspects' '{'
		//	aspects+=ImportedOperationAspect+
		//	'}')? ('default' 'values' '{'
		//	defaultServicePropertyValues+=PropertyValueAssignment+
		//	'}')? ('endpoints' '{'
		//	endpoints+=BasicEndpoint+
		//	'}')?
		//	deploymentSpecifications+=ServiceDeploymentSpecification*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//('@' 'technology' '(' technologies+=[service::Import] ')')+ name=ID 'is'
		//infrastructureTechnology=InfrastructureTechnologyReference ('with' 'operation' 'environment'
		//operationEnvironment=[technology::OperationEnvironment|STRING])? 'used' 'by' deployedServices+=ImportedMicroservice
		//(',' deployedServices+=ImportedMicroservice)* '{' ('aspects' '{' aspects+=ImportedOperationAspect+ '}')? ('default'
		//'values' '{' defaultServicePropertyValues+=PropertyValueAssignment+ '}')? ('endpoints' '{' endpoints+=BasicEndpoint+
		//'}')? deploymentSpecifications+=ServiceDeploymentSpecification* '}'
		public Group getGroup() { return cGroup; }
		
		//('@' 'technology' '(' technologies+=[service::Import] ')')+
		public Group getGroup_0() { return cGroup_0; }
		
		//'@'
		public Keyword getCommercialAtKeyword_0_0() { return cCommercialAtKeyword_0_0; }
		
		//'technology'
		public Keyword getTechnologyKeyword_0_1() { return cTechnologyKeyword_0_1; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_0_2() { return cLeftParenthesisKeyword_0_2; }
		
		//technologies+=[service::Import]
		public Assignment getTechnologiesAssignment_0_3() { return cTechnologiesAssignment_0_3; }
		
		//[service::Import]
		public CrossReference getTechnologiesImportCrossReference_0_3_0() { return cTechnologiesImportCrossReference_0_3_0; }
		
		//ID
		public RuleCall getTechnologiesImportIDTerminalRuleCall_0_3_0_1() { return cTechnologiesImportIDTerminalRuleCall_0_3_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_0_4() { return cRightParenthesisKeyword_0_4; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'is'
		public Keyword getIsKeyword_2() { return cIsKeyword_2; }
		
		//infrastructureTechnology=InfrastructureTechnologyReference
		public Assignment getInfrastructureTechnologyAssignment_3() { return cInfrastructureTechnologyAssignment_3; }
		
		//InfrastructureTechnologyReference
		public RuleCall getInfrastructureTechnologyInfrastructureTechnologyReferenceParserRuleCall_3_0() { return cInfrastructureTechnologyInfrastructureTechnologyReferenceParserRuleCall_3_0; }
		
		//('with' 'operation' 'environment' operationEnvironment=[technology::OperationEnvironment|STRING])?
		public Group getGroup_4() { return cGroup_4; }
		
		//'with'
		public Keyword getWithKeyword_4_0() { return cWithKeyword_4_0; }
		
		//'operation'
		public Keyword getOperationKeyword_4_1() { return cOperationKeyword_4_1; }
		
		//'environment'
		public Keyword getEnvironmentKeyword_4_2() { return cEnvironmentKeyword_4_2; }
		
		//operationEnvironment=[technology::OperationEnvironment|STRING]
		public Assignment getOperationEnvironmentAssignment_4_3() { return cOperationEnvironmentAssignment_4_3; }
		
		//[technology::OperationEnvironment|STRING]
		public CrossReference getOperationEnvironmentOperationEnvironmentCrossReference_4_3_0() { return cOperationEnvironmentOperationEnvironmentCrossReference_4_3_0; }
		
		//STRING
		public RuleCall getOperationEnvironmentOperationEnvironmentSTRINGTerminalRuleCall_4_3_0_1() { return cOperationEnvironmentOperationEnvironmentSTRINGTerminalRuleCall_4_3_0_1; }
		
		//'used'
		public Keyword getUsedKeyword_5() { return cUsedKeyword_5; }
		
		//'by'
		public Keyword getByKeyword_6() { return cByKeyword_6; }
		
		//deployedServices+=ImportedMicroservice
		public Assignment getDeployedServicesAssignment_7() { return cDeployedServicesAssignment_7; }
		
		//ImportedMicroservice
		public RuleCall getDeployedServicesImportedMicroserviceParserRuleCall_7_0() { return cDeployedServicesImportedMicroserviceParserRuleCall_7_0; }
		
		//(',' deployedServices+=ImportedMicroservice)*
		public Group getGroup_8() { return cGroup_8; }
		
		//','
		public Keyword getCommaKeyword_8_0() { return cCommaKeyword_8_0; }
		
		//deployedServices+=ImportedMicroservice
		public Assignment getDeployedServicesAssignment_8_1() { return cDeployedServicesAssignment_8_1; }
		
		//ImportedMicroservice
		public RuleCall getDeployedServicesImportedMicroserviceParserRuleCall_8_1_0() { return cDeployedServicesImportedMicroserviceParserRuleCall_8_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_9() { return cLeftCurlyBracketKeyword_9; }
		
		//('aspects' '{' aspects+=ImportedOperationAspect+ '}')?
		public Group getGroup_10() { return cGroup_10; }
		
		//'aspects'
		public Keyword getAspectsKeyword_10_0() { return cAspectsKeyword_10_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_10_1() { return cLeftCurlyBracketKeyword_10_1; }
		
		//aspects+=ImportedOperationAspect+
		public Assignment getAspectsAssignment_10_2() { return cAspectsAssignment_10_2; }
		
		//ImportedOperationAspect
		public RuleCall getAspectsImportedOperationAspectParserRuleCall_10_2_0() { return cAspectsImportedOperationAspectParserRuleCall_10_2_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_10_3() { return cRightCurlyBracketKeyword_10_3; }
		
		//('default' 'values' '{' defaultServicePropertyValues+=PropertyValueAssignment+ '}')?
		public Group getGroup_11() { return cGroup_11; }
		
		//'default'
		public Keyword getDefaultKeyword_11_0() { return cDefaultKeyword_11_0; }
		
		//'values'
		public Keyword getValuesKeyword_11_1() { return cValuesKeyword_11_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_11_2() { return cLeftCurlyBracketKeyword_11_2; }
		
		//defaultServicePropertyValues+=PropertyValueAssignment+
		public Assignment getDefaultServicePropertyValuesAssignment_11_3() { return cDefaultServicePropertyValuesAssignment_11_3; }
		
		//PropertyValueAssignment
		public RuleCall getDefaultServicePropertyValuesPropertyValueAssignmentParserRuleCall_11_3_0() { return cDefaultServicePropertyValuesPropertyValueAssignmentParserRuleCall_11_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_11_4() { return cRightCurlyBracketKeyword_11_4; }
		
		//('endpoints' '{' endpoints+=BasicEndpoint+ '}')?
		public Group getGroup_12() { return cGroup_12; }
		
		//'endpoints'
		public Keyword getEndpointsKeyword_12_0() { return cEndpointsKeyword_12_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_12_1() { return cLeftCurlyBracketKeyword_12_1; }
		
		//endpoints+=BasicEndpoint+
		public Assignment getEndpointsAssignment_12_2() { return cEndpointsAssignment_12_2; }
		
		//BasicEndpoint
		public RuleCall getEndpointsBasicEndpointParserRuleCall_12_2_0() { return cEndpointsBasicEndpointParserRuleCall_12_2_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_12_3() { return cRightCurlyBracketKeyword_12_3; }
		
		//deploymentSpecifications+=ServiceDeploymentSpecification*
		public Assignment getDeploymentSpecificationsAssignment_13() { return cDeploymentSpecificationsAssignment_13; }
		
		//ServiceDeploymentSpecification
		public RuleCall getDeploymentSpecificationsServiceDeploymentSpecificationParserRuleCall_13_0() { return cDeploymentSpecificationsServiceDeploymentSpecificationParserRuleCall_13_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_14() { return cRightCurlyBracketKeyword_14; }
	}
	public class InfrastructureTechnologyReferenceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fhdo.ddmm.operationdsl.OperationDsl.InfrastructureTechnologyReference");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cImportAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cImportImportCrossReference_0_0 = (CrossReference)cImportAssignment_0.eContents().get(0);
		private final RuleCall cImportImportIDTerminalRuleCall_0_0_1 = (RuleCall)cImportImportCrossReference_0_0.eContents().get(1);
		private final Keyword cColonColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cInfrastructureTechnologyAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cInfrastructureTechnologyInfrastructureTechnologyCrossReference_2_0 = (CrossReference)cInfrastructureTechnologyAssignment_2.eContents().get(0);
		private final RuleCall cInfrastructureTechnologyInfrastructureTechnologyQualifiedNameParserRuleCall_2_0_1 = (RuleCall)cInfrastructureTechnologyInfrastructureTechnologyCrossReference_2_0.eContents().get(1);
		
		//InfrastructureTechnologyReference:
		//	^import=[service::Import] '::'
		//	infrastructureTechnology=[technology::InfrastructureTechnology|QualifiedName];
		@Override public ParserRule getRule() { return rule; }
		
		//^import=[service::Import] '::' infrastructureTechnology=[technology::InfrastructureTechnology|QualifiedName]
		public Group getGroup() { return cGroup; }
		
		//^import=[service::Import]
		public Assignment getImportAssignment_0() { return cImportAssignment_0; }
		
		//[service::Import]
		public CrossReference getImportImportCrossReference_0_0() { return cImportImportCrossReference_0_0; }
		
		//ID
		public RuleCall getImportImportIDTerminalRuleCall_0_0_1() { return cImportImportIDTerminalRuleCall_0_0_1; }
		
		//'::'
		public Keyword getColonColonKeyword_1() { return cColonColonKeyword_1; }
		
		//infrastructureTechnology=[technology::InfrastructureTechnology|QualifiedName]
		public Assignment getInfrastructureTechnologyAssignment_2() { return cInfrastructureTechnologyAssignment_2; }
		
		//[technology::InfrastructureTechnology|QualifiedName]
		public CrossReference getInfrastructureTechnologyInfrastructureTechnologyCrossReference_2_0() { return cInfrastructureTechnologyInfrastructureTechnologyCrossReference_2_0; }
		
		//QualifiedName
		public RuleCall getInfrastructureTechnologyInfrastructureTechnologyQualifiedNameParserRuleCall_2_0_1() { return cInfrastructureTechnologyInfrastructureTechnologyQualifiedNameParserRuleCall_2_0_1; }
	}
	public class ProtocolAndDataFormatElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fhdo.ddmm.operationdsl.OperationDsl.ProtocolAndDataFormat");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cTechnologyAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cTechnologyImportCrossReference_0_0 = (CrossReference)cTechnologyAssignment_0.eContents().get(0);
		private final RuleCall cTechnologyImportIDTerminalRuleCall_0_0_1 = (RuleCall)cTechnologyImportCrossReference_0_0.eContents().get(1);
		private final Keyword cColonColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cProtocolAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cProtocolProtocolCrossReference_2_0 = (CrossReference)cProtocolAssignment_2.eContents().get(0);
		private final RuleCall cProtocolProtocolQualifiedNameParserRuleCall_2_0_1 = (RuleCall)cProtocolProtocolCrossReference_2_0.eContents().get(1);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cSolidusKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cDataFormatAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final CrossReference cDataFormatDataFormatCrossReference_3_1_0 = (CrossReference)cDataFormatAssignment_3_1.eContents().get(0);
		private final RuleCall cDataFormatDataFormatIDTerminalRuleCall_3_1_0_1 = (RuleCall)cDataFormatDataFormatCrossReference_3_1_0.eContents().get(1);
		
		//ProtocolAndDataFormat:
		//	technology=[service::Import] '::'
		//	protocol=[technology::Protocol|QualifiedName] ('/' dataFormat=[technology::DataFormat])?;
		@Override public ParserRule getRule() { return rule; }
		
		//technology=[service::Import] '::' protocol=[technology::Protocol|QualifiedName] ('/'
		//dataFormat=[technology::DataFormat])?
		public Group getGroup() { return cGroup; }
		
		//technology=[service::Import]
		public Assignment getTechnologyAssignment_0() { return cTechnologyAssignment_0; }
		
		//[service::Import]
		public CrossReference getTechnologyImportCrossReference_0_0() { return cTechnologyImportCrossReference_0_0; }
		
		//ID
		public RuleCall getTechnologyImportIDTerminalRuleCall_0_0_1() { return cTechnologyImportIDTerminalRuleCall_0_0_1; }
		
		//'::'
		public Keyword getColonColonKeyword_1() { return cColonColonKeyword_1; }
		
		//protocol=[technology::Protocol|QualifiedName]
		public Assignment getProtocolAssignment_2() { return cProtocolAssignment_2; }
		
		//[technology::Protocol|QualifiedName]
		public CrossReference getProtocolProtocolCrossReference_2_0() { return cProtocolProtocolCrossReference_2_0; }
		
		//QualifiedName
		public RuleCall getProtocolProtocolQualifiedNameParserRuleCall_2_0_1() { return cProtocolProtocolQualifiedNameParserRuleCall_2_0_1; }
		
		//('/' dataFormat=[technology::DataFormat])?
		public Group getGroup_3() { return cGroup_3; }
		
		//'/'
		public Keyword getSolidusKeyword_3_0() { return cSolidusKeyword_3_0; }
		
		//dataFormat=[technology::DataFormat]
		public Assignment getDataFormatAssignment_3_1() { return cDataFormatAssignment_3_1; }
		
		//[technology::DataFormat]
		public CrossReference getDataFormatDataFormatCrossReference_3_1_0() { return cDataFormatDataFormatCrossReference_3_1_0; }
		
		//ID
		public RuleCall getDataFormatDataFormatIDTerminalRuleCall_3_1_0_1() { return cDataFormatDataFormatIDTerminalRuleCall_3_1_0_1; }
	}
	public class BasicEndpointElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fhdo.ddmm.operationdsl.OperationDsl.BasicEndpoint");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cProtocolsAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cProtocolsProtocolAndDataFormatParserRuleCall_0_0 = (RuleCall)cProtocolsAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cCommaKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cProtocolsAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cProtocolsProtocolAndDataFormatParserRuleCall_1_1_0 = (RuleCall)cProtocolsAssignment_1_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cAddressesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cAddressesSTRINGTerminalRuleCall_3_0 = (RuleCall)cAddressesAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cCommaKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cAddressesAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cAddressesSTRINGTerminalRuleCall_4_1_0 = (RuleCall)cAddressesAssignment_4_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//BasicEndpoint:
		//	protocols+=ProtocolAndDataFormat (',' protocols+=ProtocolAndDataFormat)* ':'
		//	addresses+=STRING (',' addresses+=STRING)* ';';
		@Override public ParserRule getRule() { return rule; }
		
		//protocols+=ProtocolAndDataFormat (',' protocols+=ProtocolAndDataFormat)* ':' addresses+=STRING (',' addresses+=STRING)*
		//';'
		public Group getGroup() { return cGroup; }
		
		//protocols+=ProtocolAndDataFormat
		public Assignment getProtocolsAssignment_0() { return cProtocolsAssignment_0; }
		
		//ProtocolAndDataFormat
		public RuleCall getProtocolsProtocolAndDataFormatParserRuleCall_0_0() { return cProtocolsProtocolAndDataFormatParserRuleCall_0_0; }
		
		//(',' protocols+=ProtocolAndDataFormat)*
		public Group getGroup_1() { return cGroup_1; }
		
		//','
		public Keyword getCommaKeyword_1_0() { return cCommaKeyword_1_0; }
		
		//protocols+=ProtocolAndDataFormat
		public Assignment getProtocolsAssignment_1_1() { return cProtocolsAssignment_1_1; }
		
		//ProtocolAndDataFormat
		public RuleCall getProtocolsProtocolAndDataFormatParserRuleCall_1_1_0() { return cProtocolsProtocolAndDataFormatParserRuleCall_1_1_0; }
		
		//':'
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }
		
		//addresses+=STRING
		public Assignment getAddressesAssignment_3() { return cAddressesAssignment_3; }
		
		//STRING
		public RuleCall getAddressesSTRINGTerminalRuleCall_3_0() { return cAddressesSTRINGTerminalRuleCall_3_0; }
		
		//(',' addresses+=STRING)*
		public Group getGroup_4() { return cGroup_4; }
		
		//','
		public Keyword getCommaKeyword_4_0() { return cCommaKeyword_4_0; }
		
		//addresses+=STRING
		public Assignment getAddressesAssignment_4_1() { return cAddressesAssignment_4_1; }
		
		//STRING
		public RuleCall getAddressesSTRINGTerminalRuleCall_4_1_0() { return cAddressesSTRINGTerminalRuleCall_4_1_0; }
		
		//';'
		public Keyword getSemicolonKeyword_5() { return cSemicolonKeyword_5; }
	}
	public class ServiceDeploymentSpecificationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fhdo.ddmm.operationdsl.OperationDsl.ServiceDeploymentSpecification");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cImportAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cImportImportCrossReference_0_0 = (CrossReference)cImportAssignment_0.eContents().get(0);
		private final RuleCall cImportImportIDTerminalRuleCall_0_0_1 = (RuleCall)cImportImportCrossReference_0_0.eContents().get(1);
		private final Keyword cColonColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cServiceAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cServiceImportedMicroserviceCrossReference_2_0 = (CrossReference)cServiceAssignment_2.eContents().get(0);
		private final RuleCall cServiceImportedMicroserviceQualifiedNameWithAtLeastOneLevelParserRuleCall_2_0_1 = (RuleCall)cServiceImportedMicroserviceCrossReference_2_0.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cServicePropertyValuesAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cServicePropertyValuesPropertyValueAssignmentParserRuleCall_4_0 = (RuleCall)cServicePropertyValuesAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cBasicKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Keyword cEndpointsKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_5_2 = (Keyword)cGroup_5.eContents().get(2);
		private final Assignment cBasicEndpointsAssignment_5_3 = (Assignment)cGroup_5.eContents().get(3);
		private final RuleCall cBasicEndpointsBasicEndpointParserRuleCall_5_3_0 = (RuleCall)cBasicEndpointsAssignment_5_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5_4 = (Keyword)cGroup_5.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//ServiceDeploymentSpecification:
		//	^import=[service::Import] '::' service=[ImportedMicroservice|QualifiedNameWithAtLeastOneLevel]
		//	'{'
		//	servicePropertyValues+=PropertyValueAssignment* ('basic' 'endpoints' '{'
		//	basicEndpoints+=BasicEndpoint+
		//	'}')?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//^import=[service::Import] '::' service=[ImportedMicroservice|QualifiedNameWithAtLeastOneLevel] '{'
		//servicePropertyValues+=PropertyValueAssignment* ('basic' 'endpoints' '{' basicEndpoints+=BasicEndpoint+ '}')? '}'
		public Group getGroup() { return cGroup; }
		
		//^import=[service::Import]
		public Assignment getImportAssignment_0() { return cImportAssignment_0; }
		
		//[service::Import]
		public CrossReference getImportImportCrossReference_0_0() { return cImportImportCrossReference_0_0; }
		
		//ID
		public RuleCall getImportImportIDTerminalRuleCall_0_0_1() { return cImportImportIDTerminalRuleCall_0_0_1; }
		
		//'::'
		public Keyword getColonColonKeyword_1() { return cColonColonKeyword_1; }
		
		//service=[ImportedMicroservice|QualifiedNameWithAtLeastOneLevel]
		public Assignment getServiceAssignment_2() { return cServiceAssignment_2; }
		
		//[ImportedMicroservice|QualifiedNameWithAtLeastOneLevel]
		public CrossReference getServiceImportedMicroserviceCrossReference_2_0() { return cServiceImportedMicroserviceCrossReference_2_0; }
		
		//QualifiedNameWithAtLeastOneLevel
		public RuleCall getServiceImportedMicroserviceQualifiedNameWithAtLeastOneLevelParserRuleCall_2_0_1() { return cServiceImportedMicroserviceQualifiedNameWithAtLeastOneLevelParserRuleCall_2_0_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//servicePropertyValues+=PropertyValueAssignment*
		public Assignment getServicePropertyValuesAssignment_4() { return cServicePropertyValuesAssignment_4; }
		
		//PropertyValueAssignment
		public RuleCall getServicePropertyValuesPropertyValueAssignmentParserRuleCall_4_0() { return cServicePropertyValuesPropertyValueAssignmentParserRuleCall_4_0; }
		
		//('basic' 'endpoints' '{' basicEndpoints+=BasicEndpoint+ '}')?
		public Group getGroup_5() { return cGroup_5; }
		
		//'basic'
		public Keyword getBasicKeyword_5_0() { return cBasicKeyword_5_0; }
		
		//'endpoints'
		public Keyword getEndpointsKeyword_5_1() { return cEndpointsKeyword_5_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_5_2() { return cLeftCurlyBracketKeyword_5_2; }
		
		//basicEndpoints+=BasicEndpoint+
		public Assignment getBasicEndpointsAssignment_5_3() { return cBasicEndpointsAssignment_5_3; }
		
		//BasicEndpoint
		public RuleCall getBasicEndpointsBasicEndpointParserRuleCall_5_3_0() { return cBasicEndpointsBasicEndpointParserRuleCall_5_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5_4() { return cRightCurlyBracketKeyword_5_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class ImportedMicroserviceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fhdo.ddmm.operationdsl.OperationDsl.ImportedMicroservice");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cImportAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cImportImportCrossReference_0_0 = (CrossReference)cImportAssignment_0.eContents().get(0);
		private final RuleCall cImportImportIDTerminalRuleCall_0_0_1 = (RuleCall)cImportImportCrossReference_0_0.eContents().get(1);
		private final Keyword cColonColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cMicroserviceAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cMicroserviceMicroserviceCrossReference_2_0 = (CrossReference)cMicroserviceAssignment_2.eContents().get(0);
		private final RuleCall cMicroserviceMicroserviceQualifiedNameWithAtLeastOneLevelParserRuleCall_2_0_1 = (RuleCall)cMicroserviceMicroserviceCrossReference_2_0.eContents().get(1);
		
		//ImportedMicroservice:
		//	^import=[service::Import] '::'
		//	microservice=[service::Microservice|QualifiedNameWithAtLeastOneLevel];
		@Override public ParserRule getRule() { return rule; }
		
		//^import=[service::Import] '::' microservice=[service::Microservice|QualifiedNameWithAtLeastOneLevel]
		public Group getGroup() { return cGroup; }
		
		//^import=[service::Import]
		public Assignment getImportAssignment_0() { return cImportAssignment_0; }
		
		//[service::Import]
		public CrossReference getImportImportCrossReference_0_0() { return cImportImportCrossReference_0_0; }
		
		//ID
		public RuleCall getImportImportIDTerminalRuleCall_0_0_1() { return cImportImportIDTerminalRuleCall_0_0_1; }
		
		//'::'
		public Keyword getColonColonKeyword_1() { return cColonColonKeyword_1; }
		
		//microservice=[service::Microservice|QualifiedNameWithAtLeastOneLevel]
		public Assignment getMicroserviceAssignment_2() { return cMicroserviceAssignment_2; }
		
		//[service::Microservice|QualifiedNameWithAtLeastOneLevel]
		public CrossReference getMicroserviceMicroserviceCrossReference_2_0() { return cMicroserviceMicroserviceCrossReference_2_0; }
		
		//QualifiedNameWithAtLeastOneLevel
		public RuleCall getMicroserviceMicroserviceQualifiedNameWithAtLeastOneLevelParserRuleCall_2_0_1() { return cMicroserviceMicroserviceQualifiedNameWithAtLeastOneLevelParserRuleCall_2_0_1; }
	}
	public class PropertyValueAssignmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fhdo.ddmm.operationdsl.OperationDsl.PropertyValueAssignment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cPropertyAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cPropertyTechnologySpecificPropertyCrossReference_0_0 = (CrossReference)cPropertyAssignment_0.eContents().get(0);
		private final RuleCall cPropertyTechnologySpecificPropertyIDTerminalRuleCall_0_0_1 = (RuleCall)cPropertyTechnologySpecificPropertyCrossReference_0_0.eContents().get(1);
		private final Keyword cEqualsSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValuePrimitiveValueParserRuleCall_2_0 = (RuleCall)cValueAssignment_2.eContents().get(0);
		
		//@ Override PropertyValueAssignment technology::TechnologySpecificPropertyValueAssignment:
		//	property=[technology::TechnologySpecificProperty] '=' value=PrimitiveValue;
		@Override public ParserRule getRule() { return rule; }
		
		//property=[technology::TechnologySpecificProperty] '=' value=PrimitiveValue
		public Group getGroup() { return cGroup; }
		
		//property=[technology::TechnologySpecificProperty]
		public Assignment getPropertyAssignment_0() { return cPropertyAssignment_0; }
		
		//[technology::TechnologySpecificProperty]
		public CrossReference getPropertyTechnologySpecificPropertyCrossReference_0_0() { return cPropertyTechnologySpecificPropertyCrossReference_0_0; }
		
		//ID
		public RuleCall getPropertyTechnologySpecificPropertyIDTerminalRuleCall_0_0_1() { return cPropertyTechnologySpecificPropertyIDTerminalRuleCall_0_0_1; }
		
		//'='
		public Keyword getEqualsSignKeyword_1() { return cEqualsSignKeyword_1; }
		
		//value=PrimitiveValue
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }
		
		//PrimitiveValue
		public RuleCall getValuePrimitiveValueParserRuleCall_2_0() { return cValuePrimitiveValueParserRuleCall_2_0; }
	}
	public class ImportedOperationAspectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fhdo.ddmm.operationdsl.OperationDsl.ImportedOperationAspect");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cTechnologyAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cTechnologyImportCrossReference_0_0 = (CrossReference)cTechnologyAssignment_0.eContents().get(0);
		private final RuleCall cTechnologyImportIDTerminalRuleCall_0_0_1 = (RuleCall)cTechnologyImportCrossReference_0_0.eContents().get(1);
		private final Keyword cColonColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cAspectAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cAspectOperationAspectCrossReference_2_0 = (CrossReference)cAspectAssignment_2.eContents().get(0);
		private final RuleCall cAspectOperationAspectQualifiedNameParserRuleCall_2_0_1 = (RuleCall)cAspectOperationAspectCrossReference_2_0.eContents().get(1);
		private final Alternatives cAlternatives_3 = (Alternatives)cGroup.eContents().get(3);
		private final Group cGroup_3_0 = (Group)cAlternatives_3.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_3_0_0 = (Keyword)cGroup_3_0.eContents().get(0);
		private final Alternatives cAlternatives_3_0_1 = (Alternatives)cGroup_3_0.eContents().get(1);
		private final Assignment cSinglePropertyValueAssignment_3_0_1_0 = (Assignment)cAlternatives_3_0_1.eContents().get(0);
		private final RuleCall cSinglePropertyValuePrimitiveValueParserRuleCall_3_0_1_0_0 = (RuleCall)cSinglePropertyValueAssignment_3_0_1_0.eContents().get(0);
		private final Group cGroup_3_0_1_1 = (Group)cAlternatives_3_0_1.eContents().get(1);
		private final Assignment cValuesAssignment_3_0_1_1_0 = (Assignment)cGroup_3_0_1_1.eContents().get(0);
		private final RuleCall cValuesPropertyValueAssignmentParserRuleCall_3_0_1_1_0_0 = (RuleCall)cValuesAssignment_3_0_1_1_0.eContents().get(0);
		private final Group cGroup_3_0_1_1_1 = (Group)cGroup_3_0_1_1.eContents().get(1);
		private final Keyword cCommaKeyword_3_0_1_1_1_0 = (Keyword)cGroup_3_0_1_1_1.eContents().get(0);
		private final Assignment cValuesAssignment_3_0_1_1_1_1 = (Assignment)cGroup_3_0_1_1_1.eContents().get(1);
		private final RuleCall cValuesPropertyValueAssignmentParserRuleCall_3_0_1_1_1_1_0 = (RuleCall)cValuesAssignment_3_0_1_1_1_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_3_0_2 = (Keyword)cGroup_3_0.eContents().get(2);
		private final Keyword cSemicolonKeyword_3_1 = (Keyword)cAlternatives_3.eContents().get(1);
		
		//ImportedOperationAspect:
		//	technology=[service::Import] '::' aspect=[technology::OperationAspect|QualifiedName] ('('
		//	(singlePropertyValue=PrimitiveValue
		//	| values+=PropertyValueAssignment (',' values+=PropertyValueAssignment)*) ')' |
		//	';');
		@Override public ParserRule getRule() { return rule; }
		
		//technology=[service::Import] '::' aspect=[technology::OperationAspect|QualifiedName] ('('
		//(singlePropertyValue=PrimitiveValue | values+=PropertyValueAssignment (',' values+=PropertyValueAssignment)*) ')' |
		//';')
		public Group getGroup() { return cGroup; }
		
		//technology=[service::Import]
		public Assignment getTechnologyAssignment_0() { return cTechnologyAssignment_0; }
		
		//[service::Import]
		public CrossReference getTechnologyImportCrossReference_0_0() { return cTechnologyImportCrossReference_0_0; }
		
		//ID
		public RuleCall getTechnologyImportIDTerminalRuleCall_0_0_1() { return cTechnologyImportIDTerminalRuleCall_0_0_1; }
		
		//'::'
		public Keyword getColonColonKeyword_1() { return cColonColonKeyword_1; }
		
		//aspect=[technology::OperationAspect|QualifiedName]
		public Assignment getAspectAssignment_2() { return cAspectAssignment_2; }
		
		//[technology::OperationAspect|QualifiedName]
		public CrossReference getAspectOperationAspectCrossReference_2_0() { return cAspectOperationAspectCrossReference_2_0; }
		
		//QualifiedName
		public RuleCall getAspectOperationAspectQualifiedNameParserRuleCall_2_0_1() { return cAspectOperationAspectQualifiedNameParserRuleCall_2_0_1; }
		
		//'(' (singlePropertyValue=PrimitiveValue | values+=PropertyValueAssignment (',' values+=PropertyValueAssignment)*) ')' |
		//';'
		public Alternatives getAlternatives_3() { return cAlternatives_3; }
		
		//'(' (singlePropertyValue=PrimitiveValue | values+=PropertyValueAssignment (',' values+=PropertyValueAssignment)*) ')'
		public Group getGroup_3_0() { return cGroup_3_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_3_0_0() { return cLeftParenthesisKeyword_3_0_0; }
		
		//singlePropertyValue=PrimitiveValue | values+=PropertyValueAssignment (',' values+=PropertyValueAssignment)*
		public Alternatives getAlternatives_3_0_1() { return cAlternatives_3_0_1; }
		
		//singlePropertyValue=PrimitiveValue
		public Assignment getSinglePropertyValueAssignment_3_0_1_0() { return cSinglePropertyValueAssignment_3_0_1_0; }
		
		//PrimitiveValue
		public RuleCall getSinglePropertyValuePrimitiveValueParserRuleCall_3_0_1_0_0() { return cSinglePropertyValuePrimitiveValueParserRuleCall_3_0_1_0_0; }
		
		//values+=PropertyValueAssignment (',' values+=PropertyValueAssignment)*
		public Group getGroup_3_0_1_1() { return cGroup_3_0_1_1; }
		
		//values+=PropertyValueAssignment
		public Assignment getValuesAssignment_3_0_1_1_0() { return cValuesAssignment_3_0_1_1_0; }
		
		//PropertyValueAssignment
		public RuleCall getValuesPropertyValueAssignmentParserRuleCall_3_0_1_1_0_0() { return cValuesPropertyValueAssignmentParserRuleCall_3_0_1_1_0_0; }
		
		//(',' values+=PropertyValueAssignment)*
		public Group getGroup_3_0_1_1_1() { return cGroup_3_0_1_1_1; }
		
		//','
		public Keyword getCommaKeyword_3_0_1_1_1_0() { return cCommaKeyword_3_0_1_1_1_0; }
		
		//values+=PropertyValueAssignment
		public Assignment getValuesAssignment_3_0_1_1_1_1() { return cValuesAssignment_3_0_1_1_1_1; }
		
		//PropertyValueAssignment
		public RuleCall getValuesPropertyValueAssignmentParserRuleCall_3_0_1_1_1_1_0() { return cValuesPropertyValueAssignmentParserRuleCall_3_0_1_1_1_1_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_3_0_2() { return cRightParenthesisKeyword_3_0_2; }
		
		//';'
		public Keyword getSemicolonKeyword_3_1() { return cSemicolonKeyword_3_1; }
	}
	public class PrimitiveValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fhdo.ddmm.operationdsl.OperationDsl.PrimitiveValue");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cNumericValueAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final RuleCall cNumericValueBIG_DECIMALTerminalRuleCall_0_0 = (RuleCall)cNumericValueAssignment_0.eContents().get(0);
		private final Assignment cBooleanValueAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final RuleCall cBooleanValueBOOLEANTerminalRuleCall_1_0 = (RuleCall)cBooleanValueAssignment_1.eContents().get(0);
		private final Assignment cStringValueAssignment_2 = (Assignment)cAlternatives.eContents().get(2);
		private final RuleCall cStringValueSTRINGTerminalRuleCall_2_0 = (RuleCall)cStringValueAssignment_2.eContents().get(0);
		
		//@ Override PrimitiveValue data::PrimitiveValue:
		//	numericValue=BIG_DECIMAL | booleanValue=BOOLEAN | stringValue=STRING;
		@Override public ParserRule getRule() { return rule; }
		
		//numericValue=BIG_DECIMAL | booleanValue=BOOLEAN | stringValue=STRING
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//numericValue=BIG_DECIMAL
		public Assignment getNumericValueAssignment_0() { return cNumericValueAssignment_0; }
		
		//BIG_DECIMAL
		public RuleCall getNumericValueBIG_DECIMALTerminalRuleCall_0_0() { return cNumericValueBIG_DECIMALTerminalRuleCall_0_0; }
		
		//booleanValue=BOOLEAN
		public Assignment getBooleanValueAssignment_1() { return cBooleanValueAssignment_1; }
		
		//BOOLEAN
		public RuleCall getBooleanValueBOOLEANTerminalRuleCall_1_0() { return cBooleanValueBOOLEANTerminalRuleCall_1_0; }
		
		//stringValue=STRING
		public Assignment getStringValueAssignment_2() { return cStringValueAssignment_2; }
		
		//STRING
		public RuleCall getStringValueSTRINGTerminalRuleCall_2_0() { return cStringValueSTRINGTerminalRuleCall_2_0; }
	}
	
	public class ImportTypeElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "de.fhdo.ddmm.operationdsl.OperationDsl.ImportType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cTECHNOLOGYEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cTECHNOLOGYTechnologyKeyword_0_0 = (Keyword)cTECHNOLOGYEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cMICROSERVICESEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cMICROSERVICESMicroservicesKeyword_1_0 = (Keyword)cMICROSERVICESEnumLiteralDeclaration_1.eContents().get(0);
		
		//@ Override enum ImportType returns service::ImportType:
		//	TECHNOLOGY='technology' | MICROSERVICES='microservices';
		public EnumRule getRule() { return rule; }
		
		//TECHNOLOGY='technology' | MICROSERVICES='microservices'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//TECHNOLOGY='technology'
		public EnumLiteralDeclaration getTECHNOLOGYEnumLiteralDeclaration_0() { return cTECHNOLOGYEnumLiteralDeclaration_0; }
		
		//'technology'
		public Keyword getTECHNOLOGYTechnologyKeyword_0_0() { return cTECHNOLOGYTechnologyKeyword_0_0; }
		
		//MICROSERVICES='microservices'
		public EnumLiteralDeclaration getMICROSERVICESEnumLiteralDeclaration_1() { return cMICROSERVICESEnumLiteralDeclaration_1; }
		
		//'microservices'
		public Keyword getMICROSERVICESMicroservicesKeyword_1_0() { return cMICROSERVICESMicroservicesKeyword_1_0; }
	}
	
	private final OperationModelElements pOperationModel;
	private final ImportTypeElements eImportType;
	private final ContainerElements pContainer;
	private final DeploymentTechnologyReferenceElements pDeploymentTechnologyReference;
	private final InfrastructureNodeElements pInfrastructureNode;
	private final InfrastructureTechnologyReferenceElements pInfrastructureTechnologyReference;
	private final ProtocolAndDataFormatElements pProtocolAndDataFormat;
	private final BasicEndpointElements pBasicEndpoint;
	private final ServiceDeploymentSpecificationElements pServiceDeploymentSpecification;
	private final ImportedMicroserviceElements pImportedMicroservice;
	private final PropertyValueAssignmentElements pPropertyValueAssignment;
	private final ImportedOperationAspectElements pImportedOperationAspect;
	private final PrimitiveValueElements pPrimitiveValue;
	
	private final Grammar grammar;
	
	private final ServiceDslGrammarAccess gaServiceDsl;
	
	private final TechnologyDslGrammarAccess gaTechnologyDsl;
	
	private final DataDslGrammarAccess gaDataDsl;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public OperationDslGrammarAccess(GrammarProvider grammarProvider,
			ServiceDslGrammarAccess gaServiceDsl,
			TechnologyDslGrammarAccess gaTechnologyDsl,
			DataDslGrammarAccess gaDataDsl,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaServiceDsl = gaServiceDsl;
		this.gaTechnologyDsl = gaTechnologyDsl;
		this.gaDataDsl = gaDataDsl;
		this.gaTerminals = gaTerminals;
		this.pOperationModel = new OperationModelElements();
		this.eImportType = new ImportTypeElements();
		this.pContainer = new ContainerElements();
		this.pDeploymentTechnologyReference = new DeploymentTechnologyReferenceElements();
		this.pInfrastructureNode = new InfrastructureNodeElements();
		this.pInfrastructureTechnologyReference = new InfrastructureTechnologyReferenceElements();
		this.pProtocolAndDataFormat = new ProtocolAndDataFormatElements();
		this.pBasicEndpoint = new BasicEndpointElements();
		this.pServiceDeploymentSpecification = new ServiceDeploymentSpecificationElements();
		this.pImportedMicroservice = new ImportedMicroserviceElements();
		this.pPropertyValueAssignment = new PropertyValueAssignmentElements();
		this.pImportedOperationAspect = new ImportedOperationAspectElements();
		this.pPrimitiveValue = new PrimitiveValueElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("de.fhdo.ddmm.operationdsl.OperationDsl".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public ServiceDslGrammarAccess getServiceDslGrammarAccess() {
		return gaServiceDsl;
	}
	
	public TechnologyDslGrammarAccess getTechnologyDslGrammarAccess() {
		return gaTechnologyDsl;
	}
	
	public DataDslGrammarAccess getDataDslGrammarAccess() {
		return gaDataDsl;
	}
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//OperationModel:
	//	imports+=Import+
	//	containers+=Container*
	//	infrastructureNodes+=InfrastructureNode*;
	public OperationModelElements getOperationModelAccess() {
		return pOperationModel;
	}
	
	public ParserRule getOperationModelRule() {
		return getOperationModelAccess().getRule();
	}
	
	//@ Override enum ImportType returns service::ImportType:
	//	TECHNOLOGY='technology' | MICROSERVICES='microservices';
	public ImportTypeElements getImportTypeAccess() {
		return eImportType;
	}
	
	public EnumRule getImportTypeRule() {
		return getImportTypeAccess().getRule();
	}
	
	//Container:
	//	('@' 'technology' '(' technologies+=[service::Import] ')')+
	//	'container' name=ID
	//	'deployment' 'technology' deploymentTechnology=DeploymentTechnologyReference ('with' 'operation' 'environment'
	//	operationEnvironment=[technology::OperationEnvironment|STRING])?
	//	'deploys' deployedServices+=ImportedMicroservice (',' deployedServices+=ImportedMicroservice)*
	//	'{' ('aspects' '{'
	//	aspects+=ImportedOperationAspect+
	//	'}')? ('default' 'values' '{' (defaultServicePropertyValues+=PropertyValueAssignment+
	//	| 'basic' 'endpoints' '{'
	//	defaultBasicEndpoints+=BasicEndpoint+
	//	'}' | defaultServicePropertyValues+=PropertyValueAssignment+
	//	'basic' 'endpoints' '{'
	//	defaultBasicEndpoints+=BasicEndpoint+
	//	'}')
	//	'}')?
	//	deploymentSpecifications+=ServiceDeploymentSpecification*
	//	'}';
	public ContainerElements getContainerAccess() {
		return pContainer;
	}
	
	public ParserRule getContainerRule() {
		return getContainerAccess().getRule();
	}
	
	//DeploymentTechnologyReference:
	//	^import=[service::Import] '::'
	//	deploymentTechnology=[technology::DeploymentTechnology|QualifiedName];
	public DeploymentTechnologyReferenceElements getDeploymentTechnologyReferenceAccess() {
		return pDeploymentTechnologyReference;
	}
	
	public ParserRule getDeploymentTechnologyReferenceRule() {
		return getDeploymentTechnologyReferenceAccess().getRule();
	}
	
	//InfrastructureNode:
	//	('@' 'technology' '(' technologies+=[service::Import] ')')+
	//	name=ID 'is' infrastructureTechnology=InfrastructureTechnologyReference ('with' 'operation' 'environment'
	//	operationEnvironment=[technology::OperationEnvironment|STRING])?
	//	'used' 'by' deployedServices+=ImportedMicroservice (',' deployedServices+=ImportedMicroservice)*
	//	'{' ('aspects' '{'
	//	aspects+=ImportedOperationAspect+
	//	'}')? ('default' 'values' '{'
	//	defaultServicePropertyValues+=PropertyValueAssignment+
	//	'}')? ('endpoints' '{'
	//	endpoints+=BasicEndpoint+
	//	'}')?
	//	deploymentSpecifications+=ServiceDeploymentSpecification*
	//	'}';
	public InfrastructureNodeElements getInfrastructureNodeAccess() {
		return pInfrastructureNode;
	}
	
	public ParserRule getInfrastructureNodeRule() {
		return getInfrastructureNodeAccess().getRule();
	}
	
	//InfrastructureTechnologyReference:
	//	^import=[service::Import] '::'
	//	infrastructureTechnology=[technology::InfrastructureTechnology|QualifiedName];
	public InfrastructureTechnologyReferenceElements getInfrastructureTechnologyReferenceAccess() {
		return pInfrastructureTechnologyReference;
	}
	
	public ParserRule getInfrastructureTechnologyReferenceRule() {
		return getInfrastructureTechnologyReferenceAccess().getRule();
	}
	
	//ProtocolAndDataFormat:
	//	technology=[service::Import] '::'
	//	protocol=[technology::Protocol|QualifiedName] ('/' dataFormat=[technology::DataFormat])?;
	public ProtocolAndDataFormatElements getProtocolAndDataFormatAccess() {
		return pProtocolAndDataFormat;
	}
	
	public ParserRule getProtocolAndDataFormatRule() {
		return getProtocolAndDataFormatAccess().getRule();
	}
	
	//BasicEndpoint:
	//	protocols+=ProtocolAndDataFormat (',' protocols+=ProtocolAndDataFormat)* ':'
	//	addresses+=STRING (',' addresses+=STRING)* ';';
	public BasicEndpointElements getBasicEndpointAccess() {
		return pBasicEndpoint;
	}
	
	public ParserRule getBasicEndpointRule() {
		return getBasicEndpointAccess().getRule();
	}
	
	//ServiceDeploymentSpecification:
	//	^import=[service::Import] '::' service=[ImportedMicroservice|QualifiedNameWithAtLeastOneLevel]
	//	'{'
	//	servicePropertyValues+=PropertyValueAssignment* ('basic' 'endpoints' '{'
	//	basicEndpoints+=BasicEndpoint+
	//	'}')?
	//	'}';
	public ServiceDeploymentSpecificationElements getServiceDeploymentSpecificationAccess() {
		return pServiceDeploymentSpecification;
	}
	
	public ParserRule getServiceDeploymentSpecificationRule() {
		return getServiceDeploymentSpecificationAccess().getRule();
	}
	
	//ImportedMicroservice:
	//	^import=[service::Import] '::'
	//	microservice=[service::Microservice|QualifiedNameWithAtLeastOneLevel];
	public ImportedMicroserviceElements getImportedMicroserviceAccess() {
		return pImportedMicroservice;
	}
	
	public ParserRule getImportedMicroserviceRule() {
		return getImportedMicroserviceAccess().getRule();
	}
	
	//@ Override PropertyValueAssignment technology::TechnologySpecificPropertyValueAssignment:
	//	property=[technology::TechnologySpecificProperty] '=' value=PrimitiveValue;
	public PropertyValueAssignmentElements getPropertyValueAssignmentAccess() {
		return pPropertyValueAssignment;
	}
	
	public ParserRule getPropertyValueAssignmentRule() {
		return getPropertyValueAssignmentAccess().getRule();
	}
	
	//ImportedOperationAspect:
	//	technology=[service::Import] '::' aspect=[technology::OperationAspect|QualifiedName] ('('
	//	(singlePropertyValue=PrimitiveValue
	//	| values+=PropertyValueAssignment (',' values+=PropertyValueAssignment)*) ')' |
	//	';');
	public ImportedOperationAspectElements getImportedOperationAspectAccess() {
		return pImportedOperationAspect;
	}
	
	public ParserRule getImportedOperationAspectRule() {
		return getImportedOperationAspectAccess().getRule();
	}
	
	//@ Override PrimitiveValue data::PrimitiveValue:
	//	numericValue=BIG_DECIMAL | booleanValue=BOOLEAN | stringValue=STRING;
	public PrimitiveValueElements getPrimitiveValueAccess() {
		return pPrimitiveValue;
	}
	
	public ParserRule getPrimitiveValueRule() {
		return getPrimitiveValueAccess().getRule();
	}
	
	//ServiceModel:
	//	imports+=Import*
	//	microservices+=Microservice+;
	public ServiceDslGrammarAccess.ServiceModelElements getServiceModelAccess() {
		return gaServiceDsl.getServiceModelAccess();
	}
	
	public ParserRule getServiceModelRule() {
		return getServiceModelAccess().getRule();
	}
	
	//Import:
	//	'import' importType=super::ImportType 'from' importURI=STRING 'as' name=ID;
	public ServiceDslGrammarAccess.ImportElements getImportAccess() {
		return gaServiceDsl.getImportAccess();
	}
	
	public ParserRule getImportRule() {
		return getImportAccess().getRule();
	}
	
	//enum Visibility:
	//	INTERNAL='internal' | ARCHITECTURE='architecture' | PUBLIC='public';
	public ServiceDslGrammarAccess.VisibilityElements getVisibilityAccess() {
		return gaServiceDsl.getVisibilityAccess();
	}
	
	public EnumRule getVisibilityRule() {
		return getVisibilityAccess().getRule();
	}
	
	//Microservice:
	//	('@' 'technology' '(' technologies+=[Import] ')')* (protocols+=ProtocolSpecification
	//	protocols+=ProtocolSpecification?)? ('@' 'endpoints' '(' endpoints+=Endpoint+ ')')?
	//	aspects+=ImportedServiceAspect*
	//	visibility=Visibility?
	//	type=MicroserviceType
	//	'microservice' name=QualifiedNameWithAtLeastOneLevel ('version' version=ID)?
	//	// TODO: Inheritance of microservices
	//	//('extends' super=[Microservice|QualifiedNameWithAtLeastOneLevel])?
	//	'{' ('required' 'microservices' '{'
	//	requiredMicroservices+=PossiblyImportedMicroservice (',' requiredMicroservices+=PossiblyImportedMicroservice)*
	//	'}')? ('required' 'interfaces' '{'
	//	requiredInterfaces+=PossiblyImportedInterface (',' requiredInterfaces+=PossiblyImportedInterface)*
	//	'}')? ('required' 'operations' '{'
	//	requiredOperations+=PossiblyImportedOperation (',' requiredOperations+=PossiblyImportedOperation)*
	//	'}')?
	//	interfaces+=Interface+
	//	'}';
	public ServiceDslGrammarAccess.MicroserviceElements getMicroserviceAccess() {
		return gaServiceDsl.getMicroserviceAccess();
	}
	
	public ParserRule getMicroserviceRule() {
		return getMicroserviceAccess().getRule();
	}
	
	//PossiblyImportedMicroservice:
	//	(^import=[Import] '::')? microservice=[Microservice|QualifiedName];
	public ServiceDslGrammarAccess.PossiblyImportedMicroserviceElements getPossiblyImportedMicroserviceAccess() {
		return gaServiceDsl.getPossiblyImportedMicroserviceAccess();
	}
	
	public ParserRule getPossiblyImportedMicroserviceRule() {
		return getPossiblyImportedMicroserviceAccess().getRule();
	}
	
	//PossiblyImportedInterface:
	//	(^import=[Import] '::')? interface=[Interface|QualifiedName];
	public ServiceDslGrammarAccess.PossiblyImportedInterfaceElements getPossiblyImportedInterfaceAccess() {
		return gaServiceDsl.getPossiblyImportedInterfaceAccess();
	}
	
	public ParserRule getPossiblyImportedInterfaceRule() {
		return getPossiblyImportedInterfaceAccess().getRule();
	}
	
	//PossiblyImportedOperation:
	//	(^import=[Import] '::')? operation=[Operation|QualifiedName];
	public ServiceDslGrammarAccess.PossiblyImportedOperationElements getPossiblyImportedOperationAccess() {
		return gaServiceDsl.getPossiblyImportedOperationAccess();
	}
	
	public ParserRule getPossiblyImportedOperationRule() {
		return getPossiblyImportedOperationAccess().getRule();
	}
	
	//Interface:
	//	(protocols+=ProtocolSpecification protocols+=ProtocolSpecification?)? ('@' 'endpoints' '(' endpoints+=Endpoint+ ')')?
	//	aspects+=ImportedServiceAspect*
	//	notImplemented?='noimpl'? visibility=Visibility? 'interface' name=ID '{'
	//	referredOperations+=ReferredOperation*
	//	operations+=Operation*
	//	'}';
	public ServiceDslGrammarAccess.InterfaceElements getInterfaceAccess() {
		return gaServiceDsl.getInterfaceAccess();
	}
	
	public ParserRule getInterfaceRule() {
		return getInterfaceAccess().getRule();
	}
	
	//Operation:
	//	(protocols+=ProtocolSpecification protocols+=ProtocolSpecification?)? ('@' 'endpoints' '(' endpoints+=Endpoint+ ')')?
	//	aspects+=ImportedServiceAspect*
	//	notImplemented?='noimpl'? visibility=Visibility? name=ID '('
	//	parameters+=Parameter? (',' parameters+=Parameter)*
	//	')' ';';
	public ServiceDslGrammarAccess.OperationElements getOperationAccess() {
		return gaServiceDsl.getOperationAccess();
	}
	
	public ParserRule getOperationRule() {
		return getOperationAccess().getRule();
	}
	
	//ReferredOperation:
	//	(protocols+=ProtocolSpecification protocols+=ProtocolSpecification?)? ('@' 'endpoints' '(' endpoints+=Endpoint+ ')')?
	//	aspects+=ImportedServiceAspect*
	//	'refers' operation=[Operation|QualifiedName] ';';
	public ServiceDslGrammarAccess.ReferredOperationElements getReferredOperationAccess() {
		return gaServiceDsl.getReferredOperationAccess();
	}
	
	public ParserRule getReferredOperationRule() {
		return getReferredOperationAccess().getRule();
	}
	
	//Parameter:
	//	aspects+=ImportedServiceAspect*
	//	communicationType=CommunicationType
	//	exchangePattern=ExchangePattern?
	//	communicatesFault?='fault'?
	//	name=ID
	//	optional?='?'?
	//	':' (primitiveType=PrimitiveType | importedType=ImportedType) ('=' initializedByOperation=PossiblyImportedOperation)?;
	public ServiceDslGrammarAccess.ParameterElements getParameterAccess() {
		return gaServiceDsl.getParameterAccess();
	}
	
	public ParserRule getParameterRule() {
		return getParameterAccess().getRule();
	}
	
	//ImportedType:
	//	^import=[Import] '::' type=[data::Type|QualifiedName];
	public ServiceDslGrammarAccess.ImportedTypeElements getImportedTypeAccess() {
		return gaServiceDsl.getImportedTypeAccess();
	}
	
	public ParserRule getImportedTypeRule() {
		return getImportedTypeAccess().getRule();
	}
	
	//ProtocolSpecification:
	//	'@' communicationType=CommunicationType '('
	//	protocol=ImportedProtocolAndDataFormat
	//	')';
	public ServiceDslGrammarAccess.ProtocolSpecificationElements getProtocolSpecificationAccess() {
		return gaServiceDsl.getProtocolSpecificationAccess();
	}
	
	public ParserRule getProtocolSpecificationRule() {
		return getProtocolSpecificationAccess().getRule();
	}
	
	//ImportedProtocolAndDataFormat:
	//	^import=[Import] '::' importedProtocol=[technology::Protocol|QualifiedName] ('/'
	//	dataFormat=[technology::DataFormat])?;
	public ServiceDslGrammarAccess.ImportedProtocolAndDataFormatElements getImportedProtocolAndDataFormatAccess() {
		return gaServiceDsl.getImportedProtocolAndDataFormatAccess();
	}
	
	public ParserRule getImportedProtocolAndDataFormatRule() {
		return getImportedProtocolAndDataFormatAccess().getRule();
	}
	
	//Endpoint:
	//	protocols+=ImportedProtocolAndDataFormat (',' protocols+=ImportedProtocolAndDataFormat)* ':'
	//	addresses+=STRING (',' addresses+=STRING)* ';';
	public ServiceDslGrammarAccess.EndpointElements getEndpointAccess() {
		return gaServiceDsl.getEndpointAccess();
	}
	
	public ParserRule getEndpointRule() {
		return getEndpointAccess().getRule();
	}
	
	//ImportedServiceAspect:
	//	'@' ^import=[Import] '::' importedAspect=[technology::ServiceAspect|QualifiedName] ('('
	//	(singlePropertyValue=super::PrimitiveValue
	//	| values+=super::PropertyValueAssignment (',' values+=super::PropertyValueAssignment)*)
	//	')')?;
	public ServiceDslGrammarAccess.ImportedServiceAspectElements getImportedServiceAspectAccess() {
		return gaServiceDsl.getImportedServiceAspectAccess();
	}
	
	public ParserRule getImportedServiceAspectRule() {
		return getImportedServiceAspectAccess().getRule();
	}
	
	//enum MicroserviceType:
	//	FUNCTIONAL='functional' | UTILITY='utility' | INFRASTRUCTURE='infrastructure';
	public ServiceDslGrammarAccess.MicroserviceTypeElements getMicroserviceTypeAccess() {
		return gaServiceDsl.getMicroserviceTypeAccess();
	}
	
	public EnumRule getMicroserviceTypeRule() {
		return getMicroserviceTypeAccess().getRule();
	}
	
	//QualifiedNameWithAtLeastOneLevel:
	//	ID '.' QualifiedName;
	public ServiceDslGrammarAccess.QualifiedNameWithAtLeastOneLevelElements getQualifiedNameWithAtLeastOneLevelAccess() {
		return gaServiceDsl.getQualifiedNameWithAtLeastOneLevelAccess();
	}
	
	public ParserRule getQualifiedNameWithAtLeastOneLevelRule() {
		return getQualifiedNameWithAtLeastOneLevelAccess().getRule();
	}
	
	//Technology:
	//	imports+=TechnologyImport*
	//	'technology' name=ID '{' ('types' '{' (primitiveTypes+=TechnologySpecificPrimitiveType |
	//	listTypes+=TechnologySpecificListType | dataStructures+=TechnologySpecificDataStructure)+ ('compatibility' 'matrix'
	//	'{'
	//	compatibilityEntries+=CompatibilityMatrixEntry+
	//	'}')?
	//	'}')? ('protocols' '{'
	//	protocols+=Protocol+
	//	'}')? ('service' 'aspects' '{'
	//	serviceAspects+=ServiceAspect+
	//	'}')? ('deployment' 'technologies' '{'
	//	deploymentTechnologies+=DeploymentTechnology+
	//	'}')? ('infrastructure' 'technologies' '{'
	//	infrastructureTechnologies+=InfrastructureTechnology+
	//	'}')? ('operation' 'aspects' '{'
	//	operationAspects+=OperationAspect+
	//	'}')?
	//	'}';
	public TechnologyDslGrammarAccess.TechnologyElements getTechnologyAccess() {
		return gaTechnologyDsl.getTechnologyAccess();
	}
	
	public ParserRule getTechnologyRule() {
		return getTechnologyAccess().getRule();
	}
	
	//TechnologyImport:
	//	'import' 'technology' 'from' importURI=STRING 'as' name=ID;
	public TechnologyDslGrammarAccess.TechnologyImportElements getTechnologyImportAccess() {
		return gaTechnologyDsl.getTechnologyImportAccess();
	}
	
	public ParserRule getTechnologyImportRule() {
		return getTechnologyImportAccess().getRule();
	}
	
	//Protocol:
	//	communicationType=CommunicationType
	//	name=ID
	//	'data' 'formats' dataFormats+=DataFormat (',' dataFormats+=DataFormat)* (default?='default' 'with' 'format'
	//	defaultFormat=[DataFormat])?
	//	';';
	public TechnologyDslGrammarAccess.ProtocolElements getProtocolAccess() {
		return gaTechnologyDsl.getProtocolAccess();
	}
	
	public ParserRule getProtocolRule() {
		return getProtocolAccess().getRule();
	}
	
	//enum ExchangePattern:
	//	IN='in' | OUT='out' | INOUT='inout';
	public TechnologyDslGrammarAccess.ExchangePatternElements getExchangePatternAccess() {
		return gaTechnologyDsl.getExchangePatternAccess();
	}
	
	public EnumRule getExchangePatternRule() {
		return getExchangePatternAccess().getRule();
	}
	
	//enum CommunicationType:
	//	SYNCHRONOUS='sync' | ASYNCHRONOUS='async';
	public TechnologyDslGrammarAccess.CommunicationTypeElements getCommunicationTypeAccess() {
		return gaTechnologyDsl.getCommunicationTypeAccess();
	}
	
	public EnumRule getCommunicationTypeRule() {
		return getCommunicationTypeAccess().getRule();
	}
	
	//DataFormat:
	//	formatName=ID;
	public TechnologyDslGrammarAccess.DataFormatElements getDataFormatAccess() {
		return gaTechnologyDsl.getDataFormatAccess();
	}
	
	public ParserRule getDataFormatRule() {
		return getDataFormatAccess().getRule();
	}
	
	//TechnologySpecificPrimitiveType:
	//	'primitive' 'type' name=ID ('based' 'on' basicBuiltinPrimitiveTypes+=PrimitiveType (','
	//	basicBuiltinPrimitiveTypes+=PrimitiveType)*
	//	default?='default'?)? ';';
	public TechnologyDslGrammarAccess.TechnologySpecificPrimitiveTypeElements getTechnologySpecificPrimitiveTypeAccess() {
		return gaTechnologyDsl.getTechnologySpecificPrimitiveTypeAccess();
	}
	
	public ParserRule getTechnologySpecificPrimitiveTypeRule() {
		return getTechnologySpecificPrimitiveTypeAccess().getRule();
	}
	
	//TechnologySpecificListType:
	//	'list' 'type' name=ID ';';
	public TechnologyDslGrammarAccess.TechnologySpecificListTypeElements getTechnologySpecificListTypeAccess() {
		return gaTechnologyDsl.getTechnologySpecificListTypeAccess();
	}
	
	public ParserRule getTechnologySpecificListTypeRule() {
		return getTechnologySpecificListTypeAccess().getRule();
	}
	
	//TechnologySpecificDataStructure:
	//	'structure' 'type' name=ID ';';
	public TechnologyDslGrammarAccess.TechnologySpecificDataStructureElements getTechnologySpecificDataStructureAccess() {
		return gaTechnologyDsl.getTechnologySpecificDataStructureAccess();
	}
	
	public ParserRule getTechnologySpecificDataStructureRule() {
		return getTechnologySpecificDataStructureAccess().getRule();
	}
	
	//PossiblyImportedTechnologySpecificType:
	//	(^import=[TechnologyImport] '::')? type=[data::Type|QualifiedName];
	public TechnologyDslGrammarAccess.PossiblyImportedTechnologySpecificTypeElements getPossiblyImportedTechnologySpecificTypeAccess() {
		return gaTechnologyDsl.getPossiblyImportedTechnologySpecificTypeAccess();
	}
	
	public ParserRule getPossiblyImportedTechnologySpecificTypeRule() {
		return getPossiblyImportedTechnologySpecificTypeAccess().getRule();
	}
	
	//enum CompatibilityDirection:
	//	MAPPING_TO_COMPATIBLE_TYPES='<-' |
	//	COMPATIBLE_TYPES_TO_MAPPING='->' |
	//	BIDIRECTIONAL='<->';
	public TechnologyDslGrammarAccess.CompatibilityDirectionElements getCompatibilityDirectionAccess() {
		return gaTechnologyDsl.getCompatibilityDirectionAccess();
	}
	
	public EnumRule getCompatibilityDirectionRule() {
		return getCompatibilityDirectionAccess().getRule();
	}
	
	//CompatibilityMatrixEntry:
	//	compatibleTypes+=PossiblyImportedTechnologySpecificType (',' compatibleTypes+=PossiblyImportedTechnologySpecificType)*
	//	direction=CompatibilityDirection
	//	mappingType=PossiblyImportedTechnologySpecificType
	//	';';
	public TechnologyDslGrammarAccess.CompatibilityMatrixEntryElements getCompatibilityMatrixEntryAccess() {
		return gaTechnologyDsl.getCompatibilityMatrixEntryAccess();
	}
	
	public ParserRule getCompatibilityMatrixEntryRule() {
		return getCompatibilityMatrixEntryAccess().getRule();
	}
	
	//DeploymentTechnology:
	//	name=ID '{'
	//	'operation' 'environments' '=' operationEnvironments+=OperationEnvironment (','
	//	operationEnvironments+=OperationEnvironment)*
	//	';' ('service' 'properties' '{'
	//	serviceProperties+=TechnologySpecificProperty+
	//	'}')?
	//	'}';
	public TechnologyDslGrammarAccess.DeploymentTechnologyElements getDeploymentTechnologyAccess() {
		return gaTechnologyDsl.getDeploymentTechnologyAccess();
	}
	
	public ParserRule getDeploymentTechnologyRule() {
		return getDeploymentTechnologyAccess().getRule();
	}
	
	//InfrastructureTechnology:
	//	name=ID '{'
	//	'operation' 'environments' '=' operationEnvironments+=OperationEnvironment (','
	//	operationEnvironments+=OperationEnvironment)*
	//	';' ('service' 'properties' '{'
	//	serviceProperties+=TechnologySpecificProperty+
	//	'}')?
	//	'}';
	public TechnologyDslGrammarAccess.InfrastructureTechnologyElements getInfrastructureTechnologyAccess() {
		return gaTechnologyDsl.getInfrastructureTechnologyAccess();
	}
	
	public ParserRule getInfrastructureTechnologyRule() {
		return getInfrastructureTechnologyAccess().getRule();
	}
	
	//OperationEnvironment:
	//	environmentName=STRING default?='default'?;
	public TechnologyDslGrammarAccess.OperationEnvironmentElements getOperationEnvironmentAccess() {
		return gaTechnologyDsl.getOperationEnvironmentAccess();
	}
	
	public ParserRule getOperationEnvironmentRule() {
		return getOperationEnvironmentAccess().getRule();
	}
	
	//TechnologySpecificProperty:
	//	type=PrimitiveType name=ID ('=' defaultValue=super::PrimitiveValue | mandatory?='mandatory')?
	//	';';
	public TechnologyDslGrammarAccess.TechnologySpecificPropertyElements getTechnologySpecificPropertyAccess() {
		return gaTechnologyDsl.getTechnologySpecificPropertyAccess();
	}
	
	public ParserRule getTechnologySpecificPropertyRule() {
		return getTechnologySpecificPropertyAccess().getRule();
	}
	
	//enum ServiceJoinPointType returns JoinPointType:
	//	MICROSERVICES='microservices' |
	//	INTERFACES='interfaces' |
	//	OPERATIONS='operations' |
	//	PARAMETERS='parameters' |
	//	DATA_FIELDS='fields';
	public TechnologyDslGrammarAccess.ServiceJoinPointTypeElements getServiceJoinPointTypeAccess() {
		return gaTechnologyDsl.getServiceJoinPointTypeAccess();
	}
	
	public EnumRule getServiceJoinPointTypeRule() {
		return getServiceJoinPointTypeAccess().getRule();
	}
	
	//enum OperationJoinPointType returns JoinPointType:
	//	CONTAINERS='containers' | INFRASTRUCTURE_NODES='infrastructure';
	public TechnologyDslGrammarAccess.OperationJoinPointTypeElements getOperationJoinPointTypeAccess() {
		return gaTechnologyDsl.getOperationJoinPointTypeAccess();
	}
	
	public EnumRule getOperationJoinPointTypeRule() {
		return getOperationJoinPointTypeAccess().getRule();
	}
	
	//ServiceAspectPointcut:
	//	forExchangePattern?='exchange_pattern' '=' exchangePattern=ExchangePattern |
	//	forCommunicationType?='communication_type' '=' communicationType=CommunicationType | forProtocol?='protocol' '='
	//	protocol=[Protocol] | forDataFormat?='data_format' '=' dataFormat=[DataFormat];
	public TechnologyDslGrammarAccess.ServiceAspectPointcutElements getServiceAspectPointcutAccess() {
		return gaTechnologyDsl.getServiceAspectPointcutAccess();
	}
	
	public ParserRule getServiceAspectPointcutRule() {
		return getServiceAspectPointcutAccess().getRule();
	}
	
	//ServiceAspectPointcutSelector:
	//	'selector' '('
	//	pointcuts+=ServiceAspectPointcut (',' pointcuts+=ServiceAspectPointcut)*
	//	')' ';';
	public TechnologyDslGrammarAccess.ServiceAspectPointcutSelectorElements getServiceAspectPointcutSelectorAccess() {
		return gaTechnologyDsl.getServiceAspectPointcutSelectorAccess();
	}
	
	public ParserRule getServiceAspectPointcutSelectorRule() {
		return getServiceAspectPointcutSelectorAccess().getRule();
	}
	
	//ServiceAspect:
	//	'aspect' name=ID
	//	'for' joinPoints+=ServiceJoinPointType (',' joinPoints+=ServiceJoinPointType)* ('{'
	//	pointcutSelectors+=ServiceAspectPointcutSelector*
	//	properties+=TechnologySpecificProperty*
	//	'}' |
	//	';');
	public TechnologyDslGrammarAccess.ServiceAspectElements getServiceAspectAccess() {
		return gaTechnologyDsl.getServiceAspectAccess();
	}
	
	public ParserRule getServiceAspectRule() {
		return getServiceAspectAccess().getRule();
	}
	
	//OperationAspect:
	//	'aspect' name=ID
	//	'for' joinPoints+=OperationJoinPointType (',' joinPoints+=OperationJoinPointType)* ('{'
	//	properties+=TechnologySpecificProperty*
	//	'}' |
	//	';');
	public TechnologyDslGrammarAccess.OperationAspectElements getOperationAspectAccess() {
		return gaTechnologyDsl.getOperationAspectAccess();
	}
	
	public ParserRule getOperationAspectRule() {
		return getOperationAspectAccess().getRule();
	}
	
	//DataModel:
	//	complexTypeImports+=ComplexTypeImport* (versions+=Version+ | contexts+=Context+ | complexTypes+=ComplexType+);
	public DataDslGrammarAccess.DataModelElements getDataModelAccess() {
		return gaDataDsl.getDataModelAccess();
	}
	
	public ParserRule getDataModelRule() {
		return getDataModelAccess().getRule();
	}
	
	///* For debugging purposes to test the type checker. May be safely removed in the future. */ /*AssignTest:
	//    (target=PossiblyImportedComplexType)
	//    '='
	//    (source=PossiblyImportedComplexType)
	//;*/ ComplexTypeImport:
	//	'import' 'datatypes' 'from' importURI=STRING 'as' name=ID;
	public DataDslGrammarAccess.ComplexTypeImportElements getComplexTypeImportAccess() {
		return gaDataDsl.getComplexTypeImportAccess();
	}
	
	public ParserRule getComplexTypeImportRule() {
		return getComplexTypeImportAccess().getRule();
	}
	
	//Version:
	//	'version' name=ID '{' (complexTypes+=ComplexType+ | contexts+=Context+)?
	//	'}';
	public DataDslGrammarAccess.VersionElements getVersionAccess() {
		return gaDataDsl.getVersionAccess();
	}
	
	public ParserRule getVersionRule() {
		return getVersionAccess().getRule();
	}
	
	//Context:
	//	'context' name=ID '{'
	//	complexTypes+=ComplexType+
	//	'}';
	public DataDslGrammarAccess.ContextElements getContextAccess() {
		return gaDataDsl.getContextAccess();
	}
	
	public ParserRule getContextRule() {
		return getContextAccess().getRule();
	}
	
	//ComplexType:
	//	DataStructure | ListType;
	public DataDslGrammarAccess.ComplexTypeElements getComplexTypeAccess() {
		return gaDataDsl.getComplexTypeAccess();
	}
	
	public ParserRule getComplexTypeRule() {
		return getComplexTypeAccess().getRule();
	}
	
	//DataStructure:
	//	'structure' name=ID ('extends' super=[DataStructure|QualifiedName])? '{' (dataFields+=DataField (','
	//	dataFields+=DataField)*)?
	//	'}';
	public DataDslGrammarAccess.DataStructureElements getDataStructureAccess() {
		return gaDataDsl.getDataStructureAccess();
	}
	
	public ParserRule getDataStructureRule() {
		return getDataStructureAccess().getRule();
	}
	
	//ListType:
	//	'list' name=ID '{'
	//	dataFields+=DataField (',' dataFields+=DataField)*
	//	'}'
	//	|
	//	'list' name=ID '{'
	//	primitiveType=PrimitiveType
	//	'}';
	public DataDslGrammarAccess.ListTypeElements getListTypeAccess() {
		return gaDataDsl.getListTypeAccess();
	}
	
	public ParserRule getListTypeRule() {
		return getListTypeAccess().getRule();
	}
	
	//DataField:
	//	^hidden?='hide'? (primitiveType=PrimitiveType | complexType=PossiblyImportedComplexType)?
	//	name=ID;
	public DataDslGrammarAccess.DataFieldElements getDataFieldAccess() {
		return gaDataDsl.getDataFieldAccess();
	}
	
	public ParserRule getDataFieldRule() {
		return getDataFieldAccess().getRule();
	}
	
	//PossiblyImportedComplexType:
	//	(^import=[ComplexTypeImport] '::')? complexType=[ComplexType|QualifiedName];
	public DataDslGrammarAccess.PossiblyImportedComplexTypeElements getPossiblyImportedComplexTypeAccess() {
		return gaDataDsl.getPossiblyImportedComplexTypeAccess();
	}
	
	public ParserRule getPossiblyImportedComplexTypeRule() {
		return getPossiblyImportedComplexTypeAccess().getRule();
	}
	
	//PrimitiveType:
	//	{PrimitiveBoolean} 'boolean' | {PrimitiveByte} 'byte' | {PrimitiveCharacter} 'char' | {PrimitiveDate} 'date' |
	//	{PrimitiveDouble} 'double' | {PrimitiveFloat} 'float' | {PrimitiveInteger} 'int' | {PrimitiveLong} 'long' |
	//	{PrimitiveShort} 'short' | {PrimitiveString} 'string';
	public DataDslGrammarAccess.PrimitiveTypeElements getPrimitiveTypeAccess() {
		return gaDataDsl.getPrimitiveTypeAccess();
	}
	
	public ParserRule getPrimitiveTypeRule() {
		return getPrimitiveTypeAccess().getRule();
	}
	
	//QualifiedName:
	//	ID ('.' ID)*;
	public DataDslGrammarAccess.QualifiedNameElements getQualifiedNameAccess() {
		return gaDataDsl.getQualifiedNameAccess();
	}
	
	public ParserRule getQualifiedNameRule() {
		return getQualifiedNameAccess().getRule();
	}
	
	//terminal BIG_DECIMAL returns ecore::EBigDecimal:
	//	'-'? INT ('.' INT)?;
	public TerminalRule getBIG_DECIMALRule() {
		return gaDataDsl.getBIG_DECIMALRule();
	}
	
	//terminal BOOLEAN returns ecore::EBoolean:
	//	'true' | 'false';
	public TerminalRule getBOOLEANRule() {
		return gaDataDsl.getBOOLEANRule();
	}
	
	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"' |
	//	"'" ('\\' . | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT:
	//	'/*'->'*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
