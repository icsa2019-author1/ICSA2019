module de.fhdo.ddmm.technology.mappingdsl.GenerateMappingDsl

import org.eclipse.xtext.xtext.generator.*
import org.eclipse.xtext.xtext.generator.model.project.*

var rootPath = ".."

Workflow {

    component = XtextGenerator {
        configuration = {
            project = StandardProjectConfig {
                baseName = "de.fhdo.ddmm.technology.mappingdsl"
                rootPath = rootPath
                runtimeTest = {
                    enabled = true
                }
                eclipsePlugin = {
                    enabled = true
                }
                eclipsePluginTest = {
                    enabled = true
                }
                createEclipseMetaData = true
            }
            code = {
                encoding = "UTF-8"
                lineDelimiter = "\n"
                fileHeader = "/*\n * generated by Xtext \${version}\n */"
            }
        }
        language = StandardLanguage {
            name = "de.fhdo.ddmm.technology.mappingdsl.MappingDsl"
            fileExtensions = "mapping"
            referencedResource = "platform:/resource/TechnologyMappingModel/model/TechnologyMappingModel.xcore"
            referencedResource = "platform:/resource/ServiceViewpointModel/model/ServiceViewpointModel.xcore"
            referencedResource = "platform:/resource/DataViewpointModel/model/DataViewpointModel.xcore"
            referencedResource = "platform:/resource/TechnologyDefinitionModel/model/TechnologyDefinitionModel.xcore"

            fragment = ecore2xtext.Ecore2XtextValueConverterServiceFragment2 auto-inject {}

            formatter = {
                generateStub = true
            }

            serializer = {
                generateStub = false
            }
            validator = {
                // composedCheck = "org.eclipse.xtext.validation.NamesAreUniqueValidator"
            }
        }
    }
}
